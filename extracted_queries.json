{"ResumeSubscription":"mutation ResumeSubscription($subscriptionID: String!) {\n  resumeSubscription(subscriptionID: $subscriptionID)\n}\n","RemoveScheduledPause":"mutation RemoveScheduledPause($subscriptionID: String!) {\n  removeScheduledPause(subscriptionID: $subscriptionID)\n}\n","UpdateResumeDate":"mutation UpdateResumeDate($date: DateTime!) {\n  updateResumeDate(date: $date)\n}\n","PauseSubscription":"mutation PauseSubscription($subscriptionID: String!, $pauseType: PauseType) {\n  pauseSubscription(subscriptionID: $subscriptionID, pauseType: $pauseType)\n}\n","BeamsData":"query BeamsData {\n  me {\n    id\n    user {\n      email\n      beamsToken\n      roles\n    }\n  }\n}\n","GetUser":"query GetUser {\n  me {\n    id\n    customer {\n      id\n      status\n      referralLink\n      onboardingSteps\n      user {\n        id\n        firstName\n        lastName\n        email\n        roles\n        pushNotification {\n          id\n          status\n        }\n      }\n      detail {\n        id\n        height\n        weight\n        topSizes\n        waistSizes\n        shippingAddress {\n          id\n          name\n          address1\n          address2\n          zipCode\n          city\n          state\n        }\n        stylePreferences {\n          id\n          styles\n          patterns\n          colors\n          brands\n        }\n      }\n      authorizedAt\n      admissions {\n        id\n        authorizationWindowClosesAt\n        authorizationsCount\n      }\n      membership {\n        plan {\n          itemCount\n        }\n      }\n    }\n  }\n}\n","updateUserPushNotificationStatus":"mutation updateUserPushNotificationStatus($newStatus: Boolean!) {\n  updateUserPushNotificationStatus(newStatus: $newStatus) {\n    id\n    status\n  }\n}\n","updateShippingAddress":"mutation updateShippingAddress($name: String!, $city: String!, $zipCode: String!, $state: String!, $address1: String!, $address2: String) {\n  addCustomerDetails(details: {shippingAddress: {create: {name: $name, city: $city, zipCode: $zipCode, state: $state, address1: $address1, address2: $address2}}}) {\n    id\n  }\n}\n","setStylePreferences":"mutation setStylePreferences($styles: [String!], $patterns: [String!], $colors: [String!], $brands: [String!]) {\n  addCustomerDetails(details: {stylePreferences: {create: {styles: {set: $styles}, patterns: {set: $patterns}, colors: {set: $colors}, brands: {set: $brands}}}}) {\n    id\n  }\n}\n","GetMembershipInfo":"query GetMembershipInfo {\n  me {\n    id\n    customer {\n      id\n      status\n      invoices {\n        id\n        subscriptionId\n        dueDate\n      }\n      membership {\n        id\n        subscriptionId\n        pauseRequests(orderBy: createdAt_DESC) {\n          id\n          resumeDate\n          pauseDate\n          pausePending\n        }\n        subscription {\n          id\n          nextBillingAt\n        }\n        plan {\n          id\n          price\n          description\n          itemCount\n          pauseWithItemsPrice\n        }\n      }\n    }\n    user {\n      id\n      firstName\n      lastName\n    }\n  }\n}\n","updatePaymentAndShipping":"mutation updatePaymentAndShipping($shippingAddress: AddressInput!, $phoneNumber: String!) {\n  updatePaymentAndShipping(shippingAddress: $shippingAddress, phoneNumber: $phoneNumber)\n}\n","applePayUpdatePaymentMethod":"mutation applePayUpdatePaymentMethod($planID: String!, $token: StripeToken!, $tokenType: String) {\n  applePayUpdatePaymentMethod(planID: $planID, token: $token, tokenType: $tokenType)\n}\n","GetUserPreferences":"query GetUserPreferences {\n  me {\n    id\n    customer {\n      id\n      user {\n        id\n        createdAt\n        firstName\n        lastName\n        email\n      }\n      detail {\n        id\n        height\n        weight\n        topSizes\n        waistSizes\n        phoneNumber\n        shippingAddress {\n          id\n          name\n          address1\n          address2\n          zipCode\n          city\n          state\n        }\n        stylePreferences {\n          id\n          styles\n          patterns\n          colors\n          brands\n        }\n      }\n    }\n  }\n}\n","ActiveReservation":"query ActiveReservation {\n  me {\n    id\n    activeReservation {\n      id\n      shipped\n      returnAt\n      createdAt\n      products {\n        id\n        seasonsUID\n        inventoryStatus\n        productStatus\n        productVariant {\n          id\n          size\n          product {\n            id\n            name\n            retailPrice\n            brand {\n              id\n              name\n            }\n            images(size: Thumb) {\n              id\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","ReturnItems":"mutation ReturnItems($items: [ID!]!) {\n  returnItems(items: $items) {\n    id\n  }\n}\n","ReturnedItems":"query ReturnedItems {\n  me {\n    id\n    activeReservation {\n      id\n      shipped\n      createdAt\n      returnedProducts {\n        ...ReturnYourBagConfirmationItem\n      }\n    }\n  }\n}\n\nfragment ReturnYourBagConfirmationItem on PhysicalProduct {\n  id\n  seasonsUID\n  inventoryStatus\n  productStatus\n  productVariant {\n    id\n    size\n    product {\n      id\n      name\n      retailPrice\n      brand {\n        id\n        name\n      }\n      images(size: Thumb) {\n        id\n        url\n      }\n    }\n  }\n}\n","SurpriseProductVariants":"query SurpriseProductVariants {\n  surpriseProductVariants {\n    id\n    isSaved\n    product {\n      id\n      slug\n      name\n      brand {\n        id\n        slug\n        name\n      }\n      images(size: Small) {\n        id\n        url\n      }\n    }\n  }\n  me {\n    id\n    bag {\n      id\n      productVariant {\n        id\n        product {\n          id\n        }\n      }\n      position\n      saved\n      status\n    }\n    customer {\n      id\n      membership {\n        id\n        plan {\n          id\n          itemCount\n        }\n      }\n    }\n  }\n}\n","GetBrands":"query GetBrands($orderBy: BrandOrderByInput!) {\n  brands(orderBy: $orderBy, where: {products_some: {id_not: null}, published: true}) {\n    id\n    slug\n    name\n  }\n}\n","CheckCoupon":"mutation CheckCoupon($couponID: String!) {\n  checkCoupon(couponID: $couponID) {\n    id\n    amount\n    percentage\n    type\n  }\n}\n","ApplePayCheckout":"mutation ApplePayCheckout($planID: String!, $token: StripeToken!, $tokenType: String, $couponID: String, $shipping: JSON) {\n  applePayCheckout(planID: $planID, token: $token, tokenType: $tokenType, couponID: $couponID, shipping: $shipping)\n}\n","ChangeCustomerPlan":"mutation ChangeCustomerPlan($planID: String!) {\n  changeCustomerPlan(planID: $planID)\n}\n","CreateAccount_NoCache_Query":"query CreateAccount_NoCache_Query {\n  me {\n    id\n    customer {\n      id\n      status\n      detail {\n        id\n        shippingAddress {\n          id\n          city\n          state\n          zipCode\n        }\n      }\n      user {\n        id\n        firstName\n        lastName\n      }\n      membership {\n        id\n        plan {\n          id\n          description\n          tier\n          itemCount\n        }\n      }\n      admissions {\n        id\n        admissable\n        authorizationsCount\n      }\n      coupon {\n        id\n        type\n        amount\n        percentage\n      }\n    }\n  }\n}\n","CreateAccount_Cached_Query":"query CreateAccount_Cached_Query($where: PaymentPlanWhereInput) {\n  paymentPlans(where: $where) {\n    id\n    name\n    description\n    tagline\n    price\n    planID\n    tier\n    itemCount\n  }\n  faq(sectionType: PaymentPlanPage) {\n    sections {\n      title\n      subsections {\n        title\n        text\n      }\n    }\n  }\n  howDidYouFindOutAboutUs: view(viewID: \"HowDidYouFindOutAboutUs\") {\n    id\n    title\n    caption\n    type\n    properties\n  }\n}\n","SignUp":"mutation SignUp($email: String!, $password: String!, $firstName: String!, $lastName: String!, $zipCode: String!, $discoveryReference: String) {\n  signup(email: $email, password: $password, firstName: $firstName, lastName: $lastName, details: {shippingAddress: {create: {zipCode: $zipCode}}, discoveryReference: $discoveryReference}) {\n    user {\n      id\n      email\n      firstName\n      lastName\n      beamsToken\n      roles\n      createdAt\n    }\n    customer {\n      id\n      status\n      detail {\n        id\n        shippingAddress {\n          id\n          state\n        }\n      }\n      bagItems {\n        id\n      }\n    }\n    token\n    refreshToken\n    expiresIn\n  }\n}\n","addMeasurements":"mutation addMeasurements($height: Int, $weight: CustomerDetailCreateweightInput, $topSizes: CustomerDetailCreatetopSizesInput, $waistSizes: CustomerDetailCreatewaistSizesInput) {\n  addCustomerDetails(details: {height: $height, weight: $weight, topSizes: $topSizes, waistSizes: $waistSizes}, event: CompletedWaitlistForm) {\n    id\n  }\n}\n","startSMSVerification":"mutation startSMSVerification($phoneNumber: String!) {\n  startSMSVerification(phoneNumber: $phoneNumber)\n}\n","triage":"mutation triage {\n  triageCustomer\n}\n","checkSMSVerification":"mutation checkSMSVerification($code: String!) {\n  checkSMSVerification(code: $code)\n}\n","Faq":"query Faq {\n  faq {\n    sections {\n      title\n      subsections {\n        title\n        text\n      }\n    }\n  }\n}\n","SubmitFitPic":"mutation SubmitFitPic($image: Upload!, $options: FitPicSubmissionOptionsInput) {\n  submitFitPic(image: $image, options: $options)\n}\n","GetInstagramHandle":"query GetInstagramHandle {\n  me {\n    id\n    customer {\n      id\n      detail {\n        instagramHandle\n      }\n    }\n  }\n}\n","GetCustomerFitPicItems":"query GetCustomerFitPicItems($fitPicID: ID!) {\n  fitPic(where: {id: $fitPicID}) {\n    id\n    image {\n      id\n      url\n    }\n    products {\n      id\n      name\n      brand {\n        id\n        name\n      }\n      images(size: Large) {\n        id\n        url\n      }\n    }\n  }\n}\n","AddViewedProduct":"mutation AddViewedProduct($item: ID!) {\n  addViewedProduct(item: $item) {\n    id\n    viewCount\n  }\n}\n","UpsertRestockNotification":"mutation UpsertRestockNotification($variantID: ID!, $shouldNotify: Boolean!) {\n  upsertRestockNotification(variantID: $variantID, shouldNotify: $shouldNotify) {\n    id\n  }\n}\n","AddProductRequest":"mutation AddProductRequest($reason: String!, $url: String!) {\n  addProductRequest(reason: $reason, url: $url) {\n    id\n    sku\n    brand\n    description\n    images\n    name\n    price\n    priceCurrency\n    productID\n    url\n  }\n}\n","GetReferralView":"query GetReferralView {\n  view(viewID: \"Referral\") {\n    id\n    title\n    caption\n    type\n    properties\n  }\n  me {\n    id\n    customer {\n      id\n      referralLink\n    }\n  }\n}\n","ReserveItems":"mutation ReserveItems($items: [ID!]!, $options: ReserveItemsOptions, $shippingCode: ShippingCode) {\n  reserveItems(items: $items, options: $options, shippingCode: $shippingCode) {\n    id\n  }\n}\n","GetCustomer":"query GetCustomer {\n  me {\n    id\n    user {\n      id\n      firstName\n      lastName\n      email\n    }\n    bag {\n      id\n      productVariant {\n        id\n        ...BagItemProductVariant\n      }\n    }\n    customer {\n      id\n      admissions {\n        id\n        allAccessEnabled\n      }\n      detail {\n        id\n        phoneNumber\n        shippingAddress {\n          id\n          address1\n          address2\n          city\n          state\n          zipCode\n          shippingOptions {\n            id\n            externalCost\n            averageDuration\n            shippingMethod {\n              id\n              code\n              displayText\n            }\n          }\n        }\n      }\n      billingInfo {\n        id\n        last_digits\n      }\n    }\n  }\n}\n\nfragment BagItemProductVariant on ProductVariant {\n  product {\n    id\n    slug\n    name\n    modelSize {\n      id\n      display\n    }\n    brand {\n      id\n      name\n      websiteUrl\n      logoImage {\n        id\n        url\n      }\n    }\n    images(size: Thumb) {\n      id\n      url\n    }\n    variants {\n      id\n      reservable\n      hasRestockNotification\n      reservable\n      displayShort\n      displayLong\n      price {\n        id\n        retailPrice\n      }\n    }\n  }\n  price {\n    id\n    buyNewPrice\n    buyNewEnabled\n    buyNewAvailableForSale\n    buyUsedAvailableForSale\n    buyUsedPrice\n    buyUsedEnabled\n  }\n}\n","GetCustomerReservationConfirmation":"query GetCustomerReservationConfirmation($reservationID: ID!) {\n  me {\n    id\n    user {\n      id\n      firstName\n      lastName\n      email\n    }\n    customer {\n      id\n      detail {\n        id\n        phoneNumber\n        shippingAddress {\n          id\n          slug\n          name\n          address1\n          address2\n          city\n          state\n          zipCode\n        }\n      }\n      reservations(where: {id: $reservationID}) {\n        id\n        reservationNumber\n        shippingOption {\n          id\n          externalCost\n          shippingMethod {\n            id\n            displayText\n          }\n        }\n        products {\n          id\n          productVariant {\n            id\n            product {\n              id\n              name\n              modelSize {\n                id\n                display\n              }\n              brand {\n                id\n                name\n              }\n              images {\n                id\n                url\n              }\n              variants {\n                id\n                size\n                displayShort\n                displayLong\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","GetCustomerReservationItems":"query GetCustomerReservationItems($reservationID: ID!) {\n  me {\n    id\n    customer {\n      id\n      reservations(where: {id: $reservationID}) {\n        id\n        products {\n          id\n          productVariant {\n            id\n            product {\n              id\n              name\n              brand {\n                id\n                name\n              }\n              images(size: Large) {\n                id\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","ReservationFeedback_Query":"query ReservationFeedback_Query {\n  reservationFeedback {\n    id\n    feedbacks {\n      id\n      isCompleted\n      review\n      rating\n      questions {\n        id\n        options\n        question\n        responses\n        type\n      }\n      variant {\n        id\n        product {\n          id\n          name\n          retailPrice\n          brand {\n            id\n            name\n          }\n          images(size: Thumb) {\n            id\n            url\n          }\n        }\n      }\n    }\n  }\n}\n","LogIn":"mutation LogIn($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    customer {\n      id\n      status\n      admissions {\n        id\n        admissable\n      }\n      bagItems {\n        id\n      }\n      detail {\n        id\n        shippingAddress {\n          id\n          state\n        }\n      }\n      membership {\n        plan {\n          itemCount\n        }\n      }\n    }\n    user {\n      id\n      createdAt\n      email\n      firstName\n      lastName\n      beamsToken\n      roles\n    }\n    token\n    refreshToken\n    expiresIn\n  }\n}\n","ResetPassword":"mutation ResetPassword($email: String!) {\n  resetPassword(email: $email) {\n    message\n  }\n}\n","GetProductsByTag":"query GetProductsByTag($tag: String!, $first: Int!, $skip: Int!, $orderBy: ProductOrderByInput!) {\n  products(where: {AND: [{tags_some: {name: $tag}}, {status: Available}]}, first: $first, skip: $skip, orderBy: $orderBy) {\n    id\n    slug\n    name\n    images {\n      id\n      url\n    }\n    variants {\n      id\n      total\n      reservable\n      nonReservable\n      reserved\n      isSaved\n      displayShort\n    }\n  }\n}\n"}