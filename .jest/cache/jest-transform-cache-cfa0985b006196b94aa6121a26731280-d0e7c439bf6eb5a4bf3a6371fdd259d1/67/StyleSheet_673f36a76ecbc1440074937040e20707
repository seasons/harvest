74d4caa399f692c35ba630007ef69575









'use strict';function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(source, true).forEach(function (key) {require("@babel/runtime/helpers/defineProperty")(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(source).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}















































































































































var hairlineWidth = require('PixelRatio').roundToNearestPixel(0.4);
if (hairlineWidth === 0) {
  hairlineWidth = 1 / require('PixelRatio').get();
}

var absoluteFill = {
  position: 'absolute',
  left: 0,
  right: 0,
  top: 0,
  bottom: 0 };

if (__DEV__) {
  Object.freeze(absoluteFill);
}













































module.exports = {



















  hairlineWidth: hairlineWidth,






  absoluteFill: absoluteFill,













  absoluteFillObject: absoluteFill,







  compose: function compose(
  style1,
  style2)
  {
    if (style1 != null && style2 != null) {
      return [style1, style2];
    } else {
      return style1 != null ? style1 : style2;
    }
  },








































  flatten: require('flattenStyle'),










  setStyleAttributePreprocessor: function setStyleAttributePreprocessor(
  property,
  process)
  {
    var value;

    if (require('ReactNativeStyleAttributes')[property] === true) {
      value = {};
    } else if (typeof require('ReactNativeStyleAttributes')[property] === 'object') {
      value = require('ReactNativeStyleAttributes')[property];
    } else {
      console.error(property + " is not a valid style attribute");
      return;
    }

    if (__DEV__ && typeof value.process === 'function') {
      console.warn("Overwriting " + property + " style attribute preprocessor");
    }

    require('ReactNativeStyleAttributes')[property] = _objectSpread({}, value, { process: process });
  },




  create: function create(obj) {



    if (__DEV__) {
      for (var _key in obj) {
        require('StyleSheetValidation').validateStyle(_key, obj);
        if (obj[_key]) {
          Object.freeze(obj[_key]);
        }
      }
    }
    return obj;
  } };