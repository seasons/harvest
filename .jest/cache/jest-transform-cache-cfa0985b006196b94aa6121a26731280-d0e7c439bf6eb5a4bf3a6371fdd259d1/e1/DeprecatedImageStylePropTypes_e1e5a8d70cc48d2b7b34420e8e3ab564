a274b9143663ff17afb226bfaf524493
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var DeprecatedColorPropType = require('DeprecatedColorPropType');

var DeprecatedLayoutPropTypes = require('DeprecatedLayoutPropTypes');

var ReactPropTypes = require('prop-types');

var DeprecatedShadowPropTypesIOS = require('DeprecatedShadowPropTypesIOS');

var DeprecatedTransformPropTypes = require('DeprecatedTransformPropTypes');

var ImageStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, {}, DeprecatedShadowPropTypesIOS, {}, DeprecatedTransformPropTypes, {
  resizeMode: ReactPropTypes.oneOf(['center', 'contain', 'cover', 'repeat', 'stretch']),
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: DeprecatedColorPropType,
  borderColor: DeprecatedColorPropType,
  borderWidth: ReactPropTypes.number,
  borderRadius: ReactPropTypes.number,
  overflow: ReactPropTypes.oneOf(['visible', 'hidden']),
  tintColor: DeprecatedColorPropType,
  opacity: ReactPropTypes.number,
  overlayColor: ReactPropTypes.string,
  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number
});

module.exports = ImageStylePropTypes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlcHJlY2F0ZWRJbWFnZVN0eWxlUHJvcFR5cGVzLmpzIl0sIm5hbWVzIjpbIkRlcHJlY2F0ZWRDb2xvclByb3BUeXBlIiwicmVxdWlyZSIsIkRlcHJlY2F0ZWRMYXlvdXRQcm9wVHlwZXMiLCJSZWFjdFByb3BUeXBlcyIsIkRlcHJlY2F0ZWRTaGFkb3dQcm9wVHlwZXNJT1MiLCJEZXByZWNhdGVkVHJhbnNmb3JtUHJvcFR5cGVzIiwiSW1hZ2VTdHlsZVByb3BUeXBlcyIsInJlc2l6ZU1vZGUiLCJvbmVPZiIsImJhY2tmYWNlVmlzaWJpbGl0eSIsImJhY2tncm91bmRDb2xvciIsImJvcmRlckNvbG9yIiwiYm9yZGVyV2lkdGgiLCJudW1iZXIiLCJib3JkZXJSYWRpdXMiLCJvdmVyZmxvdyIsInRpbnRDb2xvciIsIm9wYWNpdHkiLCJvdmVybGF5Q29sb3IiLCJzdHJpbmciLCJib3JkZXJUb3BMZWZ0UmFkaXVzIiwiYm9yZGVyVG9wUmlnaHRSYWRpdXMiLCJib3JkZXJCb3R0b21MZWZ0UmFkaXVzIiwiYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFTQTs7Ozs7Ozs7OztBQUVBLElBQU1BLHVCQUF1QixHQUFHQyxPQUFPLENBQUMseUJBQUQsQ0FBdkM7O0FBQ0EsSUFBTUMseUJBQXlCLEdBQUdELE9BQU8sQ0FBQywyQkFBRCxDQUF6Qzs7QUFDQSxJQUFNRSxjQUFjLEdBQUdGLE9BQU8sQ0FBQyxZQUFELENBQTlCOztBQUNBLElBQU1HLDRCQUE0QixHQUFHSCxPQUFPLENBQUMsOEJBQUQsQ0FBNUM7O0FBQ0EsSUFBTUksNEJBQTRCLEdBQUdKLE9BQU8sQ0FBQyw4QkFBRCxDQUE1Qzs7QUFFQSxJQUFNSyxtQkFBbUIscUJBQ3BCSix5QkFEb0IsTUFFcEJFLDRCQUZvQixNQUdwQkMsNEJBSG9CO0FBSXZCRSxFQUFBQSxVQUFVLEVBQUVKLGNBQWMsQ0FBQ0ssS0FBZixDQUFxQixDQUMvQixRQUQrQixFQUUvQixTQUYrQixFQUcvQixPQUgrQixFQUkvQixRQUorQixFQUsvQixTQUwrQixDQUFyQixDQUpXO0FBV3ZCQyxFQUFBQSxrQkFBa0IsRUFBRU4sY0FBYyxDQUFDSyxLQUFmLENBQXFCLENBQUMsU0FBRCxFQUFZLFFBQVosQ0FBckIsQ0FYRztBQVl2QkUsRUFBQUEsZUFBZSxFQUFFVix1QkFaTTtBQWF2QlcsRUFBQUEsV0FBVyxFQUFFWCx1QkFiVTtBQWN2QlksRUFBQUEsV0FBVyxFQUFFVCxjQUFjLENBQUNVLE1BZEw7QUFldkJDLEVBQUFBLFlBQVksRUFBRVgsY0FBYyxDQUFDVSxNQWZOO0FBZ0J2QkUsRUFBQUEsUUFBUSxFQUFFWixjQUFjLENBQUNLLEtBQWYsQ0FBcUIsQ0FBQyxTQUFELEVBQVksUUFBWixDQUFyQixDQWhCYTtBQXFCdkJRLEVBQUFBLFNBQVMsRUFBRWhCLHVCQXJCWTtBQXNCdkJpQixFQUFBQSxPQUFPLEVBQUVkLGNBQWMsQ0FBQ1UsTUF0QkQ7QUF3Q3ZCSyxFQUFBQSxZQUFZLEVBQUVmLGNBQWMsQ0FBQ2dCLE1BeENOO0FBMkN2QkMsRUFBQUEsbUJBQW1CLEVBQUVqQixjQUFjLENBQUNVLE1BM0NiO0FBNEN2QlEsRUFBQUEsb0JBQW9CLEVBQUVsQixjQUFjLENBQUNVLE1BNUNkO0FBNkN2QlMsRUFBQUEsc0JBQXNCLEVBQUVuQixjQUFjLENBQUNVLE1BN0NoQjtBQThDdkJVLEVBQUFBLHVCQUF1QixFQUFFcEIsY0FBYyxDQUFDVTtBQTlDakIsRUFBekI7O0FBaURBVyxNQUFNLENBQUNDLE9BQVAsR0FBaUJuQixtQkFBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93XG4gKiBAZm9ybWF0XG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgRGVwcmVjYXRlZENvbG9yUHJvcFR5cGUgPSByZXF1aXJlKCdEZXByZWNhdGVkQ29sb3JQcm9wVHlwZScpO1xuY29uc3QgRGVwcmVjYXRlZExheW91dFByb3BUeXBlcyA9IHJlcXVpcmUoJ0RlcHJlY2F0ZWRMYXlvdXRQcm9wVHlwZXMnKTtcbmNvbnN0IFJlYWN0UHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuY29uc3QgRGVwcmVjYXRlZFNoYWRvd1Byb3BUeXBlc0lPUyA9IHJlcXVpcmUoJ0RlcHJlY2F0ZWRTaGFkb3dQcm9wVHlwZXNJT1MnKTtcbmNvbnN0IERlcHJlY2F0ZWRUcmFuc2Zvcm1Qcm9wVHlwZXMgPSByZXF1aXJlKCdEZXByZWNhdGVkVHJhbnNmb3JtUHJvcFR5cGVzJyk7XG5cbmNvbnN0IEltYWdlU3R5bGVQcm9wVHlwZXMgPSB7XG4gIC4uLkRlcHJlY2F0ZWRMYXlvdXRQcm9wVHlwZXMsXG4gIC4uLkRlcHJlY2F0ZWRTaGFkb3dQcm9wVHlwZXNJT1MsXG4gIC4uLkRlcHJlY2F0ZWRUcmFuc2Zvcm1Qcm9wVHlwZXMsXG4gIHJlc2l6ZU1vZGU6IFJlYWN0UHJvcFR5cGVzLm9uZU9mKFtcbiAgICAnY2VudGVyJyxcbiAgICAnY29udGFpbicsXG4gICAgJ2NvdmVyJyxcbiAgICAncmVwZWF0JyxcbiAgICAnc3RyZXRjaCcsXG4gIF0pLFxuICBiYWNrZmFjZVZpc2liaWxpdHk6IFJlYWN0UHJvcFR5cGVzLm9uZU9mKFsndmlzaWJsZScsICdoaWRkZW4nXSksXG4gIGJhY2tncm91bmRDb2xvcjogRGVwcmVjYXRlZENvbG9yUHJvcFR5cGUsXG4gIGJvcmRlckNvbG9yOiBEZXByZWNhdGVkQ29sb3JQcm9wVHlwZSxcbiAgYm9yZGVyV2lkdGg6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgYm9yZGVyUmFkaXVzOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIG92ZXJmbG93OiBSZWFjdFByb3BUeXBlcy5vbmVPZihbJ3Zpc2libGUnLCAnaGlkZGVuJ10pLFxuXG4gIC8qKlxuICAgKiBDaGFuZ2VzIHRoZSBjb2xvciBvZiBhbGwgdGhlIG5vbi10cmFuc3BhcmVudCBwaXhlbHMgdG8gdGhlIHRpbnRDb2xvci5cbiAgICovXG4gIHRpbnRDb2xvcjogRGVwcmVjYXRlZENvbG9yUHJvcFR5cGUsXG4gIG9wYWNpdHk6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgLyoqXG4gICAqIFdoZW4gdGhlIGltYWdlIGhhcyByb3VuZGVkIGNvcm5lcnMsIHNwZWNpZnlpbmcgYW4gb3ZlcmxheUNvbG9yIHdpbGxcbiAgICogY2F1c2UgdGhlIHJlbWFpbmluZyBzcGFjZSBpbiB0aGUgY29ybmVycyB0byBiZSBmaWxsZWQgd2l0aCBhIHNvbGlkIGNvbG9yLlxuICAgKiBUaGlzIGlzIHVzZWZ1bCBpbiBjYXNlcyB3aGljaCBhcmUgbm90IHN1cHBvcnRlZCBieSB0aGUgQW5kcm9pZFxuICAgKiBpbXBsZW1lbnRhdGlvbiBvZiByb3VuZGVkIGNvcm5lcnM6XG4gICAqICAgLSBDZXJ0YWluIHJlc2l6ZSBtb2Rlcywgc3VjaCBhcyAnY29udGFpbidcbiAgICogICAtIEFuaW1hdGVkIEdJRnNcbiAgICpcbiAgICogQSB0eXBpY2FsIHdheSB0byB1c2UgdGhpcyBwcm9wIGlzIHdpdGggaW1hZ2VzIGRpc3BsYXllZCBvbiBhIHNvbGlkXG4gICAqIGJhY2tncm91bmQgYW5kIHNldHRpbmcgdGhlIGBvdmVybGF5Q29sb3JgIHRvIHRoZSBzYW1lIGNvbG9yXG4gICAqIGFzIHRoZSBiYWNrZ3JvdW5kLlxuICAgKlxuICAgKiBGb3IgZGV0YWlscyBvZiBob3cgdGhpcyB3b3JrcyB1bmRlciB0aGUgaG9vZCwgc2VlXG4gICAqIGh0dHA6Ly9mcmVzY29saWIub3JnL2RvY3Mvcm91bmRlZC1jb3JuZXJzLWFuZC1jaXJjbGVzLmh0bWxcbiAgICpcbiAgICogQHBsYXRmb3JtIGFuZHJvaWRcbiAgICovXG4gIG92ZXJsYXlDb2xvcjogUmVhY3RQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8vIEFuZHJvaWQtU3BlY2lmaWMgc3R5bGVzXG4gIGJvcmRlclRvcExlZnRSYWRpdXM6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgYm9yZGVyVG9wUmlnaHRSYWRpdXM6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgYm9yZGVyQm90dG9tTGVmdFJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBib3JkZXJCb3R0b21SaWdodFJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJbWFnZVN0eWxlUHJvcFR5cGVzO1xuIl19