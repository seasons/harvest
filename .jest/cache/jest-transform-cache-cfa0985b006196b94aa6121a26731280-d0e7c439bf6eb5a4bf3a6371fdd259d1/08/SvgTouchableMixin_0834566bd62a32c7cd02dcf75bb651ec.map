{"version":3,"sources":["SvgTouchableMixin.ts"],"names":["PRESS_RETENTION_OFFSET","top","left","right","bottom","Mixin","Touchable","touchableHandleStartShouldSetResponder","touchableHandleResponderTerminationRequest","touchableHandleResponderGrant","touchableHandleResponderMove","touchableHandleResponderRelease","touchableHandleResponderTerminate","onStartShouldSetResponder","onResponderTerminationRequest","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","touchableHandlePress","onPress","touchableHandleActivePressIn","onPressIn","touchableHandleActivePressOut","onPressOut","touchableHandleLongPress","onLongPress","touchableGetPressRectOffset","pressRetentionOffset","touchableGetHitSlop","hitSlop","touchableGetHighlightDelayMS","delayPressIn","touchableGetLongPressDelayMS","delayLongPress","touchableGetPressOutDelayMS","delayPressOut"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport { Touchable, GestureResponderEvent } from 'react-native';\nconst PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };\n// @ts-ignore\nconst { Mixin } = Touchable;\nconst {\n  touchableHandleStartShouldSetResponder,\n  touchableHandleResponderTerminationRequest,\n  touchableHandleResponderGrant,\n  touchableHandleResponderMove,\n  touchableHandleResponderRelease,\n  touchableHandleResponderTerminate,\n} = Mixin;\n\nexport default {\n  ...Mixin,\n\n  touchableHandleStartShouldSetResponder: function(e: GestureResponderEvent) {\n    const { onStartShouldSetResponder } = this.props;\n    if (onStartShouldSetResponder) {\n      return onStartShouldSetResponder(e);\n    } else {\n      return touchableHandleStartShouldSetResponder.call(this, e);\n    }\n  },\n\n  touchableHandleResponderTerminationRequest: function(\n    e: GestureResponderEvent,\n  ) {\n    const { onResponderTerminationRequest } = this.props;\n    if (onResponderTerminationRequest) {\n      return onResponderTerminationRequest(e);\n    } else {\n      return touchableHandleResponderTerminationRequest.call(this, e);\n    }\n  },\n\n  touchableHandleResponderGrant: function(e: GestureResponderEvent) {\n    const { onResponderGrant } = this.props;\n    if (onResponderGrant) {\n      return onResponderGrant(e);\n    } else {\n      return touchableHandleResponderGrant.call(this, e);\n    }\n  },\n\n  touchableHandleResponderMove: function(e: GestureResponderEvent) {\n    const { onResponderMove } = this.props;\n    if (onResponderMove) {\n      return onResponderMove(e);\n    } else {\n      return touchableHandleResponderMove.call(this, e);\n    }\n  },\n\n  touchableHandleResponderRelease: function(e: GestureResponderEvent) {\n    const { onResponderRelease } = this.props;\n    if (onResponderRelease) {\n      return onResponderRelease(e);\n    } else {\n      return touchableHandleResponderRelease.call(this, e);\n    }\n  },\n\n  touchableHandleResponderTerminate: function(e: GestureResponderEvent) {\n    const { onResponderTerminate } = this.props;\n    if (onResponderTerminate) {\n      return onResponderTerminate(e);\n    } else {\n      return touchableHandleResponderTerminate.call(this, e);\n    }\n  },\n\n  touchableHandlePress: function(e: GestureResponderEvent) {\n    const { onPress } = this.props;\n    onPress && onPress(e);\n  },\n\n  touchableHandleActivePressIn: function(e: GestureResponderEvent) {\n    const { onPressIn } = this.props;\n    onPressIn && onPressIn(e);\n  },\n\n  touchableHandleActivePressOut: function(e: GestureResponderEvent) {\n    const { onPressOut } = this.props;\n    onPressOut && onPressOut(e);\n  },\n\n  touchableHandleLongPress: function(e: GestureResponderEvent) {\n    const { onLongPress } = this.props;\n    onLongPress && onLongPress(e);\n  },\n\n  touchableGetPressRectOffset: function() {\n    const { pressRetentionOffset } = this.props;\n    return pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop: function() {\n    const { hitSlop } = this.props;\n    return hitSlop;\n  },\n\n  touchableGetHighlightDelayMS: function() {\n    const { delayPressIn } = this.props;\n    return delayPressIn || 0;\n  },\n\n  touchableGetLongPressDelayMS: function() {\n    const { delayLongPress } = this.props;\n    return delayLongPress === 0 ? 0 : delayLongPress || 500;\n  },\n\n  touchableGetPressOutDelayMS: function() {\n    const { delayPressOut } = this.props;\n    return delayPressOut || 0;\n  },\n};\n"]}