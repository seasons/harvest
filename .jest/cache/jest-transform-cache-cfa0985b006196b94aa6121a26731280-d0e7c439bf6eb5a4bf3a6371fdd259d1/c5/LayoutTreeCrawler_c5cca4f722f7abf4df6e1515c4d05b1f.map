{"version":3,"sources":["LayoutTreeCrawler.js"],"names":["Object","defineProperty","exports","value","_","require","LayoutType_1","LayoutTreeCrawler","store","optionsProcessor","crawl","bind","node","type","LayoutType","Component","handleComponent","processOptions","data","options","children","forEach","assertComponentDataName","savePropsToStore","applyStaticOptions","passProps","undefined","setPropsForId","id","component","merge","staticOptionsIfPossible","foundReactGenerator","getComponentClassForName","name","reactComponent","isComponentWithOptions","isFunction","Error"],"mappings":"AAAA;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAMC,YAAY,GAAGD,OAAO,gBAA5B;;IACME,iB;AACF,6BAAYC,KAAZ,EAAmBC,gBAAnB,EAAqC;AAAA;AACjC,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,gBAAL,GAAwBA,gBAAxB;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACH;;;;0BACKC,I,EAAM;AACR,UAAIA,IAAI,CAACC,IAAL,KAAcP,YAAY,CAACQ,UAAb,CAAwBC,SAA1C,EAAqD;AACjD,aAAKC,eAAL,CAAqBJ,IAArB;AACH;;AACD,WAAKH,gBAAL,CAAsBQ,cAAtB,CAAqCL,IAAI,CAACM,IAAL,CAAUC,OAA/C;AACAP,MAAAA,IAAI,CAACQ,QAAL,CAAcC,OAAd,CAAsB,KAAKX,KAA3B;AACH;;;oCACeE,I,EAAM;AAClB,WAAKU,uBAAL,CAA6BV,IAA7B;AACA,WAAKW,gBAAL,CAAsBX,IAAtB;AACA,WAAKY,kBAAL,CAAwBZ,IAAxB;AACAA,MAAAA,IAAI,CAACM,IAAL,CAAUO,SAAV,GAAsBC,SAAtB;AACH;;;qCACgBd,I,EAAM;AACnB,WAAKJ,KAAL,CAAWmB,aAAX,CAAyBf,IAAI,CAACgB,EAA9B,EAAkChB,IAAI,CAACM,IAAL,CAAUO,SAA5C;AACH;;;2CACsBI,S,EAAW;AAC9B,aAAOA,SAAS,CAACV,OAAV,KAAsBO,SAA7B;AACH;;;uCACkBd,I,EAAM;AACrBA,MAAAA,IAAI,CAACM,IAAL,CAAUC,OAAV,GAAoBf,CAAC,CAAC0B,KAAF,CAAQ,EAAR,EAAY,KAAKC,uBAAL,CAA6BnB,IAA7B,CAAZ,EAAgDA,IAAI,CAACM,IAAL,CAAUC,OAA1D,CAApB;AACH;;;4CACuBP,I,EAAM;AAC1B,UAAMoB,mBAAmB,GAAG,KAAKxB,KAAL,CAAWyB,wBAAX,CAAoCrB,IAAI,CAACM,IAAL,CAAUgB,IAA9C,CAA5B;AACA,UAAMC,cAAc,GAAGH,mBAAmB,GAAGA,mBAAmB,EAAtB,GAA2BN,SAArE;;AACA,UAAIS,cAAc,IAAI,KAAKC,sBAAL,CAA4BD,cAA5B,CAAtB,EAAmE;AAC/D,eAAO/B,CAAC,CAACiC,UAAF,CAAaF,cAAc,CAAChB,OAA5B,IAAuCgB,cAAc,CAAChB,OAAf,CAAuBP,IAAI,CAACM,IAAL,CAAUO,SAAV,IAAuB,EAA9C,CAAvC,GAA2FU,cAAc,CAAChB,OAAjH;AACH;;AACD,aAAO,EAAP;AACH;;;4CACuBU,S,EAAW;AAC/B,UAAI,CAACA,SAAS,CAACX,IAAV,CAAegB,IAApB,EAA0B;AACtB,cAAM,IAAII,KAAJ,CAAU,6BAAV,CAAN;AACH;AACJ;;;;;AAELpC,OAAO,CAACK,iBAAR,GAA4BA,iBAA5B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nconst LayoutType_1 = require(\"./LayoutType\");\nclass LayoutTreeCrawler {\n    constructor(store, optionsProcessor) {\n        this.store = store;\n        this.optionsProcessor = optionsProcessor;\n        this.crawl = this.crawl.bind(this);\n    }\n    crawl(node) {\n        if (node.type === LayoutType_1.LayoutType.Component) {\n            this.handleComponent(node);\n        }\n        this.optionsProcessor.processOptions(node.data.options);\n        node.children.forEach(this.crawl);\n    }\n    handleComponent(node) {\n        this.assertComponentDataName(node);\n        this.savePropsToStore(node);\n        this.applyStaticOptions(node);\n        node.data.passProps = undefined;\n    }\n    savePropsToStore(node) {\n        this.store.setPropsForId(node.id, node.data.passProps);\n    }\n    isComponentWithOptions(component) {\n        return component.options !== undefined;\n    }\n    applyStaticOptions(node) {\n        node.data.options = _.merge({}, this.staticOptionsIfPossible(node), node.data.options);\n    }\n    staticOptionsIfPossible(node) {\n        const foundReactGenerator = this.store.getComponentClassForName(node.data.name);\n        const reactComponent = foundReactGenerator ? foundReactGenerator() : undefined;\n        if (reactComponent && this.isComponentWithOptions(reactComponent)) {\n            return _.isFunction(reactComponent.options) ? reactComponent.options(node.data.passProps || {}) : reactComponent.options;\n        }\n        return {};\n    }\n    assertComponentDataName(component) {\n        if (!component.data.name) {\n            throw new Error('Missing component data.name');\n        }\n    }\n}\nexports.LayoutTreeCrawler = LayoutTreeCrawler;\n"]}