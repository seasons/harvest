{"version":3,"sources":["Bag.tsx"],"names":["SECTION_HEIGHT","Bag","bag","dispatch","bagItems","items","bagIsEmpty","length","remainingPieces","handleRemove","id","handleBagPlusPress","emptyBagItem","index","height","flex","bagItem","item","imageURL","images","url","brand","name","modelSize","type","width","uri","renderItem","_item","String"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Container } from \"Components/Container\"\nimport { Sans } from \"Components/Typography\"\nimport { EmptyState } from \"./Components.tsx\"\nimport { Theme, Spacer, Flex, Box, Separator } from \"App/Components\"\nimport { Text, Image, FlatList } from \"react-native\"\nimport { useStateValue } from \"App/helpers/StateProvider\"\nimport { TouchableWithoutFeedback } from \"react-native\"\nimport { color } from \"App/utils\"\nimport { BagPlus } from \"../../../assets/svgs\"\nimport { goToBrowse } from \"App/Navigation\"\n\nconst SECTION_HEIGHT = 200\n\nexport const Bag = () => {\n  const [{ bag }, dispatch] = useStateValue()\n  const bagItems = bag\n  // const [bagItems, setBagItems] = useState([])\n  // useEffect(() => {\n  //   const bagArray = bag.items.forEach(item => {\n  //     bagItems.push({ type: \"item\", ...item })\n  //   })\n  //   for (let i = 0; i < remainingPieces; i++) {\n  //     bagItems.push({ type: \"empty\" })\n  //   }\n  //   setBagItems(bagArray)\n  //   console.log(\"bagitems????\", bagItems)\n  // }, [bag])\n\n  if (!bag || !bag.items) {\n    return null\n  }\n\n  const bagIsEmpty = bag.items.length === 0\n  const remainingPieces = 3 - bag.items.length\n\n  const handleRemove = id => {\n    return id\n  }\n\n  const handleBagPlusPress = () => {\n    return goToBrowse()\n  }\n\n  const emptyBagItem = index => {\n    return (\n      <Box p={2} style={{ height: SECTION_HEIGHT }}>\n        <Flex style={{ flex: 2 }} flexWrap=\"nowrap\" flexDirection=\"column\" justifyContent=\"space-between\">\n          <Box>\n            <Sans size=\"3\">{index + 1}.</Sans>\n            <Sans size=\"2\" color=\"gray\">\n              Add your item\n            </Sans>\n          </Box>\n          <Flex style={{ flex: 2 }} flexDirection=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n            <TouchableWithoutFeedback onPress={() => handleBagPlusPress()}>\n              <BagPlus />\n            </TouchableWithoutFeedback>\n            <Spacer mr={3} />\n          </Flex>\n        </Flex>\n      </Box>\n    )\n  }\n\n  const bagItem = (item, index) => {\n    const imageURL = item.images && item.images.length && item.images[0].url\n    return (\n      <Box p={2} key={item.id} style={{ height: SECTION_HEIGHT }}>\n        <Flex flexDirection=\"row\" style={{ flex: 1 }}>\n          <Flex style={{ flex: 2 }} flexWrap=\"nowrap\" flexDirection=\"column\" justifyContent=\"space-between\">\n            <Box>\n              <Sans size=\"3\">{index + 1}.</Sans>\n              <Sans size=\"2\">{item.brand.name}.</Sans>\n              <Sans size=\"2\" color=\"gray\">\n                {item.name}.\n              </Sans>\n            </Box>\n            <Box>\n              <Text>\n                <Sans size=\"2\" color=\"gray\">\n                  Size {item.modelSize} |\n                </Sans>\n                {\"  \"}\n                <TouchableWithoutFeedback\n                  onPress={() =>\n                    dispatch({\n                      type: \"removeItemFromBag\",\n                      item: item,\n                    })\n                  }\n                >\n                  <Sans size=\"2\" color=\"blue\">\n                    Remove\n                  </Sans>\n                </TouchableWithoutFeedback>\n              </Text>\n            </Box>\n          </Flex>\n          <Flex style={{ flex: 2 }} flexDirection=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n            <Image style={{ height: SECTION_HEIGHT, width: 160 }} resizeMode=\"contain\" source={{ uri: imageURL }} />\n          </Flex>\n        </Flex>\n      </Box>\n    )\n  }\n\n  const renderItem = ({ item, index }) => {\n    return item.type === \"item\" ? bagItem(item, index) : emptyBagItem(index)\n  }\n\n  return (\n    <Theme>\n      <Container>\n        <Box style={{ flex: 1 }}>\n          <Spacer mb={3} />\n          {bagIsEmpty ? (\n            <Flex flex={1} flexDirection=\"column\" justifyContent=\"center\" alignContent=\"center\">\n              <EmptyState remainingPieces={remainingPieces} />\n            </Flex>\n          ) : (\n            <Box>\n              <Spacer mb={3} />\n              <FlatList\n                data={bagItems}\n                ListHeaderComponent={() => (\n                  <Box p={2}>\n                    <Sans size=\"3\" color=\"black\">\n                      My bag\n                    </Sans>\n                    <Sans size=\"2\" color=\"gray\">\n                      You have {remainingPieces} pieces remaining\n                    </Sans>\n                  </Box>\n                )}\n                ItemSeparatorComponent={() => (\n                  <Box px={2}>\n                    <Spacer mb={2} />\n                    <Separator color={color(\"lightGray\")} />\n                    <Spacer mb={2} />\n                  </Box>\n                )}\n                keyExtractor={(_item, index) => String(index)}\n                renderItem={item => renderItem(item)}\n                ListFooterComponent={() => <Spacer mb={200} />}\n              />\n            </Box>\n          )}\n        </Box>\n      </Container>\n    </Theme>\n  )\n}\n"]}