{"version":3,"sources":["Mask.tsx"],"names":["Mask","Shape","displayName","defaultProps","x","y","width","height","props","maskTransform","transform","maskUnits","maskContentUnits","children","units","RNSVGMask"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,mCAAA,CAAA;;AACA,IAAA,aAAA,GAAA,uBAAA,CAAA,OAAA,+BAAA,CAAA;;AAEA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,gBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,WAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEqBA;;AAAAA,IAAAA,I;;;;;;;;;;6BAmBV;AAAA,UACCQ,KADD,GAAA,KAAA,KAAA;AAAA,UAGLC,aAHK,GAYHD,KAZG,CAAA,aAAA;AAAA,UAILE,SAJK,GAYHF,KAZG,CAAA,SAAA;AAAA,UAKLJ,CALK,GAYHI,KAZG,CAAA,CAAA;AAAA,UAMLH,CANK,GAYHG,KAZG,CAAA,CAAA;AAAA,UAOLF,KAPK,GAYHE,KAZG,CAAA,KAAA;AAAA,UAQLD,MARK,GAYHC,KAZG,CAAA,MAAA;AAAA,UASLG,SATK,GAYHH,KAZG,CAAA,SAAA;AAAA,UAULI,gBAVK,GAYHJ,KAZG,CAAA,gBAAA;AAAA,UAWLK,QAXK,GAYHL,KAZG,CAAA,QAAA;AAaP,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,SAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AACE,QAAA,GAAG,EAAE,KADP;AAAA,OAAA,EAEM,CAAA,GAAA,aAAA,CAAA,OAAA,EAAA,aAAA,CAAA,EAAA,EAAkB,CAAA,GAAA,aAAA,CAAA,cAAA,EAAlB,KAAkB,CAAlB,EAAA;AAAyCJ,QAAAA,CAAC,EAA1C,IAAA;AAAkDC,QAAAA,CAAC,EAAnD;AAAA,OAAA,CAAA,EAFN,IAEM,CAFN,EAAA;AAGE,QAAA,CAAC,EAHH,CAAA;AAIE,QAAA,CAAC,EAJH,CAAA;AAKE,QAAA,KAAK,EALP,KAAA;AAME,QAAA,MAAM,EANR,MAAA;AAOE,QAAA,aAAa,EAAE,CAAA,GAAA,iBAAA,CAAA,OAAA,EAAiBI,aAAa,IAAbA,SAAAA,IAPlC,KAOiB,CAPjB;AAQE,QAAA,SAAS,EAAEE,SAAS,KAATA,SAAAA,GAA0BG,MAAAA,CAAAA,OAAAA,CAA1BH,SAA0BG,CAA1BH,GARb,CAAA;AASE,QAAA,gBAAgB,EACdC,gBAAgB,KAAhBA,SAAAA,GAAiCE,MAAAA,CAAAA,OAAAA,CAAjCF,gBAAiCE,CAAjCF,GAVJ,CAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,CAAA,EADF,QACE,CADF;;;;EAhC8BX,OAAAA,CAAAA,O,CAAbD;;;AAAAA,I,CAUZE,WAVYF,GAUE,MAVFA;AAAAA,I,CAYZG,YAZYH,GAYG;AACpBI,EAAAA,CAAC,EADmB,IAAA;AAEpBC,EAAAA,CAAC,EAFmB,IAAA;AAGpBC,EAAAA,KAAK,EAHe,MAAA;AAIpBC,EAAAA,MAAM,EAJc;AAAA,CAZHP;AAoDd,IAAMe,SAAS,GAAG,CAAA,GAAA,YAAA,CAAA,sBAAA,EAAlB,WAAkB,CAAlB","sourcesContent":["import React from 'react';\nimport { requireNativeComponent } from 'react-native';\nimport extractTransform from '../lib/extract/extractTransform';\nimport extractProps, { propsAndStyles } from '../lib/extract/extractProps';\nimport { NumberProp, TransformProps } from '../lib/extract/types';\nimport units from '../lib/units';\nimport Shape from './Shape';\n\nexport default class Mask extends Shape<{\n  x?: NumberProp;\n  y?: NumberProp;\n  width?: NumberProp;\n  height?: NumberProp;\n  transform?: number[] | string | TransformProps;\n  maskTransform?: number[] | string | TransformProps;\n  maskUnits?: 'objectBoundingBox' | 'userSpaceOnUse';\n  maskContentUnits?: 'objectBoundingBox' | 'userSpaceOnUse';\n}> {\n  static displayName = 'Mask';\n\n  static defaultProps = {\n    x: '0%',\n    y: '0%',\n    width: '100%',\n    height: '100%',\n  };\n\n  render() {\n    const { props } = this;\n    const {\n      maskTransform,\n      transform,\n      x,\n      y,\n      width,\n      height,\n      maskUnits,\n      maskContentUnits,\n      children,\n    } = props;\n    return (\n      <RNSVGMask\n        ref={this.refMethod}\n        {...extractProps({ ...propsAndStyles(props), x: null, y: null }, this)}\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        maskTransform={extractTransform(maskTransform || transform || props)}\n        maskUnits={maskUnits !== undefined ? units[maskUnits] : 0}\n        maskContentUnits={\n          maskContentUnits !== undefined ? units[maskContentUnits] : 1\n        }\n      >\n        {children}\n      </RNSVGMask>\n    );\n  }\n}\n\nexport const RNSVGMask = requireNativeComponent('RNSVGMask');\n"]}