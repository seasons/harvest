{"version":3,"sources":["NativeCommandsSender.js"],"names":["Object","defineProperty","exports","value","react_native_1","require","NativeCommandsSender","nativeCommandsModule","NativeModules","RNNBridgeModule","commandId","layout","setRoot","options","setDefaultOptions","componentId","mergeOptions","onComponentId","push","pop","popTo","popToRoot","setStackRoot","showModal","dismissModal","dismissAllModals","showOverlay","dismissOverlay","getLaunchArgs"],"mappings":"AAAA;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,cAAc,GAAGC,OAAO,CAAC,cAAD,CAA9B;;IACMC,oB;AACF,kCAAc;AAAA;AACV,SAAKC,oBAAL,GAA4BH,cAAc,CAACI,aAAf,CAA6BC,eAAzD;AACH;;;;4BACOC,S,EAAWC,M,EAAQ;AACvB,aAAO,KAAKJ,oBAAL,CAA0BK,OAA1B,CAAkCF,SAAlC,EAA6CC,MAA7C,CAAP;AACH;;;sCACiBE,O,EAAS;AACvB,aAAO,KAAKN,oBAAL,CAA0BO,iBAA1B,CAA4CD,OAA5C,CAAP;AACH;;;iCACYE,W,EAAaF,O,EAAS;AAC/B,aAAO,KAAKN,oBAAL,CAA0BS,YAA1B,CAAuCD,WAAvC,EAAoDF,OAApD,CAAP;AACH;;;yBACIH,S,EAAWO,a,EAAeN,M,EAAQ;AACnC,aAAO,KAAKJ,oBAAL,CAA0BW,IAA1B,CAA+BR,SAA/B,EAA0CO,aAA1C,EAAyDN,MAAzD,CAAP;AACH;;;wBACGD,S,EAAWK,W,EAAaF,O,EAAS;AACjC,aAAO,KAAKN,oBAAL,CAA0BY,GAA1B,CAA8BT,SAA9B,EAAyCK,WAAzC,EAAsDF,OAAtD,CAAP;AACH;;;0BACKH,S,EAAWK,W,EAAaF,O,EAAS;AACnC,aAAO,KAAKN,oBAAL,CAA0Ba,KAA1B,CAAgCV,SAAhC,EAA2CK,WAA3C,EAAwDF,OAAxD,CAAP;AACH;;;8BACSH,S,EAAWK,W,EAAaF,O,EAAS;AACvC,aAAO,KAAKN,oBAAL,CAA0Bc,SAA1B,CAAoCX,SAApC,EAA+CK,WAA/C,EAA4DF,OAA5D,CAAP;AACH;;;iCACYH,S,EAAWO,a,EAAeN,M,EAAQ;AAC3C,aAAO,KAAKJ,oBAAL,CAA0Be,YAA1B,CAAuCZ,SAAvC,EAAkDO,aAAlD,EAAiEN,MAAjE,CAAP;AACH;;;8BACSD,S,EAAWC,M,EAAQ;AACzB,aAAO,KAAKJ,oBAAL,CAA0BgB,SAA1B,CAAoCb,SAApC,EAA+CC,MAA/C,CAAP;AACH;;;iCACYD,S,EAAWK,W,EAAaF,O,EAAS;AAC1C,aAAO,KAAKN,oBAAL,CAA0BiB,YAA1B,CAAuCd,SAAvC,EAAkDK,WAAlD,EAA+DF,OAA/D,CAAP;AACH;;;qCACgBH,S,EAAWG,O,EAAS;AACjC,aAAO,KAAKN,oBAAL,CAA0BkB,gBAA1B,CAA2Cf,SAA3C,EAAsDG,OAAtD,CAAP;AACH;;;gCACWH,S,EAAWC,M,EAAQ;AAC3B,aAAO,KAAKJ,oBAAL,CAA0BmB,WAA1B,CAAsChB,SAAtC,EAAiDC,MAAjD,CAAP;AACH;;;mCACcD,S,EAAWK,W,EAAa;AACnC,aAAO,KAAKR,oBAAL,CAA0BoB,cAA1B,CAAyCjB,SAAzC,EAAoDK,WAApD,CAAP;AACH;;;kCACaL,S,EAAW;AACrB,aAAO,KAAKH,oBAAL,CAA0BqB,aAA1B,CAAwClB,SAAxC,CAAP;AACH;;;;;AAELR,OAAO,CAACI,oBAAR,GAA+BA,oBAA/B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_native_1 = require(\"react-native\");\nclass NativeCommandsSender {\n    constructor() {\n        this.nativeCommandsModule = react_native_1.NativeModules.RNNBridgeModule;\n    }\n    setRoot(commandId, layout) {\n        return this.nativeCommandsModule.setRoot(commandId, layout);\n    }\n    setDefaultOptions(options) {\n        return this.nativeCommandsModule.setDefaultOptions(options);\n    }\n    mergeOptions(componentId, options) {\n        return this.nativeCommandsModule.mergeOptions(componentId, options);\n    }\n    push(commandId, onComponentId, layout) {\n        return this.nativeCommandsModule.push(commandId, onComponentId, layout);\n    }\n    pop(commandId, componentId, options) {\n        return this.nativeCommandsModule.pop(commandId, componentId, options);\n    }\n    popTo(commandId, componentId, options) {\n        return this.nativeCommandsModule.popTo(commandId, componentId, options);\n    }\n    popToRoot(commandId, componentId, options) {\n        return this.nativeCommandsModule.popToRoot(commandId, componentId, options);\n    }\n    setStackRoot(commandId, onComponentId, layout) {\n        return this.nativeCommandsModule.setStackRoot(commandId, onComponentId, layout);\n    }\n    showModal(commandId, layout) {\n        return this.nativeCommandsModule.showModal(commandId, layout);\n    }\n    dismissModal(commandId, componentId, options) {\n        return this.nativeCommandsModule.dismissModal(commandId, componentId, options);\n    }\n    dismissAllModals(commandId, options) {\n        return this.nativeCommandsModule.dismissAllModals(commandId, options);\n    }\n    showOverlay(commandId, layout) {\n        return this.nativeCommandsModule.showOverlay(commandId, layout);\n    }\n    dismissOverlay(commandId, componentId) {\n        return this.nativeCommandsModule.dismissOverlay(commandId, componentId);\n    }\n    getLaunchArgs(commandId) {\n        return this.nativeCommandsModule.getLaunchArgs(commandId);\n    }\n}\nexports.NativeCommandsSender = NativeCommandsSender;\n"]}