{"version":3,"sources":["extractViewBox.ts"],"names":["meetOrSliceTypes","meet","slice","none","alignEnum","prev","spacesRegExp","viewBox","preserveAspectRatio","props","params","Array","console","modes","align","meetOrSlice","minX","minY","vbWidth","vbHeight"],"mappings":";;;;;AAEO,IAAMA,gBAEZ,GAAG;AACFC,EAAAA,IAAI,EADF,CAAA;AAEFC,EAAAA,KAAK,EAFH,CAAA;AAGFC,EAAAA,IAAI,EALC;AAEH,CAFG;;AAQA,IAAMC,SAAsC,GAAG,CAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,CAW7C,UAAA,IAAA,EAAA,IAAA,EAA6C;AACpDC,EAAAA,IAAI,CAAJA,IAAI,CAAJA,GAAAA,IAAAA;AACA,SAAA,IAAA;AAboD,CAAA,EAA/C,EAA+C,CAA/C;;AAgBP,IAAMC,YAAY,GAAlB,KAAA;;AAEe,SAAA,cAAA,CAAA,KAAA,EAGZ;AAAA,MACOC,OADP,GACwCE,KADxC,CAAA,OAAA;AAAA,MACgBD,mBADhB,GACwCC,KADxC,CAAA,mBAAA;;AAGD,MAAI,CAAJ,OAAA,EAAc;AACZ,WAAA,IAAA;AAGF;;AAAA,MAAMC,MAAM,GAAG,CAACC,KAAK,CAALA,OAAAA,CAAAA,OAAAA,IAAAA,OAAAA,GAEZJ,OAAO,CAAPA,IAAAA,GAAAA,KAAAA,CAFW,YAEXA,CAFW,EAAA,GAAA,CAAf,MAAe,CAAf;;AAKA,MAAIG,MAAM,CAANA,MAAAA,KAAAA,CAAAA,IAAuBA,MAAM,CAANA,IAAAA,CAA3B,KAA2BA,CAA3B,EAA+C;AAC7CE,IAAAA,OAAO,CAAPA,IAAAA,CAAa,4BAAbA,OAAAA;AACA,WAAA,IAAA;AAGF;;AAAA,MAAMC,KAAK,GAAGL,mBAAmB,GAC7BA,mBAAmB,CAAnBA,IAAAA,GAAAA,KAAAA,CAD6B,YAC7BA,CAD6B,GAAjC,EAAA;AAGA,MAAMM,KAAK,GAAGD,KAAK,CAAnB,CAAmB,CAAnB;AACA,MAAME,WAAW,GAAGF,KAAK,CAAzB,CAAyB,CAAzB;AAEA,SAAO;AACLG,IAAAA,IAAI,EAAEN,MAAM,CADP,CACO,CADP;AAELO,IAAAA,IAAI,EAAEP,MAAM,CAFP,CAEO,CAFP;AAGLQ,IAAAA,OAAO,EAAER,MAAM,CAHV,CAGU,CAHV;AAILS,IAAAA,QAAQ,EAAET,MAAM,CAJX,CAIW,CAJX;AAKLI,IAAAA,KAAK,EAAEV,SAAS,CAATA,KAAS,CAATA,IALF,UAAA;AAMLW,IAAAA,WAAW,EAAEf,gBAAgB,CAAhBA,WAAgB,CAAhBA,IANf;AAAO,GAAP;AAQD","sourcesContent":["import { NumberProp } from './types';\n\nexport const meetOrSliceTypes: {\n  [meetOrSlice: string]: number;\n} = {\n  meet: 0,\n  slice: 1,\n  none: 2,\n};\n\nexport const alignEnum: { [align: string]: string } = [\n  'xMinYMin',\n  'xMidYMin',\n  'xMaxYMin',\n  'xMinYMid',\n  'xMidYMid',\n  'xMaxYMid',\n  'xMinYMax',\n  'xMidYMax',\n  'xMaxYMax',\n  'none',\n].reduce((prev: { [align: string]: string }, name) => {\n  prev[name] = name;\n  return prev;\n}, {});\n\nconst spacesRegExp = /\\s+/;\n\nexport default function extractViewBox(props: {\n  viewBox?: string | (NumberProp)[];\n  preserveAspectRatio?: string;\n}) {\n  const { viewBox, preserveAspectRatio } = props;\n\n  if (!viewBox) {\n    return null;\n  }\n\n  const params = (Array.isArray(viewBox)\n    ? viewBox\n    : viewBox.trim().split(spacesRegExp)\n  ).map(Number);\n\n  if (params.length !== 4 || params.some(isNaN)) {\n    console.warn('Invalid `viewBox` prop:' + viewBox);\n    return null;\n  }\n\n  const modes = preserveAspectRatio\n    ? preserveAspectRatio.trim().split(spacesRegExp)\n    : [];\n  const align = modes[0];\n  const meetOrSlice = modes[1];\n\n  return {\n    minX: params[0],\n    minY: params[1],\n    vbWidth: params[2],\n    vbHeight: params[3],\n    align: alignEnum[align] || 'xMidYMid',\n    meetOrSlice: meetOrSliceTypes[meetOrSlice] || 0,\n  };\n}\n"]}