4a763503f7d265fe24503beb647e4b6a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RNSVGImage = exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _extractViewBox = require("../lib/extract/extractViewBox");

var _extractProps = _interopRequireWildcard(require("../lib/extract/extractProps"));

var _Shape2 = _interopRequireDefault(require("./Shape"));

var _jsxFileName = "/Users/jannegylling/IdeaProjects/react-native-svg/src/elements/Image.tsx";

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        (0, _defineProperty2.default)(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

var spacesRegExp = /\s+/;

var SvgImage = function (_Shape) {
  (0, _inherits2.default)(SvgImage, _Shape);

  function SvgImage() {
    (0, _classCallCheck2.default)(this, SvgImage);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SvgImage).apply(this, arguments));
  }

  (0, _createClass2.default)(SvgImage, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var preserveAspectRatio = props.preserveAspectRatio,
          x = props.x,
          y = props.y,
          width = props.width,
          height = props.height,
          xlinkHref = props.xlinkHref,
          _props$href = props.href,
          href = _props$href === void 0 ? xlinkHref : _props$href;
      var modes = preserveAspectRatio ? preserveAspectRatio.trim().split(spacesRegExp) : [];
      var align = modes[0];
      var meetOrSlice = modes[1];
      return _react.default.createElement(RNSVGImage, (0, _extends2.default)({
        ref: this.refMethod
      }, (0, _extractProps.default)(_objectSpread({}, (0, _extractProps.propsAndStyles)(props), {
        x: null,
        y: null
      }), this), {
        x: x,
        y: y,
        width: width,
        height: height,
        meetOrSlice: _extractViewBox.meetOrSliceTypes[meetOrSlice] || 0,
        align: _extractViewBox.alignEnum[align] || 'xMidYMid',
        src: !href ? null : _reactNative.Image.resolveAssetSource(typeof href === 'string' ? {
          uri: href
        } : href),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 51
        }
      }));
    }
  }]);
  return SvgImage;
}(_Shape2.default);

exports.default = SvgImage;
SvgImage.displayName = 'Image';
SvgImage.defaultProps = {
  x: 0,
  y: 0,
  width: 0,
  height: 0,
  preserveAspectRatio: 'xMidYMid meet'
};
var RNSVGImage = (0, _reactNative.requireNativeComponent)('RNSVGImage');
exports.RNSVGImage = RNSVGImage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkltYWdlLnRzeCJdLCJuYW1lcyI6WyJzcGFjZXNSZWdFeHAiLCJTdmdJbWFnZSIsIlNoYXBlIiwiZGlzcGxheU5hbWUiLCJkZWZhdWx0UHJvcHMiLCJ4IiwieSIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc2VydmVBc3BlY3RSYXRpbyIsInByb3BzIiwieGxpbmtIcmVmIiwiaHJlZiIsIm1vZGVzIiwiYWxpZ24iLCJtZWV0T3JTbGljZSIsIm1lZXRPclNsaWNlVHlwZXMiLCJhbGlnbkVudW0iLCJJbWFnZSIsInVyaSIsIlJOU1ZHSW1hZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQSxNQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxZQUFBLEdBQUEsT0FBQSxDQUFBLGNBQUEsQ0FBQTs7QUFLQSxJQUFBLGVBQUEsR0FBQSxPQUFBLGlDQUFBOztBQUNBLElBQUEsYUFBQSxHQUFBLHVCQUFBLENBQUEsT0FBQSwrQkFBQSxDQUFBOztBQUVBLElBQUEsT0FBQSxHQUFBLHNCQUFBLENBQUEsT0FBQSxXQUFBLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBOztBQUFBLElBQU1BLFlBQVksR0FBbEIsS0FBQTs7QUFFcUJDLElBQUFBLFE7Ozs7Ozs7Ozs7NkJBbUJWO0FBQUEsVUFDQ1MsS0FERCxHQUFBLEtBQUEsS0FBQTtBQUFBLFVBR0xELG1CQUhLLEdBVUhDLEtBVkcsQ0FBQSxtQkFBQTtBQUFBLFVBSUxMLENBSkssR0FVSEssS0FWRyxDQUFBLENBQUE7QUFBQSxVQUtMSixDQUxLLEdBVUhJLEtBVkcsQ0FBQSxDQUFBO0FBQUEsVUFNTEgsS0FOSyxHQVVIRyxLQVZHLENBQUEsS0FBQTtBQUFBLFVBT0xGLE1BUEssR0FVSEUsS0FWRyxDQUFBLE1BQUE7QUFBQSxVQVFMQyxTQVJLLEdBVUhELEtBVkcsQ0FBQSxTQUFBO0FBQUEsVUFBQSxXQUFBLEdBVUhBLEtBVkcsQ0FBQSxJQUFBO0FBQUEsVUFTTEUsSUFUSyxHQUFBLFdBQUEsS0FBQSxLQUFBLENBQUEsR0FBQSxTQUFBLEdBQUEsV0FBQTtBQVdQLFVBQU1DLEtBQUssR0FBR0osbUJBQW1CLEdBQzdCQSxtQkFBbUIsQ0FBbkJBLElBQUFBLEdBQUFBLEtBQUFBLENBRDZCLFlBQzdCQSxDQUQ2QixHQUFqQyxFQUFBO0FBR0EsVUFBTUssS0FBSyxHQUFHRCxLQUFLLENBQW5CLENBQW1CLENBQW5CO0FBQ0EsVUFBTUUsV0FBMkQsR0FDL0RGLEtBQUssQ0FEUCxDQUNPLENBRFA7QUFFQSxhQUNFLE1BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFBLFVBQUEsRUFBQSxDQUFBLEdBQUEsU0FBQSxDQUFBLE9BQUEsRUFBQTtBQUNFLFFBQUEsR0FBRyxFQUFFLEtBRFA7QUFBQSxPQUFBLEVBRU0sQ0FBQSxHQUFBLGFBQUEsQ0FBQSxPQUFBLEVBQUEsYUFBQSxDQUFBLEVBQUEsRUFBa0IsQ0FBQSxHQUFBLGFBQUEsQ0FBQSxjQUFBLEVBQWxCLEtBQWtCLENBQWxCLEVBQUE7QUFBeUNSLFFBQUFBLENBQUMsRUFBMUMsSUFBQTtBQUFrREMsUUFBQUEsQ0FBQyxFQUFuRDtBQUFBLE9BQUEsQ0FBQSxFQUZOLElBRU0sQ0FGTixFQUFBO0FBR0UsUUFBQSxDQUFDLEVBSEgsQ0FBQTtBQUlFLFFBQUEsQ0FBQyxFQUpILENBQUE7QUFLRSxRQUFBLEtBQUssRUFMUCxLQUFBO0FBTUUsUUFBQSxNQUFNLEVBTlIsTUFBQTtBQU9FLFFBQUEsV0FBVyxFQUFFVSxlQUFBQSxDQUFBQSxnQkFBQUEsQ0FBQUEsV0FBQUEsS0FQZixDQUFBO0FBUUUsUUFBQSxLQUFLLEVBQUVDLGVBQUFBLENBQUFBLFNBQUFBLENBQUFBLEtBQUFBLEtBUlQsVUFBQTtBQVNFLFFBQUEsR0FBRyxFQUNELENBQUEsSUFBQSxHQUFBLElBQUEsR0FFSUMsWUFBQUEsQ0FBQUEsS0FBQUEsQ0FBQUEsa0JBQUFBLENBQ0UsT0FBQSxJQUFBLEtBQUEsUUFBQSxHQUEyQjtBQUFFQyxVQUFBQSxHQUFHLEVBQWhDO0FBQTJCLFNBQTNCLEdBYlYsSUFZUUQsQ0FaUjtBQUFBLFFBQUEsUUFBQSxFQUFBO0FBQUEsVUFBQSxRQUFBLEVBQUEsWUFBQTtBQUFBLFVBQUEsVUFBQSxFQURGO0FBQ0U7QUFBQSxPQUFBLENBQUEsQ0FERjs7OztFQXBDa0NoQixPQUFBQSxDQUFBQSxPLENBQWpCRDs7O0FBQUFBLFEsQ0FTWkUsV0FUWUYsR0FTRSxPQVRGQTtBQUFBQSxRLENBV1pHLFlBWFlILEdBV0c7QUFDcEJJLEVBQUFBLENBQUMsRUFEbUIsQ0FBQTtBQUVwQkMsRUFBQUEsQ0FBQyxFQUZtQixDQUFBO0FBR3BCQyxFQUFBQSxLQUFLLEVBSGUsQ0FBQTtBQUlwQkMsRUFBQUEsTUFBTSxFQUpjLENBQUE7QUFLcEJDLEVBQUFBLG1CQUFtQixFQUxDO0FBQUEsQ0FYSFI7QUEwRGQsSUFBTW1CLFVBQVUsR0FBRyxDQUFBLEdBQUEsWUFBQSxDQUFBLHNCQUFBLEVBQW5CLFlBQW1CLENBQW5CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7XG4gIEltYWdlLFxuICBJbWFnZVNvdXJjZVByb3BUeXBlLFxuICByZXF1aXJlTmF0aXZlQ29tcG9uZW50LFxufSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgbWVldE9yU2xpY2VUeXBlcywgYWxpZ25FbnVtIH0gZnJvbSAnLi4vbGliL2V4dHJhY3QvZXh0cmFjdFZpZXdCb3gnO1xuaW1wb3J0IGV4dHJhY3RQcm9wcywgeyBwcm9wc0FuZFN0eWxlcyB9IGZyb20gJy4uL2xpYi9leHRyYWN0L2V4dHJhY3RQcm9wcyc7XG5pbXBvcnQgeyBOdW1iZXJQcm9wIH0gZnJvbSAnLi4vbGliL2V4dHJhY3QvdHlwZXMnO1xuaW1wb3J0IFNoYXBlIGZyb20gJy4vU2hhcGUnO1xuXG5jb25zdCBzcGFjZXNSZWdFeHAgPSAvXFxzKy87XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN2Z0ltYWdlIGV4dGVuZHMgU2hhcGU8e1xuICBwcmVzZXJ2ZUFzcGVjdFJhdGlvPzogc3RyaW5nO1xuICB4PzogTnVtYmVyUHJvcDtcbiAgeT86IE51bWJlclByb3A7XG4gIHdpZHRoPzogTnVtYmVyUHJvcDtcbiAgaGVpZ2h0PzogTnVtYmVyUHJvcDtcbiAgeGxpbmtIcmVmPzogc3RyaW5nIHwgbnVtYmVyIHwgSW1hZ2VTb3VyY2VQcm9wVHlwZTtcbiAgaHJlZj86IHN0cmluZyB8IG51bWJlciB8IEltYWdlU291cmNlUHJvcFR5cGU7XG59PiB7XG4gIHN0YXRpYyBkaXNwbGF5TmFtZSA9ICdJbWFnZSc7XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICB4OiAwLFxuICAgIHk6IDAsXG4gICAgd2lkdGg6IDAsXG4gICAgaGVpZ2h0OiAwLFxuICAgIHByZXNlcnZlQXNwZWN0UmF0aW86ICd4TWlkWU1pZCBtZWV0JyxcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBwcm9wcyB9ID0gdGhpcztcbiAgICBjb25zdCB7XG4gICAgICBwcmVzZXJ2ZUFzcGVjdFJhdGlvLFxuICAgICAgeCxcbiAgICAgIHksXG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodCxcbiAgICAgIHhsaW5rSHJlZixcbiAgICAgIGhyZWYgPSB4bGlua0hyZWYsXG4gICAgfSA9IHByb3BzO1xuICAgIGNvbnN0IG1vZGVzID0gcHJlc2VydmVBc3BlY3RSYXRpb1xuICAgICAgPyBwcmVzZXJ2ZUFzcGVjdFJhdGlvLnRyaW0oKS5zcGxpdChzcGFjZXNSZWdFeHApXG4gICAgICA6IFtdO1xuICAgIGNvbnN0IGFsaWduID0gbW9kZXNbMF07XG4gICAgY29uc3QgbWVldE9yU2xpY2U6ICdtZWV0JyB8ICdzbGljZScgfCAnbm9uZScgfCBzdHJpbmcgfCB1bmRlZmluZWQgPVxuICAgICAgbW9kZXNbMV07XG4gICAgcmV0dXJuIChcbiAgICAgIDxSTlNWR0ltYWdlXG4gICAgICAgIHJlZj17dGhpcy5yZWZNZXRob2R9XG4gICAgICAgIHsuLi5leHRyYWN0UHJvcHMoeyAuLi5wcm9wc0FuZFN0eWxlcyhwcm9wcyksIHg6IG51bGwsIHk6IG51bGwgfSwgdGhpcyl9XG4gICAgICAgIHg9e3h9XG4gICAgICAgIHk9e3l9XG4gICAgICAgIHdpZHRoPXt3aWR0aH1cbiAgICAgICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgICAgIG1lZXRPclNsaWNlPXttZWV0T3JTbGljZVR5cGVzW21lZXRPclNsaWNlXSB8fCAwfVxuICAgICAgICBhbGlnbj17YWxpZ25FbnVtW2FsaWduXSB8fCAneE1pZFlNaWQnfVxuICAgICAgICBzcmM9e1xuICAgICAgICAgICFocmVmXG4gICAgICAgICAgICA/IG51bGxcbiAgICAgICAgICAgIDogSW1hZ2UucmVzb2x2ZUFzc2V0U291cmNlKFxuICAgICAgICAgICAgICAgIHR5cGVvZiBocmVmID09PSAnc3RyaW5nJyA/IHsgdXJpOiBocmVmIH0gOiBocmVmLFxuICAgICAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgIC8+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgUk5TVkdJbWFnZSA9IHJlcXVpcmVOYXRpdmVDb21wb25lbnQoJ1JOU1ZHSW1hZ2UnKTtcbiJdfQ==