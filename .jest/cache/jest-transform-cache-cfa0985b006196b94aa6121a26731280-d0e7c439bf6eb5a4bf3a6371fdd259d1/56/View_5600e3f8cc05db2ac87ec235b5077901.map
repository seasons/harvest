{"version":3,"sources":["View.js"],"names":["React","require","TextAncestor","ViewNativeComponent","invariant","ViewToExport","__DEV__","global","__RCTProfileIsProfiling","View","props","forwardedRef","hasTextAncestor","forwardRef","displayName","module","exports"],"mappings":"AAUA;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,cAAD,CAA5B;;AACA,IAAME,mBAAmB,GAAGF,OAAO,CAAC,qBAAD,CAAnC;;AAEA,IAAMG,SAAS,GAAGH,OAAO,CAAC,WAAD,CAAzB;;AAcA,IAAII,YAAY,GAAGF,mBAAnB;;AACA,IAAIG,OAAJ,EAAa;AACX,MAAI,CAACC,MAAM,CAACC,uBAAZ,EAAqC;AACnC,QAAMC,IAAI,GAAG,SAAPA,IAAO,CACXC,KADW,EAEXC,YAFW,EAGR;AACH,aACE,oBAAC,YAAD,CAAc,QAAd,QACG,UAAAC,eAAe,EAAI;AAClBR,QAAAA,SAAS,CACP,CAACQ,eADM,EAEP,6DAFO,CAAT;AAIA,eAAO,oBAAC,mBAAD,6BAAyBF,KAAzB;AAAgC,UAAA,GAAG,EAAEC;AAArC,WAAP;AACD,OAPH,CADF;AAWD,KAfD;;AAgBAN,IAAAA,YAAY,GAAGL,KAAK,CAACa,UAAN,CAAiBJ,IAAjB,CAAf;AACAJ,IAAAA,YAAY,CAACS,WAAb,GAA2B,MAA3B;AACD;AACF;;AAEDC,MAAM,CAACC,OAAP,GAAmBX,YAAnB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('React');\nconst TextAncestor = require('TextAncestor');\nconst ViewNativeComponent = require('ViewNativeComponent');\n\nconst invariant = require('invariant');\n\nimport type {ViewProps} from 'ViewPropTypes';\n\nexport type Props = ViewProps;\n\n/**\n * The most fundamental component for building a UI, View is a container that\n * supports layout with flexbox, style, some touch handling, and accessibility\n * controls.\n *\n * @see http://facebook.github.io/react-native/docs/view.html\n */\n\nlet ViewToExport = ViewNativeComponent;\nif (__DEV__) {\n  if (!global.__RCTProfileIsProfiling) {\n    const View = (\n      props: Props,\n      forwardedRef: React.Ref<typeof ViewNativeComponent>,\n    ) => {\n      return (\n        <TextAncestor.Consumer>\n          {hasTextAncestor => {\n            invariant(\n              !hasTextAncestor,\n              'Nesting of <View> within <Text> is not currently supported.',\n            );\n            return <ViewNativeComponent {...props} ref={forwardedRef} />;\n          }}\n        </TextAncestor.Consumer>\n      );\n    };\n    ViewToExport = React.forwardRef(View);\n    ViewToExport.displayName = 'View';\n  }\n}\n\nmodule.exports = ((ViewToExport: $FlowFixMe): typeof ViewNativeComponent);\n"]}