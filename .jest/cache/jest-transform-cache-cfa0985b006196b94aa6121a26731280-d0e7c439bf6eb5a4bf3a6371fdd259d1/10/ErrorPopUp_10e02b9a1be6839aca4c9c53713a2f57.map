{"version":3,"sources":["ErrorPopUp.tsx"],"names":["ErrorPopUp","title","note","show","buttonText","onClose","backgroundColor","outerWrapperAnimation","setOuterWrapperAnimation","height","popUpAnimation","setPopUpAnimation","OuterWrapper","Box","PopUp","AnimatedPopUp","AnimatedOuterWrapper"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAUO,IAAMA,UAA2B,GAAG,SAA9BA,UAA8B,OAAgD;AAAA,MAA7CC,KAA6C,QAA7CA,KAA6C;AAAA,MAAtCC,IAAsC,QAAtCA,IAAsC;AAAA,MAAhCC,IAAgC,QAAhCA,IAAgC;AAAA,MAA1BC,UAA0B,QAA1BA,UAA0B;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBAC/B,qBAAS;AACjEC,IAAAA,eAAe,EAAE;AADgD,GAAT,CAD+B;AAAA;AAAA,MAClFC,qBADkF;AAAA,MAC3DC,wBAD2D;;AAAA,mBAK7C,qBAAS;AACnDC,IAAAA,MAAM,EAAE;AAD2C,GAAT,CAL6C;AAAA;AAAA,MAKlFC,cALkF;AAAA,MAKlEC,iBALkE;;AASzF,wBAAU,YAAM;AACd,QAAIR,IAAJ,EAAU;AACRK,MAAAA,wBAAwB,CAAC;AAAEF,QAAAA,eAAe,EAAE;AAAnB,OAAD,CAAxB;AACAK,MAAAA,iBAAiB,CAAC;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAD,CAAjB;AACD,KAHD,MAGO;AACLD,MAAAA,wBAAwB,CAAC;AAAEF,QAAAA,eAAe,EAAE;AAAnB,OAAD,CAAxB;AACAK,MAAAA,iBAAiB,CAAC;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAD,CAAjB;AACD;AACF,GARD,EAQG,CAACN,IAAD,CARH;AAUA,SACE,4DACE,6BAAC,aAAD;AAAe,IAAA,KAAK,EAAEO;AAAtB,KACE,6BAAC,KAAD;AAAK,IAAA,CAAC,EAAE;AAAR,KACE,6BAAC,QAAD;AAAQ,IAAA,EAAE,EAAE;AAAZ,IADF,EAEE,6BAAC,KAAD,QACE,6BAAC,MAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAe,IAAA,KAAK,EAAE,kBAAM,OAAN;AAAtB,KACGT,KADH,CADF,EAIGC,IAAI,IACH,4DACE,6BAAC,QAAD;AAAQ,IAAA,EAAE,EAAE;AAAZ,IADF,EAEE,6BAAC,MAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAe,IAAA,KAAK,EAAE,kBAAM,YAAN;AAAtB,KACGA,IADH,CAFF,CALJ,CAFF,EAeE,6BAAC,QAAD;AAAQ,IAAA,EAAE,EAAE;AAAZ,IAfF,EAgBE,6BAAC,WAAD;AAAW,IAAA,KAAK,EAAE,kBAAM,YAAN;AAAlB,IAhBF,EAiBE,6BAAC,QAAD;AAAQ,IAAA,EAAE,EAAE;AAAZ,IAjBF,EAkBE,6BAAC,qCAAD;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMG,OAAO,EAAb;AAAA;AAAnC,KACE,6BAAC,KAAD,QACE,6BAAC,MAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,IAAI,EAAC,GAA9B;AAAkC,IAAA,KAAK,EAAE,kBAAM,OAAN;AAAzC,KACGD,UADH,CADF,EAIE,6BAAC,QAAD;AAAQ,IAAA,EAAE,EAAE;AAAZ,IAJF,CADF,CAlBF,CADF,CADF,EA8BGD,IAAI,IAAI,6BAAC,oBAAD;AAAsB,IAAA,KAAK,EAAEI;AAA7B,IA9BX,CADF;AAkCD,CArDM;;;AAuDP,IAAMK,YAAY,GAAG,qBAAOC,KAAP,CAAH,mBAAlB;AAUA,IAAMC,KAAK,GAAG,qBAAOD,KAAP,CAAH,qBAGW,kBAAM,OAAN,CAHX,CAAX;AAYA,IAAME,aAAa,GAAG,iCAASD,KAAT,CAAtB;AAEA,IAAME,oBAAoB,GAAG,iCAASJ,YAAT,CAA7B","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components/native\"\nimport { TouchableWithoutFeedback } from \"react-native\"\nimport { Sans, Box, Spacer, Separator } from \"./\"\nimport { color } from \"App/utils\"\nimport { animated } from \"react-spring/renderprops-native.cjs\"\n\nexport interface Props {\n  title: string\n  note?: string\n  show: boolean\n  buttonText: string\n  onClose: () => void\n}\n\nexport const ErrorPopUp: React.FC<Props> = ({ title, note, show, buttonText, onClose }) => {\n  const [outerWrapperAnimation, setOuterWrapperAnimation] = useState({\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\n  })\n\n  const [popUpAnimation, setPopUpAnimation] = useState({\n    height: 0,\n  })\n\n  useEffect(() => {\n    if (show) {\n      setOuterWrapperAnimation({ backgroundColor: \"rgba(0, 0, 0, 0.5)\" })\n      setPopUpAnimation({ height: \"auto\" })\n    } else {\n      setOuterWrapperAnimation({ backgroundColor: \"rgba(0, 0, 0, 0)\" })\n      setPopUpAnimation({ height: 0 })\n    }\n  }, [show])\n\n  return (\n    <>\n      <AnimatedPopUp style={popUpAnimation}>\n        <Box m={2}>\n          <Spacer mt={2} />\n          <Box>\n            <Sans size=\"2\" color={color(\"white\")}>\n              {title}\n            </Sans>\n            {note && (\n              <>\n                <Spacer mb={2} />\n                <Sans size=\"2\" color={color(\"lightGreen\")}>\n                  {note}\n                </Sans>\n              </>\n            )}\n          </Box>\n          <Spacer mb={2} />\n          <Separator color={color(\"lightGreen\")} />\n          <Spacer mb={2} />\n          <TouchableWithoutFeedback onPress={() => onClose()}>\n            <Box>\n              <Sans textAlign=\"center\" size=\"2\" color={color(\"white\")}>\n                {buttonText}\n              </Sans>\n              <Spacer mt={4} />\n            </Box>\n          </TouchableWithoutFeedback>\n        </Box>\n      </AnimatedPopUp>\n      {show && <AnimatedOuterWrapper style={outerWrapperAnimation} />}\n    </>\n  )\n}\n\nconst OuterWrapper = styled(Box)`\n  position: absolute;\n  flex: 1;\n  height: 100%;\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  z-index: 99;\n`\n\nconst PopUp = styled(Box)`\n  border-top-left-radius: 30;\n  border-top-right-radius: 30;\n  background-color: ${color(\"green\")};\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  overflow: hidden;\n  z-index: 100;\n`\n\nconst AnimatedPopUp = animated(PopUp)\n\nconst AnimatedOuterWrapper = animated(OuterWrapper)\n"]}