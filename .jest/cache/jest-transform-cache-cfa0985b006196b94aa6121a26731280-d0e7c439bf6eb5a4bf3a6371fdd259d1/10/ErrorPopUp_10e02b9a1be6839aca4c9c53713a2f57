39e32058d2eef466907113cb14e7c589
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ErrorPopUp = void 0;

var _taggedTemplateLiteralLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteralLoose"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _native = _interopRequireDefault(require("styled-components/native"));

var _reactNative = require("react-native");

var _ = require("./");

var _utils = require("../utils");

var _renderpropsNative = require("react-spring/renderprops-native.cjs");

function _templateObject2() {
  var data = (0, _taggedTemplateLiteralLoose2.default)(["\n  border-top-left-radius: 30;\n  border-top-right-radius: 30;\n  background-color: ", ";\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  overflow: hidden;\n  z-index: 100;\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _taggedTemplateLiteralLoose2.default)(["\n  position: absolute;\n  flex: 1;\n  height: 100%;\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  z-index: 99;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var ErrorPopUp = function ErrorPopUp(_ref) {
  var title = _ref.title,
      note = _ref.note,
      show = _ref.show,
      buttonText = _ref.buttonText,
      onClose = _ref.onClose;

  var _useState = (0, _react.useState)({
    backgroundColor: "rgba(0, 0, 0, 0)"
  }),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      outerWrapperAnimation = _useState2[0],
      setOuterWrapperAnimation = _useState2[1];

  var _useState3 = (0, _react.useState)({
    height: 0
  }),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      popUpAnimation = _useState4[0],
      setPopUpAnimation = _useState4[1];

  (0, _react.useEffect)(function () {
    if (show) {
      setOuterWrapperAnimation({
        backgroundColor: "rgba(0, 0, 0, 0.5)"
      });
      setPopUpAnimation({
        height: "auto"
      });
    } else {
      setOuterWrapperAnimation({
        backgroundColor: "rgba(0, 0, 0, 0)"
      });
      setPopUpAnimation({
        height: 0
      });
    }
  }, [show]);
  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(AnimatedPopUp, {
    style: popUpAnimation
  }, _react.default.createElement(_.Box, {
    m: 2
  }, _react.default.createElement(_.Spacer, {
    mt: 2
  }), _react.default.createElement(_.Box, null, _react.default.createElement(_.Sans, {
    size: "2",
    color: (0, _utils.color)("white")
  }, title), note && _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_.Spacer, {
    mb: 2
  }), _react.default.createElement(_.Sans, {
    size: "2",
    color: (0, _utils.color)("lightGreen")
  }, note))), _react.default.createElement(_.Spacer, {
    mb: 2
  }), _react.default.createElement(_.Separator, {
    color: (0, _utils.color)("lightGreen")
  }), _react.default.createElement(_.Spacer, {
    mb: 2
  }), _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
    onPress: function onPress() {
      return onClose();
    }
  }, _react.default.createElement(_.Box, null, _react.default.createElement(_.Sans, {
    textAlign: "center",
    size: "2",
    color: (0, _utils.color)("white")
  }, buttonText), _react.default.createElement(_.Spacer, {
    mt: 4
  }))))), show && _react.default.createElement(AnimatedOuterWrapper, {
    style: outerWrapperAnimation
  }));
};

exports.ErrorPopUp = ErrorPopUp;
var OuterWrapper = (0, _native.default)(_.Box)(_templateObject());
var PopUp = (0, _native.default)(_.Box)(_templateObject2(), (0, _utils.color)("green"));
var AnimatedPopUp = (0, _renderpropsNative.animated)(PopUp);
var AnimatedOuterWrapper = (0, _renderpropsNative.animated)(OuterWrapper);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkVycm9yUG9wVXAudHN4Il0sIm5hbWVzIjpbIkVycm9yUG9wVXAiLCJ0aXRsZSIsIm5vdGUiLCJzaG93IiwiYnV0dG9uVGV4dCIsIm9uQ2xvc2UiLCJiYWNrZ3JvdW5kQ29sb3IiLCJvdXRlcldyYXBwZXJBbmltYXRpb24iLCJzZXRPdXRlcldyYXBwZXJBbmltYXRpb24iLCJoZWlnaHQiLCJwb3BVcEFuaW1hdGlvbiIsInNldFBvcFVwQW5pbWF0aW9uIiwiT3V0ZXJXcmFwcGVyIiwiQm94IiwiUG9wVXAiLCJBbmltYXRlZFBvcFVwIiwiQW5pbWF0ZWRPdXRlcldyYXBwZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVVPLElBQU1BLFVBQTJCLEdBQUcsU0FBOUJBLFVBQThCLE9BQWdEO0FBQUEsTUFBN0NDLEtBQTZDLFFBQTdDQSxLQUE2QztBQUFBLE1BQXRDQyxJQUFzQyxRQUF0Q0EsSUFBc0M7QUFBQSxNQUFoQ0MsSUFBZ0MsUUFBaENBLElBQWdDO0FBQUEsTUFBMUJDLFVBQTBCLFFBQTFCQSxVQUEwQjtBQUFBLE1BQWRDLE9BQWMsUUFBZEEsT0FBYzs7QUFBQSxrQkFDL0IscUJBQVM7QUFDakVDLElBQUFBLGVBQWUsRUFBRTtBQURnRCxHQUFULENBRCtCO0FBQUE7QUFBQSxNQUNsRkMscUJBRGtGO0FBQUEsTUFDM0RDLHdCQUQyRDs7QUFBQSxtQkFLN0MscUJBQVM7QUFDbkRDLElBQUFBLE1BQU0sRUFBRTtBQUQyQyxHQUFULENBTDZDO0FBQUE7QUFBQSxNQUtsRkMsY0FMa0Y7QUFBQSxNQUtsRUMsaUJBTGtFOztBQVN6Rix3QkFBVSxZQUFNO0FBQ2QsUUFBSVIsSUFBSixFQUFVO0FBQ1JLLE1BQUFBLHdCQUF3QixDQUFDO0FBQUVGLFFBQUFBLGVBQWUsRUFBRTtBQUFuQixPQUFELENBQXhCO0FBQ0FLLE1BQUFBLGlCQUFpQixDQUFDO0FBQUVGLFFBQUFBLE1BQU0sRUFBRTtBQUFWLE9BQUQsQ0FBakI7QUFDRCxLQUhELE1BR087QUFDTEQsTUFBQUEsd0JBQXdCLENBQUM7QUFBRUYsUUFBQUEsZUFBZSxFQUFFO0FBQW5CLE9BQUQsQ0FBeEI7QUFDQUssTUFBQUEsaUJBQWlCLENBQUM7QUFBRUYsUUFBQUEsTUFBTSxFQUFFO0FBQVYsT0FBRCxDQUFqQjtBQUNEO0FBQ0YsR0FSRCxFQVFHLENBQUNOLElBQUQsQ0FSSDtBQVVBLFNBQ0UsNERBQ0UsNkJBQUMsYUFBRDtBQUFlLElBQUEsS0FBSyxFQUFFTztBQUF0QixLQUNFLDZCQUFDLEtBQUQ7QUFBSyxJQUFBLENBQUMsRUFBRTtBQUFSLEtBQ0UsNkJBQUMsUUFBRDtBQUFRLElBQUEsRUFBRSxFQUFFO0FBQVosSUFERixFQUVFLDZCQUFDLEtBQUQsUUFDRSw2QkFBQyxNQUFEO0FBQU0sSUFBQSxJQUFJLEVBQUMsR0FBWDtBQUFlLElBQUEsS0FBSyxFQUFFLGtCQUFNLE9BQU47QUFBdEIsS0FDR1QsS0FESCxDQURGLEVBSUdDLElBQUksSUFDSCw0REFDRSw2QkFBQyxRQUFEO0FBQVEsSUFBQSxFQUFFLEVBQUU7QUFBWixJQURGLEVBRUUsNkJBQUMsTUFBRDtBQUFNLElBQUEsSUFBSSxFQUFDLEdBQVg7QUFBZSxJQUFBLEtBQUssRUFBRSxrQkFBTSxZQUFOO0FBQXRCLEtBQ0dBLElBREgsQ0FGRixDQUxKLENBRkYsRUFlRSw2QkFBQyxRQUFEO0FBQVEsSUFBQSxFQUFFLEVBQUU7QUFBWixJQWZGLEVBZ0JFLDZCQUFDLFdBQUQ7QUFBVyxJQUFBLEtBQUssRUFBRSxrQkFBTSxZQUFOO0FBQWxCLElBaEJGLEVBaUJFLDZCQUFDLFFBQUQ7QUFBUSxJQUFBLEVBQUUsRUFBRTtBQUFaLElBakJGLEVBa0JFLDZCQUFDLHFDQUFEO0FBQTBCLElBQUEsT0FBTyxFQUFFO0FBQUEsYUFBTUcsT0FBTyxFQUFiO0FBQUE7QUFBbkMsS0FDRSw2QkFBQyxLQUFELFFBQ0UsNkJBQUMsTUFBRDtBQUFNLElBQUEsU0FBUyxFQUFDLFFBQWhCO0FBQXlCLElBQUEsSUFBSSxFQUFDLEdBQTlCO0FBQWtDLElBQUEsS0FBSyxFQUFFLGtCQUFNLE9BQU47QUFBekMsS0FDR0QsVUFESCxDQURGLEVBSUUsNkJBQUMsUUFBRDtBQUFRLElBQUEsRUFBRSxFQUFFO0FBQVosSUFKRixDQURGLENBbEJGLENBREYsQ0FERixFQThCR0QsSUFBSSxJQUFJLDZCQUFDLG9CQUFEO0FBQXNCLElBQUEsS0FBSyxFQUFFSTtBQUE3QixJQTlCWCxDQURGO0FBa0NELENBckRNOzs7QUF1RFAsSUFBTUssWUFBWSxHQUFHLHFCQUFPQyxLQUFQLENBQUgsbUJBQWxCO0FBVUEsSUFBTUMsS0FBSyxHQUFHLHFCQUFPRCxLQUFQLENBQUgscUJBR1csa0JBQU0sT0FBTixDQUhYLENBQVg7QUFZQSxJQUFNRSxhQUFhLEdBQUcsaUNBQVNELEtBQVQsQ0FBdEI7QUFFQSxJQUFNRSxvQkFBb0IsR0FBRyxpQ0FBU0osWUFBVCxDQUE3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCBzdHlsZWQgZnJvbSBcInN0eWxlZC1jb21wb25lbnRzL25hdGl2ZVwiXG5pbXBvcnQgeyBUb3VjaGFibGVXaXRob3V0RmVlZGJhY2sgfSBmcm9tIFwicmVhY3QtbmF0aXZlXCJcbmltcG9ydCB7IFNhbnMsIEJveCwgU3BhY2VyLCBTZXBhcmF0b3IgfSBmcm9tIFwiLi9cIlxuaW1wb3J0IHsgY29sb3IgfSBmcm9tIFwiQXBwL3V0aWxzXCJcbmltcG9ydCB7IGFuaW1hdGVkIH0gZnJvbSBcInJlYWN0LXNwcmluZy9yZW5kZXJwcm9wcy1uYXRpdmUuY2pzXCJcblxuZXhwb3J0IGludGVyZmFjZSBQcm9wcyB7XG4gIHRpdGxlOiBzdHJpbmdcbiAgbm90ZT86IHN0cmluZ1xuICBzaG93OiBib29sZWFuXG4gIGJ1dHRvblRleHQ6IHN0cmluZ1xuICBvbkNsb3NlOiAoKSA9PiB2b2lkXG59XG5cbmV4cG9ydCBjb25zdCBFcnJvclBvcFVwOiBSZWFjdC5GQzxQcm9wcz4gPSAoeyB0aXRsZSwgbm90ZSwgc2hvdywgYnV0dG9uVGV4dCwgb25DbG9zZSB9KSA9PiB7XG4gIGNvbnN0IFtvdXRlcldyYXBwZXJBbmltYXRpb24sIHNldE91dGVyV3JhcHBlckFuaW1hdGlvbl0gPSB1c2VTdGF0ZSh7XG4gICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMCwgMCwgMCwgMClcIixcbiAgfSlcblxuICBjb25zdCBbcG9wVXBBbmltYXRpb24sIHNldFBvcFVwQW5pbWF0aW9uXSA9IHVzZVN0YXRlKHtcbiAgICBoZWlnaHQ6IDAsXG4gIH0pXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoc2hvdykge1xuICAgICAgc2V0T3V0ZXJXcmFwcGVyQW5pbWF0aW9uKHsgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMCwgMCwgMCwgMC41KVwiIH0pXG4gICAgICBzZXRQb3BVcEFuaW1hdGlvbih7IGhlaWdodDogXCJhdXRvXCIgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0T3V0ZXJXcmFwcGVyQW5pbWF0aW9uKHsgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMCwgMCwgMCwgMClcIiB9KVxuICAgICAgc2V0UG9wVXBBbmltYXRpb24oeyBoZWlnaHQ6IDAgfSlcbiAgICB9XG4gIH0sIFtzaG93XSlcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8QW5pbWF0ZWRQb3BVcCBzdHlsZT17cG9wVXBBbmltYXRpb259PlxuICAgICAgICA8Qm94IG09ezJ9PlxuICAgICAgICAgIDxTcGFjZXIgbXQ9ezJ9IC8+XG4gICAgICAgICAgPEJveD5cbiAgICAgICAgICAgIDxTYW5zIHNpemU9XCIyXCIgY29sb3I9e2NvbG9yKFwid2hpdGVcIil9PlxuICAgICAgICAgICAgICB7dGl0bGV9XG4gICAgICAgICAgICA8L1NhbnM+XG4gICAgICAgICAgICB7bm90ZSAmJiAoXG4gICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgPFNwYWNlciBtYj17Mn0gLz5cbiAgICAgICAgICAgICAgICA8U2FucyBzaXplPVwiMlwiIGNvbG9yPXtjb2xvcihcImxpZ2h0R3JlZW5cIil9PlxuICAgICAgICAgICAgICAgICAge25vdGV9XG4gICAgICAgICAgICAgICAgPC9TYW5zPlxuICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgPFNwYWNlciBtYj17Mn0gLz5cbiAgICAgICAgICA8U2VwYXJhdG9yIGNvbG9yPXtjb2xvcihcImxpZ2h0R3JlZW5cIil9IC8+XG4gICAgICAgICAgPFNwYWNlciBtYj17Mn0gLz5cbiAgICAgICAgICA8VG91Y2hhYmxlV2l0aG91dEZlZWRiYWNrIG9uUHJlc3M9eygpID0+IG9uQ2xvc2UoKX0+XG4gICAgICAgICAgICA8Qm94PlxuICAgICAgICAgICAgICA8U2FucyB0ZXh0QWxpZ249XCJjZW50ZXJcIiBzaXplPVwiMlwiIGNvbG9yPXtjb2xvcihcIndoaXRlXCIpfT5cbiAgICAgICAgICAgICAgICB7YnV0dG9uVGV4dH1cbiAgICAgICAgICAgICAgPC9TYW5zPlxuICAgICAgICAgICAgICA8U3BhY2VyIG10PXs0fSAvPlxuICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgPC9Ub3VjaGFibGVXaXRob3V0RmVlZGJhY2s+XG4gICAgICAgIDwvQm94PlxuICAgICAgPC9BbmltYXRlZFBvcFVwPlxuICAgICAge3Nob3cgJiYgPEFuaW1hdGVkT3V0ZXJXcmFwcGVyIHN0eWxlPXtvdXRlcldyYXBwZXJBbmltYXRpb259IC8+fVxuICAgIDwvPlxuICApXG59XG5cbmNvbnN0IE91dGVyV3JhcHBlciA9IHN0eWxlZChCb3gpYFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGZsZXg6IDE7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogOTk7XG5gXG5cbmNvbnN0IFBvcFVwID0gc3R5bGVkKEJveClgXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDMwO1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMzA7XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3IoXCJncmVlblwiKX07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgei1pbmRleDogMTAwO1xuYFxuXG5jb25zdCBBbmltYXRlZFBvcFVwID0gYW5pbWF0ZWQoUG9wVXApXG5cbmNvbnN0IEFuaW1hdGVkT3V0ZXJXcmFwcGVyID0gYW5pbWF0ZWQoT3V0ZXJXcmFwcGVyKVxuIl19