c32feaf09dd0f04e0c47c5bc4f51f554
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = extractViewBox;
exports.alignEnum = exports.meetOrSliceTypes = void 0;
var meetOrSliceTypes = {
  meet: 0,
  slice: 1,
  none: 2
};
exports.meetOrSliceTypes = meetOrSliceTypes;
var alignEnum = ['xMinYMin', 'xMidYMin', 'xMaxYMin', 'xMinYMid', 'xMidYMid', 'xMaxYMid', 'xMinYMax', 'xMidYMax', 'xMaxYMax', 'none'].reduce(function (prev, name) {
  prev[name] = name;
  return prev;
}, {});
exports.alignEnum = alignEnum;
var spacesRegExp = /\s+/;

function extractViewBox(props) {
  var viewBox = props.viewBox,
      preserveAspectRatio = props.preserveAspectRatio;

  if (!viewBox) {
    return null;
  }

  var params = (Array.isArray(viewBox) ? viewBox : viewBox.trim().split(spacesRegExp)).map(Number);

  if (params.length !== 4 || params.some(isNaN)) {
    console.warn('Invalid `viewBox` prop:' + viewBox);
    return null;
  }

  var modes = preserveAspectRatio ? preserveAspectRatio.trim().split(spacesRegExp) : [];
  var align = modes[0];
  var meetOrSlice = modes[1];
  return {
    minX: params[0],
    minY: params[1],
    vbWidth: params[2],
    vbHeight: params[3],
    align: alignEnum[align] || 'xMidYMid',
    meetOrSlice: meetOrSliceTypes[meetOrSlice] || 0
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4dHJhY3RWaWV3Qm94LnRzIl0sIm5hbWVzIjpbIm1lZXRPclNsaWNlVHlwZXMiLCJtZWV0Iiwic2xpY2UiLCJub25lIiwiYWxpZ25FbnVtIiwicHJldiIsInNwYWNlc1JlZ0V4cCIsInZpZXdCb3giLCJwcmVzZXJ2ZUFzcGVjdFJhdGlvIiwicHJvcHMiLCJwYXJhbXMiLCJBcnJheSIsImNvbnNvbGUiLCJtb2RlcyIsImFsaWduIiwibWVldE9yU2xpY2UiLCJtaW5YIiwibWluWSIsInZiV2lkdGgiLCJ2YkhlaWdodCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFTyxJQUFNQSxnQkFFWixHQUFHO0FBQ0ZDLEVBQUFBLElBQUksRUFERixDQUFBO0FBRUZDLEVBQUFBLEtBQUssRUFGSCxDQUFBO0FBR0ZDLEVBQUFBLElBQUksRUFMQztBQUVILENBRkc7O0FBUUEsSUFBTUMsU0FBc0MsR0FBRyxDQUFBLFVBQUEsRUFBQSxVQUFBLEVBQUEsVUFBQSxFQUFBLFVBQUEsRUFBQSxVQUFBLEVBQUEsVUFBQSxFQUFBLFVBQUEsRUFBQSxVQUFBLEVBQUEsVUFBQSxFQUFBLE1BQUEsRUFBQSxNQUFBLENBVzdDLFVBQUEsSUFBQSxFQUFBLElBQUEsRUFBNkM7QUFDcERDLEVBQUFBLElBQUksQ0FBSkEsSUFBSSxDQUFKQSxHQUFBQSxJQUFBQTtBQUNBLFNBQUEsSUFBQTtBQWJvRCxDQUFBLEVBQS9DLEVBQStDLENBQS9DOztBQWdCUCxJQUFNQyxZQUFZLEdBQWxCLEtBQUE7O0FBRWUsU0FBQSxjQUFBLENBQUEsS0FBQSxFQUdaO0FBQUEsTUFDT0MsT0FEUCxHQUN3Q0UsS0FEeEMsQ0FBQSxPQUFBO0FBQUEsTUFDZ0JELG1CQURoQixHQUN3Q0MsS0FEeEMsQ0FBQSxtQkFBQTs7QUFHRCxNQUFJLENBQUosT0FBQSxFQUFjO0FBQ1osV0FBQSxJQUFBO0FBR0Y7O0FBQUEsTUFBTUMsTUFBTSxHQUFHLENBQUNDLEtBQUssQ0FBTEEsT0FBQUEsQ0FBQUEsT0FBQUEsSUFBQUEsT0FBQUEsR0FFWkosT0FBTyxDQUFQQSxJQUFBQSxHQUFBQSxLQUFBQSxDQUZXLFlBRVhBLENBRlcsRUFBQSxHQUFBLENBQWYsTUFBZSxDQUFmOztBQUtBLE1BQUlHLE1BQU0sQ0FBTkEsTUFBQUEsS0FBQUEsQ0FBQUEsSUFBdUJBLE1BQU0sQ0FBTkEsSUFBQUEsQ0FBM0IsS0FBMkJBLENBQTNCLEVBQStDO0FBQzdDRSxJQUFBQSxPQUFPLENBQVBBLElBQUFBLENBQWEsNEJBQWJBLE9BQUFBO0FBQ0EsV0FBQSxJQUFBO0FBR0Y7O0FBQUEsTUFBTUMsS0FBSyxHQUFHTCxtQkFBbUIsR0FDN0JBLG1CQUFtQixDQUFuQkEsSUFBQUEsR0FBQUEsS0FBQUEsQ0FENkIsWUFDN0JBLENBRDZCLEdBQWpDLEVBQUE7QUFHQSxNQUFNTSxLQUFLLEdBQUdELEtBQUssQ0FBbkIsQ0FBbUIsQ0FBbkI7QUFDQSxNQUFNRSxXQUFXLEdBQUdGLEtBQUssQ0FBekIsQ0FBeUIsQ0FBekI7QUFFQSxTQUFPO0FBQ0xHLElBQUFBLElBQUksRUFBRU4sTUFBTSxDQURQLENBQ08sQ0FEUDtBQUVMTyxJQUFBQSxJQUFJLEVBQUVQLE1BQU0sQ0FGUCxDQUVPLENBRlA7QUFHTFEsSUFBQUEsT0FBTyxFQUFFUixNQUFNLENBSFYsQ0FHVSxDQUhWO0FBSUxTLElBQUFBLFFBQVEsRUFBRVQsTUFBTSxDQUpYLENBSVcsQ0FKWDtBQUtMSSxJQUFBQSxLQUFLLEVBQUVWLFNBQVMsQ0FBVEEsS0FBUyxDQUFUQSxJQUxGLFVBQUE7QUFNTFcsSUFBQUEsV0FBVyxFQUFFZixnQkFBZ0IsQ0FBaEJBLFdBQWdCLENBQWhCQSxJQU5mO0FBQU8sR0FBUDtBQVFEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTnVtYmVyUHJvcCB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgbWVldE9yU2xpY2VUeXBlczoge1xuICBbbWVldE9yU2xpY2U6IHN0cmluZ106IG51bWJlcjtcbn0gPSB7XG4gIG1lZXQ6IDAsXG4gIHNsaWNlOiAxLFxuICBub25lOiAyLFxufTtcblxuZXhwb3J0IGNvbnN0IGFsaWduRW51bTogeyBbYWxpZ246IHN0cmluZ106IHN0cmluZyB9ID0gW1xuICAneE1pbllNaW4nLFxuICAneE1pZFlNaW4nLFxuICAneE1heFlNaW4nLFxuICAneE1pbllNaWQnLFxuICAneE1pZFlNaWQnLFxuICAneE1heFlNaWQnLFxuICAneE1pbllNYXgnLFxuICAneE1pZFlNYXgnLFxuICAneE1heFlNYXgnLFxuICAnbm9uZScsXG5dLnJlZHVjZSgocHJldjogeyBbYWxpZ246IHN0cmluZ106IHN0cmluZyB9LCBuYW1lKSA9PiB7XG4gIHByZXZbbmFtZV0gPSBuYW1lO1xuICByZXR1cm4gcHJldjtcbn0sIHt9KTtcblxuY29uc3Qgc3BhY2VzUmVnRXhwID0gL1xccysvO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBleHRyYWN0Vmlld0JveChwcm9wczoge1xuICB2aWV3Qm94Pzogc3RyaW5nIHwgKE51bWJlclByb3ApW107XG4gIHByZXNlcnZlQXNwZWN0UmF0aW8/OiBzdHJpbmc7XG59KSB7XG4gIGNvbnN0IHsgdmlld0JveCwgcHJlc2VydmVBc3BlY3RSYXRpbyB9ID0gcHJvcHM7XG5cbiAgaWYgKCF2aWV3Qm94KSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zdCBwYXJhbXMgPSAoQXJyYXkuaXNBcnJheSh2aWV3Qm94KVxuICAgID8gdmlld0JveFxuICAgIDogdmlld0JveC50cmltKCkuc3BsaXQoc3BhY2VzUmVnRXhwKVxuICApLm1hcChOdW1iZXIpO1xuXG4gIGlmIChwYXJhbXMubGVuZ3RoICE9PSA0IHx8IHBhcmFtcy5zb21lKGlzTmFOKSkge1xuICAgIGNvbnNvbGUud2FybignSW52YWxpZCBgdmlld0JveGAgcHJvcDonICsgdmlld0JveCk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zdCBtb2RlcyA9IHByZXNlcnZlQXNwZWN0UmF0aW9cbiAgICA/IHByZXNlcnZlQXNwZWN0UmF0aW8udHJpbSgpLnNwbGl0KHNwYWNlc1JlZ0V4cClcbiAgICA6IFtdO1xuICBjb25zdCBhbGlnbiA9IG1vZGVzWzBdO1xuICBjb25zdCBtZWV0T3JTbGljZSA9IG1vZGVzWzFdO1xuXG4gIHJldHVybiB7XG4gICAgbWluWDogcGFyYW1zWzBdLFxuICAgIG1pblk6IHBhcmFtc1sxXSxcbiAgICB2YldpZHRoOiBwYXJhbXNbMl0sXG4gICAgdmJIZWlnaHQ6IHBhcmFtc1szXSxcbiAgICBhbGlnbjogYWxpZ25FbnVtW2FsaWduXSB8fCAneE1pZFlNaWQnLFxuICAgIG1lZXRPclNsaWNlOiBtZWV0T3JTbGljZVR5cGVzW21lZXRPclNsaWNlXSB8fCAwLFxuICB9O1xufVxuIl19