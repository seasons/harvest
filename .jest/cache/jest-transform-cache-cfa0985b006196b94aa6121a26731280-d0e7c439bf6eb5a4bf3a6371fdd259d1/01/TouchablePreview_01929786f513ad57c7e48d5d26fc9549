72882deab9e4efb82a04de923b9b21ea
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = require("react");

var PropTypes = require("prop-types");

var react_native_1 = require("react-native");

var PREVIEW_DELAY = 350;
var PREVIEW_MIN_FORCE = 0.1;
var PREVIEW_TIMEOUT = 1250;

var TouchablePreview = function (_React$PureComponent) {
  (0, _inherits2.default)(TouchablePreview, _React$PureComponent);

  function TouchablePreview() {
    var _this;

    (0, _classCallCheck2.default)(this, TouchablePreview);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TouchablePreview).apply(this, arguments));
    _this.touchStartedAt = 0;
    _this.onRef = React.createRef();

    _this.onPress = function () {
      var onPress = _this.props.onPress;

      if (typeof onPress !== 'function' || TouchablePreview.peeking) {
        return;
      }

      return onPress();
    };

    _this.onPressIn = function () {
      if (react_native_1.Platform.OS === 'ios') {
        var onPressIn = _this.props.onPressIn;

        if (!onPressIn) {
          return;
        }

        var reactTag = react_native_1.findNodeHandle(_this.onRef.current);
        return onPressIn({
          reactTag: reactTag
        });
      }

      return null;
    };

    _this.onTouchStart = function (event) {
      _this.touchStartedAt = event.nativeEvent.timestamp;
    };

    _this.onTouchMove = function (event) {
      clearTimeout(_this.timeout);
      var _event$nativeEvent = event.nativeEvent,
          force = _event$nativeEvent.force,
          timestamp = _event$nativeEvent.timestamp;
      var diff = timestamp - _this.touchStartedAt;

      if (force > PREVIEW_MIN_FORCE && diff > PREVIEW_DELAY) {
        TouchablePreview.peeking = true;

        if (typeof _this.props.onPeekIn === 'function') {
          _this.props.onPeekIn();
        }
      }

      _this.timeout = setTimeout(_this.onTouchEnd, PREVIEW_TIMEOUT);
    };

    _this.onTouchEnd = function () {
      clearTimeout(_this.timeout);
      TouchablePreview.peeking = false;

      if (typeof _this.props.onPeekOut === 'function') {
        _this.props.onPeekOut();
      }
    };

    return _this;
  }

  (0, _createClass2.default)(TouchablePreview, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          touchableComponent = _this$props.touchableComponent,
          onPress = _this$props.onPress,
          onPressIn = _this$props.onPressIn,
          props = (0, _objectWithoutProperties2.default)(_this$props, ["children", "touchableComponent", "onPress", "onPressIn"]);
      var Touchable = react_native_1.Platform.OS === 'ios' && touchableComponent instanceof react_native_1.TouchableNativeFeedback ? react_native_1.TouchableWithoutFeedback : touchableComponent;
      return React.createElement(Touchable, (0, _extends2.default)({
        ref: this.onRef,
        onPress: this.onPress,
        onPressIn: this.onPressIn
      }, props), React.createElement(react_native_1.View, {
        onTouchStart: this.onTouchStart,
        onTouchMove: this.onTouchMove,
        onTouchEnd: this.onTouchEnd
      }, children));
    }
  }]);
  return TouchablePreview;
}(React.PureComponent);

TouchablePreview.propTypes = {
  children: PropTypes.node,
  touchableComponent: PropTypes.func,
  onPress: PropTypes.func,
  onPressIn: PropTypes.func,
  onPeekIn: PropTypes.func,
  onPeekOut: PropTypes.func
};
TouchablePreview.defaultProps = {
  touchableComponent: react_native_1.TouchableWithoutFeedback
};
TouchablePreview.peeking = false;
exports.TouchablePreview = TouchablePreview;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,