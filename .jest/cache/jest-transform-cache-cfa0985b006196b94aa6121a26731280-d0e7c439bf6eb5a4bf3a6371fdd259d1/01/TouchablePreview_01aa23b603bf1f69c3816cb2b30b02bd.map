{"version":3,"sources":["TouchablePreview.js"],"names":["Object","defineProperty","exports","value","React","require","PropTypes","react_native_1","PREVIEW_DELAY","PREVIEW_MIN_FORCE","PREVIEW_TIMEOUT","TouchablePreview","arguments","touchStartedAt","onRef","createRef","onPress","props","peeking","onPressIn","Platform","OS","reactTag","findNodeHandle","current","onTouchStart","event","nativeEvent","timestamp","onTouchMove","clearTimeout","timeout","force","diff","onPeekIn","setTimeout","onTouchEnd","onPeekOut","children","touchableComponent","Touchable","TouchableNativeFeedback","TouchableWithoutFeedback","PureComponent","propTypes","node","func","defaultProps"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst PropTypes = require(\"prop-types\");\nconst react_native_1 = require(\"react-native\");\nconst PREVIEW_DELAY = 350;\nconst PREVIEW_MIN_FORCE = 0.1;\nconst PREVIEW_TIMEOUT = 1250;\nclass TouchablePreview extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.touchStartedAt = 0;\n        this.onRef = React.createRef();\n        this.onPress = () => {\n            const { onPress } = this.props;\n            if (typeof onPress !== 'function' || TouchablePreview.peeking) {\n                return;\n            }\n            return onPress();\n        };\n        this.onPressIn = () => {\n            if (react_native_1.Platform.OS === 'ios') {\n                const { onPressIn } = this.props;\n                if (!onPressIn) {\n                    return;\n                }\n                const reactTag = react_native_1.findNodeHandle(this.onRef.current);\n                return onPressIn({ reactTag });\n            }\n            // Other platforms don't support 3D Touch Preview API\n            return null;\n        };\n        this.onTouchStart = (event) => {\n            // Store a timstamp of the initial touch start\n            this.touchStartedAt = event.nativeEvent.timestamp;\n        };\n        this.onTouchMove = (event) => {\n            clearTimeout(this.timeout);\n            const { force, timestamp } = event.nativeEvent;\n            const diff = timestamp - this.touchStartedAt;\n            if (force > PREVIEW_MIN_FORCE && diff > PREVIEW_DELAY) {\n                TouchablePreview.peeking = true;\n                if (typeof this.props.onPeekIn === 'function') {\n                    this.props.onPeekIn();\n                }\n            }\n            this.timeout = setTimeout(this.onTouchEnd, PREVIEW_TIMEOUT);\n        };\n        this.onTouchEnd = () => {\n            clearTimeout(this.timeout);\n            TouchablePreview.peeking = false;\n            if (typeof this.props.onPeekOut === 'function') {\n                this.props.onPeekOut();\n            }\n        };\n    }\n    render() {\n        const { children, touchableComponent, onPress, onPressIn, ...props } = this.props;\n        // Default to TouchableWithoutFeedback for iOS if set to TouchableNativeFeedback\n        const Touchable = (react_native_1.Platform.OS === 'ios' && touchableComponent instanceof react_native_1.TouchableNativeFeedback) ?\n            react_native_1.TouchableWithoutFeedback :\n            touchableComponent;\n        // Wrap component with Touchable for handling platform touches\n        // and a single react View for detecting force and timing.\n        return (<Touchable ref={this.onRef} onPress={this.onPress} onPressIn={this.onPressIn} {...props}>\n        <react_native_1.View onTouchStart={this.onTouchStart} onTouchMove={this.onTouchMove} onTouchEnd={this.onTouchEnd}>\n          {children}\n        </react_native_1.View>\n      </Touchable>);\n    }\n}\nTouchablePreview.propTypes = {\n    children: PropTypes.node,\n    touchableComponent: PropTypes.func,\n    onPress: PropTypes.func,\n    onPressIn: PropTypes.func,\n    onPeekIn: PropTypes.func,\n    onPeekOut: PropTypes.func,\n};\nTouchablePreview.defaultProps = {\n    touchableComponent: react_native_1.TouchableWithoutFeedback,\n};\nTouchablePreview.peeking = false;\nexports.TouchablePreview = TouchablePreview;\n"]}