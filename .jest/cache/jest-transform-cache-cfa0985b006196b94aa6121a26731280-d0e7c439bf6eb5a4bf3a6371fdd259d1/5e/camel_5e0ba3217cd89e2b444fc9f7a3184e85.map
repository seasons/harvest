{"version":3,"sources":["camel.js"],"names":["snakeToCamel","str","parts","split","reduce","p","c","charAt","toUpperCase","slice","shift","toCamelCase","object","options","toString","call","attributes","whitelist","rootOnly","Object","keys","key","inList","indexOf","newKey","module","exports"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,MAAIC,KAAK,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAZ;AACA,SAAOD,KAAK,CAACE,MAAN,CAAa,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACjC,WAAOD,CAAC,GAAGC,CAAC,CAACC,MAAF,CAAS,CAAT,EAAYC,WAAZ,EAAJ,GAAgCF,CAAC,CAACG,KAAF,CAAQ,CAAR,CAAvC;AACD,GAFM,EAEJP,KAAK,CAACQ,KAAN,EAFI,CAAP;AAGD;;AAED,SAASC,WAAT,CAAqBC,MAArB,EAA2C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AACzC,MACE,OAAOD,MAAP,KAAkB,QAAlB,IACAE,QAAQ,CAACC,IAAT,CAAcH,MAAd,MAA0B,gBAD1B,IAEAA,MAAM,KAAK,IAHb,EAIE;AACA,WAAOA,MAAP;AACD;;AAPwC,4BASwBC,OATxB,CASjCG,UATiC;AAAA,MASjCA,UATiC,oCASpB,EAToB;AAAA,2BASwBH,OATxB,CAShBI,SATgB;AAAA,MAShBA,SATgB,mCASJ,KATI;AAAA,0BASwBJ,OATxB,CASGK,QATH;AAAA,MASGA,QATH,kCASc,KATd;AAWzC,SAAOC,MAAM,CAACC,IAAP,CAAYR,MAAZ,EAAoBR,MAApB,CAA2B,UAASC,CAAT,EAAYgB,GAAZ,EAAiB;AACjD,QAAMC,MAAM,GAAGN,UAAU,CAACO,OAAX,CAAmBF,GAAnB,MAA4B,CAAC,CAA5C;AACA,QAAIG,MAAM,GACPF,MAAM,IAAIL,SAAX,IAA0B,CAACK,MAAD,IAAW,CAACL,SAAtC,GACIjB,YAAY,CAACqB,GAAD,CADhB,GAEIA,GAHN;AAIAhB,IAAAA,CAAC,CAACmB,MAAD,CAAD,GAAYN,QAAQ,GAAGN,MAAM,CAACS,GAAD,CAAT,GAAiBV,WAAW,CAACC,MAAM,CAACS,GAAD,CAAP,CAAhD;AACA,WAAOhB,CAAP;AACD,GARM,EAQJ,EARI,CAAP;AASD;;AAEDoB,MAAM,CAACC,OAAP,GAAiB;AAAE1B,EAAAA,YAAY,EAAZA,YAAF;AAAgBW,EAAAA,WAAW,EAAXA;AAAhB,CAAjB","sourcesContent":["function snakeToCamel(str) {\n  var parts = str.split('_');\n  return parts.reduce(function(p, c) {\n    return p + c.charAt(0).toUpperCase() + c.slice(1);\n  }, parts.shift());\n}\n\nfunction toCamelCase(object, options = {}) {\n  if (\n    typeof object !== 'object' ||\n    toString.call(object) === '[object Array]' ||\n    object === null\n  ) {\n    return object;\n  }\n\n  const { attributes = [], whitelist = false, rootOnly = false } = options;\n\n  return Object.keys(object).reduce(function(p, key) {\n    const inList = attributes.indexOf(key) !== -1;\n    var newKey =\n      (inList && whitelist) || (!inList && !whitelist)\n        ? snakeToCamel(key)\n        : key;\n    p[newKey] = rootOnly ? object[key] : toCamelCase(object[key]);\n    return p;\n  }, {});\n}\n\nmodule.exports = { snakeToCamel, toCamelCase };\n"]}