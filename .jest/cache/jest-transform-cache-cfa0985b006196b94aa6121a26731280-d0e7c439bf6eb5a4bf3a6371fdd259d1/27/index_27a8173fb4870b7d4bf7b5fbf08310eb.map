{"version":3,"sources":["index.tsx"],"names":["GET_PRODUCTS","gql","renderItem","componentId","item","itemWidth","Dimensions","get","width","product","node","image","images","thumbnail","thumbnails","large","url","id","uri","brand","name","retailPrice","Browse","props","loading","data","products","edges","categories","toString","ImageContainer","styled","Image","SearchBar","TextInput","fontFamily","sans","medium","CategoryPicker","FlatList"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { FlatList, Dimensions, TouchableWithoutFeedback } from \"react-native\"\nimport { Container } from \"Components/Container\"\nimport gql from \"graphql-tag\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { Box, Sans, Flex } from \"App/Components\"\nimport styled from \"styled-components/native\"\nimport { fontFamily } from \"Components/Typography\"\nimport { goToProduct } from \"App/Navigation\"\n\nconst GET_PRODUCTS = gql`\n  {\n    categories {\n      name\n      id\n    }\n    products(first: 30, categoryName: \"Puffer\") {\n      edges {\n        node {\n          id\n          name\n          description\n          images\n          modelSize\n          modelHeight\n          externalUrl\n          tags\n          retailPrice\n          createdAt\n          updatedAt\n\n          brand {\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nconst renderItem = ({ item }, componentId) => {\n  const itemWidth = Dimensions.get(\"window\").width / 2 - 10\n  const product = item.node\n  const image = product.images && product.images[0]\n  const thumbnail = (image && image.thumbnails && image.thumbnails.large) || { url: \"https://via.placeholder.com/150\" }\n\n  return (\n    <TouchableWithoutFeedback onPress={() => goToProduct(componentId, item.id)}>\n      <Box m={1} mb={2} width={itemWidth}>\n        <ImageContainer source={{ uri: thumbnail.url }}></ImageContainer>\n        <Box m={2}>\n          <Sans size=\"0\">{product.brand.name}</Sans>\n          <Sans size=\"0\" color=\"gray\">\n            {product.name}\n          </Sans>\n          <Sans size=\"0\" color=\"gray\">\n            ${product.retailPrice}\n          </Sans>\n        </Box>\n      </Box>\n    </TouchableWithoutFeedback>\n  )\n}\n\nexport const Browse = (props: any) => {\n  const { loading, data } = useQuery(GET_PRODUCTS)\n\n  if (loading) {\n    return null\n  }\n\n  const products = data && data.products.edges\n  const categories = data && data.categories.edges\n\n  return (\n    <Container>\n      <Flex flexDirection=\"column\" pb=\"150\">\n        <Box my={2} mx={4}>\n          <SearchBar placeholder=\"Search Seasons\" />\n        </Box>\n        <Flex>\n          <FlatList\n            data={products}\n            keyExtractor={item => item.node.id}\n            renderItem={item => renderItem(item, props.componentId)}\n            numColumns={2}\n          />\n        </Flex>\n        <Box my={1} mx={0} height=\"70\" backgroundColor=\"blue\">\n          <CategoryPicker\n            data={categories}\n            renderItem={({ item }) => {\n              return (\n                <Box mr={2}>\n                  <Sans size=\"1\">{item.node.name}</Sans>\n                </Box>\n              )\n            }}\n            keyExtractor={({ node }) => node.id.toString()}\n            showsHorizontalScrollIndicator={false}\n            horizontal\n          />\n        </Box>\n      </Flex>\n    </Container>\n  )\n}\n\nconst ImageContainer = styled.Image`\n  background: rgba(0, 0, 0, 0.3);\n  width: 100%;\n  height: 240;\n`\n\nconst SearchBar = styled.TextInput`\n  background-color: #f2f2f2;\n  border-radius: 21px;\n  height: 42px;\n  width: 100%;\n  font-family: ${fontFamily.sans.medium};\n  font-size: 16px;\n  text-align: center;\n`\n\nconst CategoryPicker = styled.FlatList`\n  height: 70;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  left: 0;\n`\n"]}