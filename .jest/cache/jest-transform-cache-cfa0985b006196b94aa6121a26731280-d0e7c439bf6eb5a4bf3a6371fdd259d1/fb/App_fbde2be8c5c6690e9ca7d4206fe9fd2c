c519c81c31e8fe81dd3507f989b4344d
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.start = start;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _Bag = require("./Scenes/Bag");

var _Account = require("./Scenes/Account");

var _Home = require("./Scenes/Home");

var _Product = require("./Scenes/Product");

var _Browse = require("./Scenes/Browse");

var _reactNativeNavigation = require("react-native-navigation");

var _apolloClient = require("apollo-client");

var _reactHooks = require("@apollo/react-hooks");

var _apolloCacheInmemory = require("apollo-cache-inmemory");

var _apolloLinkHttp = require("apollo-link-http");

var _SignIn = require("./Scenes/SignIn");

var _StateProvider = require("./helpers/StateProvider");

var _asyncStorage = require("./helpers/asyncStorage");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var cache = new _apolloCacheInmemory.InMemoryCache();
var link = new _apolloLinkHttp.HttpLink({
  uri: "https://monsoon-staging.herokuapp.com"
});
var client = new _apolloClient.ApolloClient({
  cache: cache,
  link: link,
  name: "react-web-client",
  version: "1.3",
  queryDeduplication: false,
  defaultOptions: {
    watchQuery: {
      fetchPolicy: "cache-and-network"
    }
  }
});

var App = function App(Component, cacheData) {
  var initialState = cacheData;

  var reducer = function reducer(state, action) {
    var items = state.bag.items || [];

    switch (action.type) {
      case "addItemToBag":
        if (state.bag.items.includes(action.item)) {
          return;
        }

        items.push(action.item);

        var bagWithItem = _objectSpread({}, state, {
          bag: _objectSpread({}, state.bag, {
            items: items
          })
        });

        (0, _asyncStorage.persistCache)(bagWithItem);
        return bagWithItem;

      case "removeItemFromBag":
        var bagWithoutItem = _objectSpread({}, state, {
          bag: _objectSpread({}, state.bag, {
            items: items.filter(function (bagItem) {
              return bagItem.id === action.item.id;
            })
          })
        });

        (0, _asyncStorage.persistCache)(bagWithoutItem);
        return bagWithoutItem;

      default:
        return state;
    }
  };

  return function (props) {
    return _react.default.createElement(_reactHooks.ApolloProvider, {
      client: client
    }, _react.default.createElement(_StateProvider.StateProvider, {
      initialState: initialState,
      reducer: reducer
    }, _react.default.createElement(Component, props)));
  };
};

var registerNavigation = function registerNavigation(cacheData) {
  _reactNativeNavigation.Navigation.registerComponent("Initializing", function () {
    return App(_SignIn.Initializing, cacheData);
  }, function () {
    return _SignIn.Initializing;
  });

  _reactNativeNavigation.Navigation.registerComponent("Welcome", function () {
    return App(_SignIn.Welcome, cacheData);
  }, function () {
    return _SignIn.Welcome;
  });

  _reactNativeNavigation.Navigation.registerComponent("Notifications", function () {
    return App(_SignIn.Notifications, cacheData);
  }, function () {
    return _SignIn.Notifications;
  });

  _reactNativeNavigation.Navigation.registerComponent("Home", function () {
    return App(_Home.Home, cacheData);
  }, function () {
    return _Home.Home;
  });

  _reactNativeNavigation.Navigation.registerComponent("Product", function () {
    return App(_Product.Product, cacheData);
  }, function () {
    return _Product.Product;
  });

  _reactNativeNavigation.Navigation.registerComponent("SignIn", function () {
    return App(_SignIn.SignIn, cacheData);
  }, function () {
    return _SignIn.SignIn;
  });

  _reactNativeNavigation.Navigation.registerComponent("Browse", function () {
    return App(_Browse.Browse, cacheData);
  }, function () {
    return _Browse.Browse;
  });

  _reactNativeNavigation.Navigation.registerComponent("Bag", function () {
    return App(_Bag.Bag, cacheData);
  }, function () {
    return _Bag.Bag;
  });

  _reactNativeNavigation.Navigation.registerComponent("Account", function () {
    return App(_Account.Profile, cacheData);
  }, function () {
    return _Account.Profile;
  });

  _reactNativeNavigation.Navigation.registerComponent("Account.PaymentAndShipping", function () {
    return App(_Account.PaymentAndShipping, cacheData);
  }, function () {
    return _Account.PaymentAndShipping;
  });

  _reactNativeNavigation.Navigation.events().registerAppLaunchedListener(function _callee() {
    return _regenerator.default.async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _reactNativeNavigation.Navigation.setDefaultOptions({
              layout: {
                componentBackgroundColor: "black",
                orientation: ["portrait"],
                direction: "ltr"
              },
              bottomTabs: {
                titleDisplayMode: "alwaysHide",
                backgroundColor: "black",
                hideShadow: true
              },
              bottomTab: {
                iconColor: "#4D4D4D",
                selectedIconColor: "#fff"
              },
              topBar: {
                visible: false
              }
            });

            _reactNativeNavigation.Navigation.setRoot({
              root: {
                component: {
                  name: "Initializing"
                }
              }
            });

          case 2:
          case "end":
            return _context.stop();
        }
      }
    });
  });
};

function start() {
  (0, _asyncStorage.restoreCache)().then(function (data) {
    return registerNavigation(data);
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,