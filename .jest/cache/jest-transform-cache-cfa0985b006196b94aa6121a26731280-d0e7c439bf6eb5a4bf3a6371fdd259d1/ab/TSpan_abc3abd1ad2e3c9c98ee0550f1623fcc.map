{"version":3,"sources":["TSpan.tsx"],"names":["TSpan","Shape","displayName","setNativeProps","matrix","props","prop","x","y","RNSVGTSpan"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,aAAA,GAAA,uBAAA,CAAA,OAAA,+BAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,mCAAA,CAAA;;AACA,IAAA,YAAA,GAAA,uBAAA,CAAA,OAAA,8BAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,eAAA;;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,WAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGqBA;;AAAAA,IAAAA,K;;;;;;;;;;;;;;;;UAGnBG,c,GAAiB,UAAA,KAAA,EAKZ;AACH,UAAMC,MAAM,GAAG,CAACC,KAAK,CAAN,MAAA,IAAiB,CAAA,GAAA,iBAAA,CAAA,OAAA,EAAhC,KAAgC,CAAhC;;AACA,UAAA,MAAA,EAAY;AACVA,QAAAA,KAAK,CAALA,MAAAA,GAAAA,MAAAA;AAEF;;AAAA,UAAMC,IAAI,GAAG,CAAA,GAAA,aAAA,CAAA,cAAA,EAAb,KAAa,CAAb;AACA,OAAA,GAAA,SAAA,CAAA,OAAA,EAAA,IAAA,EAAoB,CAAA,GAAA,KAAA,CAAA,UAAA,EAAW,CAAA,GAAA,YAAA,CAAA,OAAA,EAAA,IAAA,EAA/B,KAA+B,CAAX,CAApB;AACA,MAAA,KAAA,CAAA,IAAA,IAAa,KAAA,CAAA,IAAA,CAAA,cAAA,CAAb,IAAa,CAAb;;;;;;;;6BAGO;AACP,UAAMA,IAAI,GAAG,CAAA,GAAA,aAAA,CAAA,cAAA,EAAe,KAA5B,KAAa,CAAb;AACA,UAAMD,KAAK,GAAG,CAAA,GAAA,aAAA,CAAA,OAAA,EAAA,aAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAGVE,QAAAA,CAAC,EAHS,IAAA;AAIVC,QAAAA,CAAC,EAJS;AAAA,OAAA,CAAA,EAAd,IAAc,CAAd;AAQA,OAAA,GAAA,SAAA,CAAA,OAAA,EAAA,KAAA,EAAqB,CAAA,GAAA,YAAA,CAAA,OAAA,EAAA,IAAA,EAArB,KAAqB,CAArB;AACAH,MAAAA,KAAK,CAALA,GAAAA,GAAY,KAAZA,SAAAA;AACA,aAAO,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,UAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAP;AAAO;AAAA,OAAA,CAAA,CAAP;;;;EA9B+BJ,OAAAA,CAAAA,O,CAAdD;;;AAAAA,K,CACZE,WADYF,GACE,OADFA;AAkCrB,CAAA,GAAA,YAAA,CAAA,QAAA,EAAA,KAAA;AAEO,IAAMS,UAAU,GAAG,CAAA,GAAA,YAAA,CAAA,sBAAA,EAAnB,YAAmB,CAAnB","sourcesContent":["import React, { Component } from 'react';\nimport { requireNativeComponent } from 'react-native';\nimport extractProps, { propsAndStyles } from '../lib/extract/extractProps';\nimport extractTransform from '../lib/extract/extractTransform';\nimport extractText, { setTSpan } from '../lib/extract/extractText';\nimport { pickNotNil } from '../lib/util';\nimport Shape from './Shape';\nimport { TransformProps } from '../lib/extract/types';\n\nexport default class TSpan extends Shape<{}> {\n  static displayName = 'TSpan';\n\n  setNativeProps = (\n    props: Object & {\n      matrix?: number[];\n      style?: [] | {};\n    } & TransformProps,\n  ) => {\n    const matrix = !props.matrix && extractTransform(props);\n    if (matrix) {\n      props.matrix = matrix;\n    }\n    const prop = propsAndStyles(props);\n    Object.assign(prop, pickNotNil(extractText(prop, false)));\n    this.root && this.root.setNativeProps(prop);\n  };\n\n  render() {\n    const prop = propsAndStyles(this.props);\n    const props = extractProps(\n      {\n        ...prop,\n        x: null,\n        y: null,\n      },\n      this,\n    );\n    Object.assign(props, extractText(prop, false));\n    props.ref = this.refMethod as (instance: Component | null) => void;\n    return <RNSVGTSpan {...props} />;\n  }\n}\n\nsetTSpan(TSpan);\n\nexport const RNSVGTSpan = requireNativeComponent('RNSVGTSpan');\n"]}