{"version":3,"sources":["App.tsx"],"names":["cache","InMemoryCache","link","HttpLink","uri","client","ApolloClient","name","version","queryDeduplication","defaultOptions","watchQuery","fetchPolicy","App","Component","cacheData","initialState","reducer","state","action","items","bag","type","includes","item","push","bagWithItem","bagWithoutItem","filter","bagItem","id","props","registerNavigation","Navigation","registerComponent","Initializing","Welcome","Notifications","Home","Product","SignIn","Browse","Bag","Profile","PaymentAndShipping","events","registerAppLaunchedListener","setDefaultOptions","layout","componentBackgroundColor","orientation","direction","bottomTabs","titleDisplayMode","backgroundColor","hideShadow","bottomTab","iconColor","selectedIconColor","topBar","visible","setRoot","root","component","start","then","data"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Bag } from \"Scenes/Bag\"\nimport { Profile, PaymentAndShipping } from \"Scenes/Account\"\nimport { Home } from \"Scenes/Home\"\nimport { Product } from \"Scenes/Product\"\nimport { Browse } from \"Scenes/Browse\"\nimport { Navigation } from \"react-native-navigation\"\nimport { ApolloClient } from \"apollo-client\"\nimport { ApolloProvider } from \"@apollo/react-hooks\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { SignIn, Welcome, Initializing, Notifications } from \"Scenes/SignIn\"\nimport { StateProvider } from \"App/helpers/StateProvider\"\nimport { restoreCache, persistCache } from \"./helpers/asyncStorage\"\n\n// Instantiate required constructor fields\nconst cache = new InMemoryCache()\n\nconst link = new HttpLink({\n  uri: \"https://monsoon-staging.herokuapp.com\",\n})\n\nconst client = new ApolloClient({\n  // Provide required constructor fields\n  cache,\n  link,\n  // Provide some optional constructor fields\n  name: \"react-web-client\",\n  version: \"1.3\",\n  queryDeduplication: false,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: \"cache-and-network\",\n    },\n  },\n})\n\n// Create the client as outlined in the setup guide\nconst App = (Component: React.ComponentType, cacheData) => {\n  const initialState = cacheData\n\n  const reducer = (state, action) => {\n    const items = state.bag.items || []\n    switch (action.type) {\n      case \"addItemToBag\":\n        if (state.bag.items.includes(action.item)) {\n          return\n        }\n        items.push(action.item)\n        const bagWithItem = {\n          ...state,\n          bag: { ...state.bag, items },\n        }\n        persistCache(bagWithItem)\n        return bagWithItem\n      case \"removeItemFromBag\":\n        const bagWithoutItem = {\n          ...state,\n          bag: { ...state.bag, items: items.filter(bagItem => bagItem.id === action.item.id) },\n        }\n        persistCache(bagWithoutItem)\n        return bagWithoutItem\n      default:\n        return state\n    }\n  }\n\n  return props => (\n    <ApolloProvider client={client}>\n      <StateProvider initialState={initialState} reducer={reducer}>\n        <Component {...props} />\n      </StateProvider>\n    </ApolloProvider>\n  )\n}\n\nconst registerNavigation = cacheData => {\n  Navigation.registerComponent(\"Initializing\", () => App(Initializing, cacheData), () => Initializing)\n  Navigation.registerComponent(\"Welcome\", () => App(Welcome, cacheData), () => Welcome)\n  Navigation.registerComponent(\"Notifications\", () => App(Notifications, cacheData), () => Notifications)\n  Navigation.registerComponent(\"Home\", () => App(Home, cacheData), () => Home)\n  Navigation.registerComponent(\"Product\", () => App(Product, cacheData), () => Product)\n  Navigation.registerComponent(\"SignIn\", () => App(SignIn, cacheData), () => SignIn)\n  Navigation.registerComponent(\"Browse\", () => App(Browse, cacheData), () => Browse)\n  Navigation.registerComponent(\"Bag\", () => App(Bag, cacheData), () => Bag)\n  Navigation.registerComponent(\"Account\", () => App(Profile, cacheData), () => Profile)\n  Navigation.registerComponent(\n    \"Account.PaymentAndShipping\",\n    () => App(PaymentAndShipping, cacheData),\n    () => PaymentAndShipping\n  )\n\n  Navigation.events().registerAppLaunchedListener(async () => {\n    Navigation.setDefaultOptions({\n      layout: {\n        componentBackgroundColor: \"black\",\n        orientation: [\"portrait\"],\n        direction: \"ltr\",\n      },\n      bottomTabs: {\n        titleDisplayMode: \"alwaysHide\",\n        backgroundColor: \"black\",\n        hideShadow: true,\n      },\n      bottomTab: {\n        iconColor: \"#4D4D4D\",\n        selectedIconColor: \"#fff\",\n      },\n      topBar: {\n        visible: false,\n      },\n    })\n\n    Navigation.setRoot({\n      root: {\n        component: {\n          name: \"Initializing\",\n        },\n      },\n    })\n  })\n}\n\nexport function start() {\n  restoreCache().then(data => registerNavigation(data))\n}\n"]}