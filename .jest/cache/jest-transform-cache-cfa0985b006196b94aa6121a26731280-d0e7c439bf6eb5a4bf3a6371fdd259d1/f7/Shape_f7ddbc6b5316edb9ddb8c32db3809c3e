cf0d5d9c17d31839bc1c892c5967fb4b
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = require("react");

var _SvgTouchableMixin = _interopRequireDefault(require("../lib/SvgTouchableMixin"));

var touchableGetInitialState = _SvgTouchableMixin.default.touchableGetInitialState;
var touchKeys = Object.keys(_SvgTouchableMixin.default);
var touchVals = touchKeys.map(function (key) {
  return _SvgTouchableMixin.default[key];
});
var numTouchKeys = touchKeys.length;

var Shape = function (_Component) {
  (0, _inherits2.default)(Shape, _Component);

  function Shape(_props, context) {
    var _this;

    (0, _classCallCheck2.default)(this, Shape);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Shape).call(this, _props, context));
    _this.root = null;

    _this.refMethod = function (instance) {
      _this.root = instance;
    };

    _this.setNativeProps = function (props) {
      _this.root && _this.root.setNativeProps(props);
    };

    for (var i = 0; i < numTouchKeys; i++) {
      var key = touchKeys[i];
      var val = touchVals[i];

      if (typeof val === 'function') {
        _this[key] = val.bind((0, _assertThisInitialized2.default)(_this));
      } else {
        _this[key] = val;
      }
    }

    _this.state = touchableGetInitialState();
    return _this;
  }

  return Shape;
}(_react.Component);

exports.default = Shape;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNoYXBlLnRzeCJdLCJuYW1lcyI6WyJ0b3VjaGFibGVHZXRJbml0aWFsU3RhdGUiLCJTdmdUb3VjaGFibGVNaXhpbiIsInRvdWNoS2V5cyIsIk9iamVjdCIsInRvdWNoVmFscyIsIm51bVRvdWNoS2V5cyIsIlNoYXBlIiwiQ29tcG9uZW50Iiwicm9vdCIsImkiLCJrZXkiLCJ2YWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQSxNQUFBLEdBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQTs7QUFDQSxJQUFBLGtCQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLDRCQUFBLENBQUE7O0FBSVFBLElBQUFBLHdCLEdBQTZCQyxrQkFBQUEsQ0FBQUEsT0FBQUEsQ0FBN0JELHdCQUFBQTtBQUNSLElBQU1FLFNBQVMsR0FBR0MsTUFBTSxDQUFOQSxJQUFBQSxDQUFZRixrQkFBQUEsQ0FBOUIsT0FBa0JFLENBQWxCO0FBQ0EsSUFBTUMsU0FBUyxHQUFHRixTQUFTLENBQVRBLEdBQUFBLENBQWMsVUFBQSxHQUFBLEVBQUc7QUFBQSxTQUFJRCxrQkFBQUEsQ0FBQUEsT0FBQUEsQ0FBSixHQUFJQSxDQUFKO0FBQW5DLENBQWtCQyxDQUFsQjtBQUNBLElBQU1HLFlBQVksR0FBR0gsU0FBUyxDQUE5QixNQUFBOztBQUVxQkksSUFBQUEsSzs7O0FBR25CLFdBQUEsS0FBQSxDQUFBLE1BQUEsRUFBQSxPQUFBLEVBQW1DO0FBQUEsUUFBQSxLQUFBOztBQUFBLEtBQUEsR0FBQSxnQkFBQSxDQUFBLE9BQUEsRUFBQSxJQUFBLEVBQUEsS0FBQTtBQUNqQyxJQUFBLEtBQUEsR0FBQSxDQUFBLEdBQUEsMkJBQUEsQ0FBQSxPQUFBLEVBQUEsSUFBQSxFQUFBLENBQUEsR0FBQSxnQkFBQSxDQUFBLE9BQUEsRUFBQSxLQUFBLEVBQUEsSUFBQSxDQUFBLElBQUEsRUFBQSxNQUFBLEVBQUEsT0FBQSxDQUFBLENBQUE7QUFEaUMsSUFBQSxLQUFBLENBRG5DRSxJQUNtQyxHQURrQixJQUNsQjs7QUFBQSxJQUFBLEtBQUEsQ0FBQSxTQUFBLEdBZXZCLFVBQUEsUUFBQSxFQUE0RDtBQUN0RSxNQUFBLEtBQUEsQ0FBQSxJQUFBLEdBQUEsUUFBQTtBQWhCaUMsS0FBQTs7QUFBQSxJQUFBLEtBQUEsQ0FBQSxjQUFBLEdBa0JsQixVQUFBLEtBQUEsRUFJWjtBQUNILE1BQUEsS0FBQSxDQUFBLElBQUEsSUFBYSxLQUFBLENBQUEsSUFBQSxDQUFBLGNBQUEsQ0FBYixLQUFhLENBQWI7QUF2QmlDLEtBQUE7O0FBRWpDLFNBQUssSUFBSUMsQ0FBQyxHQUFWLENBQUEsRUFBZ0JBLENBQUMsR0FBakIsWUFBQSxFQUFrQ0EsQ0FBbEMsRUFBQSxFQUF1QztBQUNyQyxVQUFNQyxHQUFHLEdBQUdSLFNBQVMsQ0FBckIsQ0FBcUIsQ0FBckI7QUFDQSxVQUFNUyxHQUFHLEdBQUdQLFNBQVMsQ0FBckIsQ0FBcUIsQ0FBckI7O0FBQ0EsVUFBSSxPQUFBLEdBQUEsS0FBSixVQUFBLEVBQStCO0FBQzdCLFFBQUEsS0FBQSxDQUFBLEdBQUEsQ0FBQSxHQUFZTyxHQUFHLENBQUhBLElBQUFBLENBQUFBLENBQUFBLEdBQUFBLHVCQUFBQSxDQUFBQSxPQUFBQSxFQUFaLEtBQVlBLENBQUFBLENBQVo7QUFERixPQUFBLE1BRU87QUFDTCxRQUFBLEtBQUEsQ0FBQSxHQUFBLENBQUEsR0FBQSxHQUFBO0FBRUg7QUFDRDs7QUFBQSxJQUFBLEtBQUEsQ0FBQSxLQUFBLEdBQWFYLHdCQUFiLEVBQUE7QUFYaUMsV0FBQSxLQUFBOzs7O0VBSENPLE1BQUFBLENBQUFBLFMsQ0FBakJEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFN2Z1RvdWNoYWJsZU1peGluIGZyb20gJy4uL2xpYi9TdmdUb3VjaGFibGVNaXhpbic7XG5pbXBvcnQgeyBOYXRpdmVNZXRob2RzTWl4aW5TdGF0aWMgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgVHJhbnNmb3JtUHJvcHMgfSBmcm9tICcuLi9saWIvZXh0cmFjdC90eXBlcyc7XG5cbmNvbnN0IHsgdG91Y2hhYmxlR2V0SW5pdGlhbFN0YXRlIH0gPSBTdmdUb3VjaGFibGVNaXhpbjtcbmNvbnN0IHRvdWNoS2V5cyA9IE9iamVjdC5rZXlzKFN2Z1RvdWNoYWJsZU1peGluKTtcbmNvbnN0IHRvdWNoVmFscyA9IHRvdWNoS2V5cy5tYXAoa2V5ID0+IFN2Z1RvdWNoYWJsZU1peGluW2tleV0pO1xuY29uc3QgbnVtVG91Y2hLZXlzID0gdG91Y2hLZXlzLmxlbmd0aDtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2hhcGU8UD4gZXh0ZW5kcyBDb21wb25lbnQ8UD4ge1xuICBbeDogc3RyaW5nXTogdW5rbm93bjtcbiAgcm9vdDogKFNoYXBlPFA+ICYgTmF0aXZlTWV0aG9kc01peGluU3RhdGljKSB8IG51bGwgPSBudWxsO1xuICBjb25zdHJ1Y3Rvcihwcm9wczogUCwgY29udGV4dDoge30pIHtcbiAgICBzdXBlcihwcm9wcywgY29udGV4dCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1Ub3VjaEtleXM7IGkrKykge1xuICAgICAgY29uc3Qga2V5ID0gdG91Y2hLZXlzW2ldO1xuICAgICAgY29uc3QgdmFsID0gdG91Y2hWYWxzW2ldO1xuICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhpc1trZXldID0gdmFsLmJpbmQodGhpcyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzW2tleV0gPSB2YWw7XG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMuc3RhdGUgPSB0b3VjaGFibGVHZXRJbml0aWFsU3RhdGUoKTtcbiAgfVxuICByZWZNZXRob2Q6IChcbiAgICBpbnN0YW5jZTogKFNoYXBlPFA+ICYgTmF0aXZlTWV0aG9kc01peGluU3RhdGljKSB8IG51bGwsXG4gICkgPT4gdm9pZCA9IChpbnN0YW5jZTogKFNoYXBlPFA+ICYgTmF0aXZlTWV0aG9kc01peGluU3RhdGljKSB8IG51bGwpID0+IHtcbiAgICB0aGlzLnJvb3QgPSBpbnN0YW5jZTtcbiAgfTtcbiAgc2V0TmF0aXZlUHJvcHMgPSAoXG4gICAgcHJvcHM6IE9iamVjdCAmIHtcbiAgICAgIG1hdHJpeD86IFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgICB9ICYgVHJhbnNmb3JtUHJvcHMsXG4gICkgPT4ge1xuICAgIHRoaXMucm9vdCAmJiB0aGlzLnJvb3Quc2V0TmF0aXZlUHJvcHMocHJvcHMpO1xuICB9O1xufVxuIl19