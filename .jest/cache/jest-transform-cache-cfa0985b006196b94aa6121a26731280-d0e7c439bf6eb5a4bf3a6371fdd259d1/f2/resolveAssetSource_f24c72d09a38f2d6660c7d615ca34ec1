20191880850ed6b2e6a36f3c3762f6d3













'use strict';






var _customSourceTransformer, _serverURL, _scriptURL;

var _sourceCodeScriptURL;
function getSourceCodeScriptURL() {
  if (_sourceCodeScriptURL) {
    return _sourceCodeScriptURL;
  }

  var sourceCode =
  global.nativeExtensions && global.nativeExtensions.SourceCode;
  if (!sourceCode) {
    var NativeModules = require('NativeModules');
    sourceCode = NativeModules && NativeModules.SourceCode;
  }
  _sourceCodeScriptURL = sourceCode.scriptURL;
  return _sourceCodeScriptURL;
}

function getDevServerURL() {
  if (_serverURL === undefined) {
    var sourceCodeScriptURL = getSourceCodeScriptURL();
    var match =
    sourceCodeScriptURL && sourceCodeScriptURL.match(/^https?:\/\/.*?\//);
    if (match) {

      _serverURL = match[0];
    } else {

      _serverURL = null;
    }
  }
  return _serverURL;
}

function _coerceLocalScriptURL(scriptURL) {
  if (scriptURL) {
    if (scriptURL.startsWith('assets://')) {

      return null;
    }
    scriptURL = scriptURL.substring(0, scriptURL.lastIndexOf('/') + 1);
    if (!scriptURL.includes('://')) {


      scriptURL = 'file://' + scriptURL;
    }
  }
  return scriptURL;
}

function getScriptURL() {
  if (_scriptURL === undefined) {
    _scriptURL = _coerceLocalScriptURL(getSourceCodeScriptURL());
  }
  return _scriptURL;
}

function setCustomSourceTransformer(
transformer)
{
  _customSourceTransformer = transformer;
}





function resolveAssetSource(source) {
  if (typeof source === 'object') {
    return source;
  }

  var asset = require('AssetRegistry').getAssetByID(source);
  if (!asset) {
    return null;
  }

  var resolver = new (require('AssetSourceResolver'))(
  getDevServerURL(),
  getScriptURL(),
  asset);

  if (_customSourceTransformer) {
    return _customSourceTransformer(resolver);
  }
  return resolver.defaultAsset();
}

module.exports = resolveAssetSource;
module.exports.pickScale = require('AssetSourceResolver').pickScale;
module.exports.setCustomSourceTransformer = setCustomSourceTransformer;