2d58c7345e950dab90dff1855e67e9ce
'use strict';

var invariant = require('invariant');

var merge = require('merge');

function deprecatedCreateStrictShapeTypeChecker(shapeTypes) {
  function checkType(isRequired, props, propName, componentName, location) {
    if (!props[propName]) {
      if (isRequired) {
        invariant(false, "Required object `" + propName + "` was not specified in " + ("`" + componentName + "`."));
      }

      return;
    }

    var propValue = props[propName];
    var propType = typeof propValue;
    var locationName = location || '(unknown)';

    if (propType !== 'object') {
      invariant(false, "Invalid " + locationName + " `" + propName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
    }

    var allKeys = merge(props[propName], shapeTypes);

    for (var _len = arguments.length, rest = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
      rest[_key - 5] = arguments[_key];
    }

    for (var _key2 in allKeys) {
      var checker = shapeTypes[_key2];

      if (!checker) {
        invariant(false, "Invalid props." + propName + " key `" + _key2 + "` supplied to `" + componentName + "`." + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
      }

      var error = checker.apply(void 0, [propValue, _key2, componentName, location].concat(rest));

      if (error) {
        invariant(false, error.message + '\nBad object: ' + JSON.stringify(props[propName], null, '  '));
      }
    }
  }

  function chainedCheckType(props, propName, componentName, location) {
    for (var _len2 = arguments.length, rest = new Array(_len2 > 4 ? _len2 - 4 : 0), _key3 = 4; _key3 < _len2; _key3++) {
      rest[_key3 - 4] = arguments[_key3];
    }

    return checkType.apply(void 0, [false, props, propName, componentName, location].concat(rest));
  }

  chainedCheckType.isRequired = checkType.bind(null, true);
  return chainedCheckType;
}

module.exports = deprecatedCreateStrictShapeTypeChecker;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlcHJlY2F0ZWRDcmVhdGVTdHJpY3RTaGFwZVR5cGVDaGVja2VyLmpzIl0sIm5hbWVzIjpbImludmFyaWFudCIsInJlcXVpcmUiLCJtZXJnZSIsImRlcHJlY2F0ZWRDcmVhdGVTdHJpY3RTaGFwZVR5cGVDaGVja2VyIiwic2hhcGVUeXBlcyIsImNoZWNrVHlwZSIsImlzUmVxdWlyZWQiLCJwcm9wcyIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsImxvY2F0aW9uIiwicHJvcFZhbHVlIiwicHJvcFR5cGUiLCJsb2NhdGlvbk5hbWUiLCJhbGxLZXlzIiwicmVzdCIsImtleSIsImNoZWNrZXIiLCJKU09OIiwic3RyaW5naWZ5IiwiT2JqZWN0Iiwia2V5cyIsImVycm9yIiwibWVzc2FnZSIsImNoYWluZWRDaGVja1R5cGUiLCJiaW5kIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBVUE7O0FBRUEsSUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxJQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUVBLFNBQVNFLHNDQUFULENBQWdEQyxVQUFoRCxFQUVtQztBQUNqQyxXQUFTQyxTQUFULENBQ0VDLFVBREYsRUFFRUMsS0FGRixFQUdFQyxRQUhGLEVBSUVDLGFBSkYsRUFLRUMsUUFMRixFQU9FO0FBQ0EsUUFBSSxDQUFDSCxLQUFLLENBQUNDLFFBQUQsQ0FBVixFQUFzQjtBQUNwQixVQUFJRixVQUFKLEVBQWdCO0FBQ2ROLFFBQUFBLFNBQVMsQ0FDUCxLQURPLEVBRVAsc0JBQXFCUSxRQUFyQixzQ0FDT0MsYUFEUCxRQUZPLENBQVQ7QUFLRDs7QUFDRDtBQUNEOztBQUNELFFBQU1FLFNBQVMsR0FBR0osS0FBSyxDQUFDQyxRQUFELENBQXZCO0FBQ0EsUUFBTUksUUFBUSxHQUFHLE9BQU9ELFNBQXhCO0FBQ0EsUUFBTUUsWUFBWSxHQUFHSCxRQUFRLElBQUksV0FBakM7O0FBQ0EsUUFBSUUsUUFBUSxLQUFLLFFBQWpCLEVBQTJCO0FBQ3pCWixNQUFBQSxTQUFTLENBQ1AsS0FETyxFQUVQLGFBQVdhLFlBQVgsVUFBNkJMLFFBQTdCLG1CQUFxREksUUFBckQsNkJBQ21CSCxhQURuQiwyQkFGTyxDQUFUO0FBS0Q7O0FBR0QsUUFBTUssT0FBTyxHQUFHWixLQUFLLENBQUNLLEtBQUssQ0FBQ0MsUUFBRCxDQUFOLEVBQWtCSixVQUFsQixDQUFyQjs7QUF2QkEsc0NBREdXLElBQ0g7QUFER0EsTUFBQUEsSUFDSDtBQUFBOztBQXdCQSxTQUFLLElBQU1DLEtBQVgsSUFBa0JGLE9BQWxCLEVBQTJCO0FBQ3pCLFVBQU1HLE9BQU8sR0FBR2IsVUFBVSxDQUFDWSxLQUFELENBQTFCOztBQUNBLFVBQUksQ0FBQ0MsT0FBTCxFQUFjO0FBQ1pqQixRQUFBQSxTQUFTLENBQ1AsS0FETyxFQUVQLG1CQUFpQlEsUUFBakIsY0FBbUNRLEtBQW5DLHVCQUEwRFAsYUFBMUQsVUFDRSxnQkFERixHQUVFUyxJQUFJLENBQUNDLFNBQUwsQ0FBZVosS0FBSyxDQUFDQyxRQUFELENBQXBCLEVBQWdDLElBQWhDLEVBQXNDLElBQXRDLENBRkYsR0FHRSxnQkFIRixHQUlFVSxJQUFJLENBQUNDLFNBQUwsQ0FBZUMsTUFBTSxDQUFDQyxJQUFQLENBQVlqQixVQUFaLENBQWYsRUFBd0MsSUFBeEMsRUFBOEMsSUFBOUMsQ0FOSyxDQUFUO0FBUUQ7O0FBQ0QsVUFBTWtCLEtBQUssR0FBR0wsT0FBTyxNQUFQLFVBQVFOLFNBQVIsRUFBbUJLLEtBQW5CLEVBQXdCUCxhQUF4QixFQUF1Q0MsUUFBdkMsU0FBb0RLLElBQXBELEVBQWQ7O0FBQ0EsVUFBSU8sS0FBSixFQUFXO0FBQ1R0QixRQUFBQSxTQUFTLENBQ1AsS0FETyxFQUVQc0IsS0FBSyxDQUFDQyxPQUFOLEdBQ0UsZ0JBREYsR0FFRUwsSUFBSSxDQUFDQyxTQUFMLENBQWVaLEtBQUssQ0FBQ0MsUUFBRCxDQUFwQixFQUFnQyxJQUFoQyxFQUFzQyxJQUF0QyxDQUpLLENBQVQ7QUFNRDtBQUNGO0FBQ0Y7O0FBQ0QsV0FBU2dCLGdCQUFULENBQ0VqQixLQURGLEVBRUVDLFFBRkYsRUFHRUMsYUFIRixFQUlFQyxRQUpGLEVBTVU7QUFBQSx1Q0FETEssSUFDSztBQURMQSxNQUFBQSxJQUNLO0FBQUE7O0FBQ1IsV0FBT1YsU0FBUyxNQUFULFVBQVUsS0FBVixFQUFpQkUsS0FBakIsRUFBd0JDLFFBQXhCLEVBQWtDQyxhQUFsQyxFQUFpREMsUUFBakQsU0FBOERLLElBQTlELEVBQVA7QUFDRDs7QUFDRFMsRUFBQUEsZ0JBQWdCLENBQUNsQixVQUFqQixHQUE4QkQsU0FBUyxDQUFDb0IsSUFBVixDQUFlLElBQWYsRUFBcUIsSUFBckIsQ0FBOUI7QUFDQSxTQUFPRCxnQkFBUDtBQUNEOztBQUVERSxNQUFNLENBQUNDLE9BQVAsR0FBaUJ4QixzQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIEBmbG93XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBpbnZhcmlhbnQgPSByZXF1aXJlKCdpbnZhcmlhbnQnKTtcbmNvbnN0IG1lcmdlID0gcmVxdWlyZSgnbWVyZ2UnKTtcblxuZnVuY3Rpb24gZGVwcmVjYXRlZENyZWF0ZVN0cmljdFNoYXBlVHlwZUNoZWNrZXIoc2hhcGVUeXBlczoge1xuICBba2V5OiBzdHJpbmddOiBSZWFjdFByb3BzQ2hlY2tUeXBlLFxufSk6IFJlYWN0UHJvcHNDaGFpbmFibGVUeXBlQ2hlY2tlciB7XG4gIGZ1bmN0aW9uIGNoZWNrVHlwZShcbiAgICBpc1JlcXVpcmVkLFxuICAgIHByb3BzLFxuICAgIHByb3BOYW1lLFxuICAgIGNvbXBvbmVudE5hbWUsXG4gICAgbG9jYXRpb24/LFxuICAgIC4uLnJlc3RcbiAgKSB7XG4gICAgaWYgKCFwcm9wc1twcm9wTmFtZV0pIHtcbiAgICAgIGlmIChpc1JlcXVpcmVkKSB7XG4gICAgICAgIGludmFyaWFudChcbiAgICAgICAgICBmYWxzZSxcbiAgICAgICAgICBgUmVxdWlyZWQgb2JqZWN0IFxcYCR7cHJvcE5hbWV9XFxgIHdhcyBub3Qgc3BlY2lmaWVkIGluIGAgK1xuICAgICAgICAgICAgYFxcYCR7Y29tcG9uZW50TmFtZX1cXGAuYCxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgIGNvbnN0IHByb3BUeXBlID0gdHlwZW9mIHByb3BWYWx1ZTtcbiAgICBjb25zdCBsb2NhdGlvbk5hbWUgPSBsb2NhdGlvbiB8fCAnKHVua25vd24pJztcbiAgICBpZiAocHJvcFR5cGUgIT09ICdvYmplY3QnKSB7XG4gICAgICBpbnZhcmlhbnQoXG4gICAgICAgIGZhbHNlLFxuICAgICAgICBgSW52YWxpZCAke2xvY2F0aW9uTmFtZX0gXFxgJHtwcm9wTmFtZX1cXGAgb2YgdHlwZSBcXGAke3Byb3BUeXBlfVxcYCBgICtcbiAgICAgICAgICBgc3VwcGxpZWQgdG8gXFxgJHtjb21wb25lbnROYW1lfVxcYCwgZXhwZWN0ZWQgXFxgb2JqZWN0XFxgLmAsXG4gICAgICApO1xuICAgIH1cbiAgICAvLyBXZSBuZWVkIHRvIGNoZWNrIGFsbCBrZXlzIGluIGNhc2Ugc29tZSBhcmUgcmVxdWlyZWQgYnV0IG1pc3NpbmcgZnJvbVxuICAgIC8vIHByb3BzLlxuICAgIGNvbnN0IGFsbEtleXMgPSBtZXJnZShwcm9wc1twcm9wTmFtZV0sIHNoYXBlVHlwZXMpO1xuICAgIGZvciAoY29uc3Qga2V5IGluIGFsbEtleXMpIHtcbiAgICAgIGNvbnN0IGNoZWNrZXIgPSBzaGFwZVR5cGVzW2tleV07XG4gICAgICBpZiAoIWNoZWNrZXIpIHtcbiAgICAgICAgaW52YXJpYW50KFxuICAgICAgICAgIGZhbHNlLFxuICAgICAgICAgIGBJbnZhbGlkIHByb3BzLiR7cHJvcE5hbWV9IGtleSBcXGAke2tleX1cXGAgc3VwcGxpZWQgdG8gXFxgJHtjb21wb25lbnROYW1lfVxcYC5gICtcbiAgICAgICAgICAgICdcXG5CYWQgb2JqZWN0OiAnICtcbiAgICAgICAgICAgIEpTT04uc3RyaW5naWZ5KHByb3BzW3Byb3BOYW1lXSwgbnVsbCwgJyAgJykgK1xuICAgICAgICAgICAgJ1xcblZhbGlkIGtleXM6ICcgK1xuICAgICAgICAgICAgSlNPTi5zdHJpbmdpZnkoT2JqZWN0LmtleXMoc2hhcGVUeXBlcyksIG51bGwsICcgICcpLFxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgY29uc3QgZXJyb3IgPSBjaGVja2VyKHByb3BWYWx1ZSwga2V5LCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgLi4ucmVzdCk7XG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgaW52YXJpYW50KFxuICAgICAgICAgIGZhbHNlLFxuICAgICAgICAgIGVycm9yLm1lc3NhZ2UgK1xuICAgICAgICAgICAgJ1xcbkJhZCBvYmplY3Q6ICcgK1xuICAgICAgICAgICAgSlNPTi5zdHJpbmdpZnkocHJvcHNbcHJvcE5hbWVdLCBudWxsLCAnICAnKSxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gY2hhaW5lZENoZWNrVHlwZShcbiAgICBwcm9wczoge1trZXk6IHN0cmluZ106IGFueX0sXG4gICAgcHJvcE5hbWU6IHN0cmluZyxcbiAgICBjb21wb25lbnROYW1lOiBzdHJpbmcsXG4gICAgbG9jYXRpb24/OiBzdHJpbmcsXG4gICAgLi4ucmVzdFxuICApOiA/RXJyb3Ige1xuICAgIHJldHVybiBjaGVja1R5cGUoZmFsc2UsIHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIC4uLnJlc3QpO1xuICB9XG4gIGNoYWluZWRDaGVja1R5cGUuaXNSZXF1aXJlZCA9IGNoZWNrVHlwZS5iaW5kKG51bGwsIHRydWUpO1xuICByZXR1cm4gY2hhaW5lZENoZWNrVHlwZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkZXByZWNhdGVkQ3JlYXRlU3RyaWN0U2hhcGVUeXBlQ2hlY2tlcjtcbiJdfQ==