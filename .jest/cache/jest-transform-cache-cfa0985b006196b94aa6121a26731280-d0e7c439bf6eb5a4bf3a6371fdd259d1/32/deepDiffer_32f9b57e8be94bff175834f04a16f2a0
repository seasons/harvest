eef2d761f37c0b0fc3df615aaf013c2a










'use strict';




var deepDiffer = function deepDiffer(
one,
two)

{var maxDepth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;
  if (maxDepth === 0) {
    return true;
  }
  if (one === two) {

    return false;
  }
  if (typeof one === 'function' && typeof two === 'function') {

    return false;
  }
  if (typeof one !== 'object' || one === null) {

    return one !== two;
  }
  if (typeof two !== 'object' || two === null) {


    return true;
  }
  if (one.constructor !== two.constructor) {
    return true;
  }
  if (Array.isArray(one)) {

    var len = one.length;
    if (two.length !== len) {
      return true;
    }
    for (var ii = 0; ii < len; ii++) {
      if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {
        return true;
      }
    }
  } else {
    for (var key in one) {
      if (deepDiffer(one[key], two[key], maxDepth - 1)) {
        return true;
      }
    }
    for (var twoKey in two) {


      if (one[twoKey] === undefined && two[twoKey] !== undefined) {
        return true;
      }
    }
  }
  return false;
};

module.exports = deepDiffer;