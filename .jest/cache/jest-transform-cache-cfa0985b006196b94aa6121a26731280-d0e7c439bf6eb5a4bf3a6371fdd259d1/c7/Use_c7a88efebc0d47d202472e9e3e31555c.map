{"version":3,"sources":["Use.tsx"],"names":["Use","Shape","displayName","defaultProps","x","y","width","height","props","children","xlinkHref","href","matched","idPattern","match","console","RNSVGUse"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,aAAA,GAAA,uBAAA,CAAA,OAAA,+BAAA,CAAA;;AAEA,IAAA,KAAA,GAAA,OAAA,eAAA;;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,WAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEqBA;;AAAAA,IAAAA,G;;;;;;;;;;6BAiBV;AAAA,UACCQ,KADD,GAAA,KAAA,KAAA;AAAA,UAGLC,QAHK,GAUHD,KAVG,CAAA,QAAA;AAAA,UAILJ,CAJK,GAUHI,KAVG,CAAA,CAAA;AAAA,UAKLH,CALK,GAUHG,KAVG,CAAA,CAAA;AAAA,UAMLF,KANK,GAUHE,KAVG,CAAA,KAAA;AAAA,UAOLD,MAPK,GAUHC,KAVG,CAAA,MAAA;AAAA,UAQLE,SARK,GAUHF,KAVG,CAAA,SAAA;AAAA,UAAA,WAAA,GAUHA,KAVG,CAAA,IAAA;AAAA,UASLG,IATK,GAAA,WAAA,KAAA,KAAA,CAAA,GAAA,SAAA,GAAA,WAAA;AAYP,UAAMC,OAAO,GAAGD,IAAI,IAAIA,IAAI,CAAJA,KAAAA,CAAWE,KAAAA,CAAnC,SAAwBF,CAAxB;AACA,UAAMG,KAAK,GAAGF,OAAO,IAAIA,OAAO,CAAhC,CAAgC,CAAhC;;AAEA,UAAI,CAAJ,KAAA,EAAY;AACVG,QAAAA,OAAO,CAAPA,IAAAA,CACE,kFAAA,IAAA,GADFA,GAAAA;AAOF;;AAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,QAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AACE,QAAA,GAAG,EAAE,KADP;AAAA,OAAA,EAEM,CAAA,GAAA,aAAA,CAAA,OAAA,EAAA,aAAA,CAAA,EAAA,EAAkB,CAAA,GAAA,aAAA,CAAA,cAAA,EAAlB,KAAkB,CAAlB,EAAA;AAAyCX,QAAAA,CAAC,EAA1C,IAAA;AAAkDC,QAAAA,CAAC,EAAnD;AAAA,OAAA,CAAA,EAFN,IAEM,CAFN,EAAA;AAGE,QAAA,IAAI,EAHN,KAAA;AAIE,QAAA,CAAC,EAJH,CAAA;AAKE,QAAA,CAAC,EALH,CAAA;AAME,QAAA,KAAK,EANP,KAAA;AAOE,QAAA,MAAM,EAPR,MAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,CAAA,EADF,QACE,CADF;;;;EAxC6BJ,OAAAA,CAAAA,O,CAAZD;;;AAAAA,G,CAQZE,WARYF,GAQE,KARFA;AAAAA,G,CAUZG,YAVYH,GAUG;AACpBI,EAAAA,CAAC,EADmB,CAAA;AAEpBC,EAAAA,CAAC,EAFmB,CAAA;AAGpBC,EAAAA,KAAK,EAHe,CAAA;AAIpBC,EAAAA,MAAM,EAJc;AAAA,CAVHP;AAwDd,IAAMgB,QAAQ,GAAG,CAAA,GAAA,YAAA,CAAA,sBAAA,EAAjB,UAAiB,CAAjB","sourcesContent":["import React from 'react';\nimport { requireNativeComponent } from 'react-native';\nimport extractProps, { propsAndStyles } from '../lib/extract/extractProps';\nimport { NumberProp } from '../lib/extract/types';\nimport { idPattern } from '../lib/util';\nimport Shape from './Shape';\n\nexport default class Use extends Shape<{\n  x?: NumberProp;\n  y?: NumberProp;\n  width?: NumberProp;\n  height?: NumberProp;\n  xlinkHref?: string;\n  href?: string;\n}> {\n  static displayName = 'Use';\n\n  static defaultProps = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  };\n\n  render() {\n    const { props } = this;\n    const {\n      children,\n      x,\n      y,\n      width,\n      height,\n      xlinkHref,\n      href = xlinkHref,\n    } = props;\n\n    const matched = href && href.match(idPattern);\n    const match = matched && matched[1];\n\n    if (!match) {\n      console.warn(\n        'Invalid `href` prop for `Use` element, expected a href like \"#id\", but got: \"' +\n          href +\n          '\"',\n      );\n    }\n\n    return (\n      <RNSVGUse\n        ref={this.refMethod}\n        {...extractProps({ ...propsAndStyles(props), x: null, y: null }, this)}\n        href={match}\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n      >\n        {children}\n      </RNSVGUse>\n    );\n  }\n}\n\nexport const RNSVGUse = requireNativeComponent('RNSVGUse');\n"]}