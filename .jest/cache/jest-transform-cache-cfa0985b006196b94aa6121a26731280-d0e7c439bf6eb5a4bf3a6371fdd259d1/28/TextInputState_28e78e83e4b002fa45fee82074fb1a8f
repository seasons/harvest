aca5e33d1849ef7fc662cd24f637f47c















'use strict';




var currentlyFocusedID = null;
var inputs = new Set();





function currentlyFocusedField() {
  return currentlyFocusedID;
}






function focusTextInput(textFieldID) {
  if (currentlyFocusedID !== textFieldID && textFieldID !== null) {
    currentlyFocusedID = textFieldID;
    if (require('Platform').OS === 'ios') {
      require('UIManager').focus(textFieldID);
    } else if (require('Platform').OS === 'android') {
      require('UIManager').dispatchViewManagerCommand(
      textFieldID,
      require('UIManager').getViewManagerConfig('AndroidTextInput').Commands.
      focusTextInput,
      null);

    }
  }
}






function blurTextInput(textFieldID) {
  if (currentlyFocusedID === textFieldID && textFieldID !== null) {
    currentlyFocusedID = null;
    if (require('Platform').OS === 'ios') {
      require('UIManager').blur(textFieldID);
    } else if (require('Platform').OS === 'android') {
      require('UIManager').dispatchViewManagerCommand(
      textFieldID,
      require('UIManager').getViewManagerConfig('AndroidTextInput').Commands.
      blurTextInput,
      null);

    }
  }
}

function registerInput(textFieldID) {
  inputs.add(textFieldID);
}

function unregisterInput(textFieldID) {
  inputs.delete(textFieldID);
}

function isTextInput(textFieldID) {
  return inputs.has(textFieldID);
}

module.exports = {
  currentlyFocusedField: currentlyFocusedField,
  focusTextInput: focusTextInput,
  blurTextInput: blurTextInput,
  registerInput: registerInput,
  unregisterInput: unregisterInput,
  isTextInput: isTextInput };