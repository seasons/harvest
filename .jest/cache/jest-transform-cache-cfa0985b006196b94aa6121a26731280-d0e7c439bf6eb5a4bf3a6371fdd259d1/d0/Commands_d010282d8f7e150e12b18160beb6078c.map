{"version":3,"sources":["Commands.js"],"names":["Object","defineProperty","exports","value","_","require","Commands","nativeCommandsSender","layoutTreeParser","layoutTreeCrawler","commandsObserver","uniqueIdProvider","optionsProcessor","simpleApi","input","cloneDeep","root","parse","modals","map","modal","overlays","overlay","commandId","generate","notify","layout","crawl","forEach","modalLayout","overlayLayout","result","setRoot","options","processOptions","setDefaultOptions","componentId","mergeOptions","layoutCloned","layoutNode","showModal","dismissModal","dismissAllModals","push","pop","popTo","popToRoot","children","setStackRoot","showOverlay","dismissOverlay","getLaunchArgs"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nclass Commands {\n    constructor(nativeCommandsSender, layoutTreeParser, layoutTreeCrawler, commandsObserver, uniqueIdProvider, optionsProcessor) {\n        this.nativeCommandsSender = nativeCommandsSender;\n        this.layoutTreeParser = layoutTreeParser;\n        this.layoutTreeCrawler = layoutTreeCrawler;\n        this.commandsObserver = commandsObserver;\n        this.uniqueIdProvider = uniqueIdProvider;\n        this.optionsProcessor = optionsProcessor;\n    }\n    setRoot(simpleApi) {\n        const input = _.cloneDeep(simpleApi);\n        const root = this.layoutTreeParser.parse(input.root);\n        const modals = _.map(input.modals, (modal) => {\n            return this.layoutTreeParser.parse(modal);\n        });\n        const overlays = _.map(input.overlays, (overlay) => {\n            return this.layoutTreeParser.parse(overlay);\n        });\n        const commandId = this.uniqueIdProvider.generate('setRoot');\n        this.commandsObserver.notify('setRoot', { commandId, layout: { root, modals, overlays } });\n        this.layoutTreeCrawler.crawl(root);\n        modals.forEach(modalLayout => {\n            this.layoutTreeCrawler.crawl(modalLayout);\n        });\n        overlays.forEach(overlayLayout => {\n            this.layoutTreeCrawler.crawl(overlayLayout);\n        });\n        const result = this.nativeCommandsSender.setRoot(commandId, { root, modals, overlays });\n        return result;\n    }\n    setDefaultOptions(options) {\n        const input = _.cloneDeep(options);\n        this.optionsProcessor.processOptions(input);\n        this.nativeCommandsSender.setDefaultOptions(input);\n        this.commandsObserver.notify('setDefaultOptions', { options });\n    }\n    mergeOptions(componentId, options) {\n        const input = _.cloneDeep(options);\n        this.optionsProcessor.processOptions(input);\n        this.nativeCommandsSender.mergeOptions(componentId, input);\n        this.commandsObserver.notify('mergeOptions', { componentId, options });\n    }\n    showModal(layout) {\n        const layoutCloned = _.cloneDeep(layout);\n        const layoutNode = this.layoutTreeParser.parse(layoutCloned);\n        const commandId = this.uniqueIdProvider.generate('showModal');\n        this.commandsObserver.notify('showModal', { commandId, layout: layoutNode });\n        this.layoutTreeCrawler.crawl(layoutNode);\n        const result = this.nativeCommandsSender.showModal(commandId, layoutNode);\n        return result;\n    }\n    dismissModal(componentId, mergeOptions) {\n        const commandId = this.uniqueIdProvider.generate('dismissModal');\n        const result = this.nativeCommandsSender.dismissModal(commandId, componentId, mergeOptions);\n        this.commandsObserver.notify('dismissModal', { commandId, componentId, mergeOptions });\n        return result;\n    }\n    dismissAllModals(mergeOptions) {\n        const commandId = this.uniqueIdProvider.generate('dismissAllModals');\n        const result = this.nativeCommandsSender.dismissAllModals(commandId, mergeOptions);\n        this.commandsObserver.notify('dismissAllModals', { commandId, mergeOptions });\n        return result;\n    }\n    push(componentId, simpleApi) {\n        const input = _.cloneDeep(simpleApi);\n        const layout = this.layoutTreeParser.parse(input);\n        const commandId = this.uniqueIdProvider.generate('push');\n        this.commandsObserver.notify('push', { commandId, componentId, layout });\n        this.layoutTreeCrawler.crawl(layout);\n        const result = this.nativeCommandsSender.push(commandId, componentId, layout);\n        return result;\n    }\n    pop(componentId, mergeOptions) {\n        const commandId = this.uniqueIdProvider.generate('pop');\n        const result = this.nativeCommandsSender.pop(commandId, componentId, mergeOptions);\n        this.commandsObserver.notify('pop', { commandId, componentId, mergeOptions });\n        return result;\n    }\n    popTo(componentId, mergeOptions) {\n        const commandId = this.uniqueIdProvider.generate('popTo');\n        const result = this.nativeCommandsSender.popTo(commandId, componentId, mergeOptions);\n        this.commandsObserver.notify('popTo', { commandId, componentId, mergeOptions });\n        return result;\n    }\n    popToRoot(componentId, mergeOptions) {\n        const commandId = this.uniqueIdProvider.generate('popToRoot');\n        const result = this.nativeCommandsSender.popToRoot(commandId, componentId, mergeOptions);\n        this.commandsObserver.notify('popToRoot', { commandId, componentId, mergeOptions });\n        return result;\n    }\n    setStackRoot(componentId, children) {\n        const input = _.map(_.cloneDeep(children), (simpleApi) => {\n            const layout = this.layoutTreeParser.parse(simpleApi);\n            return layout;\n        });\n        const commandId = this.uniqueIdProvider.generate('setStackRoot');\n        this.commandsObserver.notify('setStackRoot', { commandId, componentId, layout: input });\n        input.forEach(layoutNode => {\n            this.layoutTreeCrawler.crawl(layoutNode);\n        });\n        const result = this.nativeCommandsSender.setStackRoot(commandId, componentId, input);\n        return result;\n    }\n    showOverlay(simpleApi) {\n        const input = _.cloneDeep(simpleApi);\n        const layout = this.layoutTreeParser.parse(input);\n        const commandId = this.uniqueIdProvider.generate('showOverlay');\n        this.commandsObserver.notify('showOverlay', { commandId, layout });\n        this.layoutTreeCrawler.crawl(layout);\n        const result = this.nativeCommandsSender.showOverlay(commandId, layout);\n        return result;\n    }\n    dismissOverlay(componentId) {\n        const commandId = this.uniqueIdProvider.generate('dismissOverlay');\n        const result = this.nativeCommandsSender.dismissOverlay(commandId, componentId);\n        this.commandsObserver.notify('dismissOverlay', { commandId, componentId });\n        return result;\n    }\n    getLaunchArgs() {\n        const commandId = this.uniqueIdProvider.generate('getLaunchArgs');\n        const result = this.nativeCommandsSender.getLaunchArgs(commandId);\n        this.commandsObserver.notify('getLaunchArgs', { commandId });\n        return result;\n    }\n}\nexports.Commands = Commands;\n"]}