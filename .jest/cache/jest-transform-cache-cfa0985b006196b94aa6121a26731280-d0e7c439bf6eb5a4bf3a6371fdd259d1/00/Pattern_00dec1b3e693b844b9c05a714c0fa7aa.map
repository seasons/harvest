{"version":3,"sources":["Pattern.tsx"],"names":["Pattern","Shape","displayName","defaultProps","x","y","width","height","props","patternTransform","transform","id","patternUnits","patternContentUnits","children","viewBox","preserveAspectRatio","matrix","units","RNSVGPattern"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,mCAAA,CAAA;;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,iCAAA,CAAA;;AAEA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,gBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,WAAA,CAAA;;;;AAEqBA,IAAAA,O;;;;;;;;;;6BAsBV;AAAA,UACCQ,KADD,GAAA,KAAA,KAAA;AAAA,UAGLC,gBAHK,GAeHD,KAfG,CAAA,gBAAA;AAAA,UAILE,SAJK,GAeHF,KAfG,CAAA,SAAA;AAAA,UAKLG,EALK,GAeHH,KAfG,CAAA,EAAA;AAAA,UAMLJ,CANK,GAeHI,KAfG,CAAA,CAAA;AAAA,UAOLH,CAPK,GAeHG,KAfG,CAAA,CAAA;AAAA,UAQLF,KARK,GAeHE,KAfG,CAAA,KAAA;AAAA,UASLD,MATK,GAeHC,KAfG,CAAA,MAAA;AAAA,UAULI,YAVK,GAeHJ,KAfG,CAAA,YAAA;AAAA,UAWLK,mBAXK,GAeHL,KAfG,CAAA,mBAAA;AAAA,UAYLM,QAZK,GAeHN,KAfG,CAAA,QAAA;AAAA,UAaLO,OAbK,GAeHP,KAfG,CAAA,OAAA;AAAA,UAcLQ,mBAdK,GAeHR,KAfG,CAAA,mBAAA;AAgBP,UAAMS,MAAM,GAAG,CAAA,GAAA,iBAAA,CAAA,OAAA,EAAiBR,gBAAgB,IAAhBA,SAAAA,IAAhC,KAAe,CAAf;AACA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,YAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AACE,QAAA,GAAG,EAAE,KADP,SAAA;AAEE,QAAA,IAAI,EAFN,EAAA;AAGE,QAAA,CAAC,EAHH,CAAA;AAIE,QAAA,CAAC,EAJH,CAAA;AAKE,QAAA,KAAK,EALP,KAAA;AAME,QAAA,MAAM,EANR,MAAA;AAOE,QAAA,MAAM,EAPR,MAAA;AAQE,QAAA,gBAAgB,EARlB,MAAA;AASE,QAAA,YAAY,EAAGG,YAAY,IAAIM,MAAAA,CAAAA,OAAAA,CAAjB,YAAiBA,CAAhBN,IATjB,CAAA;AAUE,QAAA,mBAAmB,EACjBC,mBAAmB,GAAGK,MAAAA,CAAAA,OAAAA,CAAH,mBAAGA,CAAH,GAXvB;AAAA,OAAA,EAaM,CAAA,GAAA,eAAA,CAAA,OAAA,EAAe;AAAEH,QAAAA,OAAO,EAAT,OAAA;AAAWC,QAAAA,mBAAmB,EAbnD;AAaqB,OAAf,CAbN,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,CAAA,EADF,QACE,CADF;;;;EAvCiCf,OAAAA,CAAAA,O,CAAhBD;;;AAAAA,O,CAaZE,WAbYF,GAaE,SAbFA;AAAAA,O,CAeZG,YAfYH,GAeG;AACpBI,EAAAA,CAAC,EADmB,IAAA;AAEpBC,EAAAA,CAAC,EAFmB,IAAA;AAGpBC,EAAAA,KAAK,EAHe,MAAA;AAIpBC,EAAAA,MAAM,EAJc;AAAA,CAfHP;AA6Dd,IAAMmB,YAAY,GAAG,CAAA,GAAA,YAAA,CAAA,sBAAA,EAArB,cAAqB,CAArB","sourcesContent":["import React from 'react';\nimport { requireNativeComponent } from 'react-native';\nimport extractTransform from '../lib/extract/extractTransform';\nimport extractViewBox from '../lib/extract/extractViewBox';\nimport { NumberProp, TransformProps } from '../lib/extract/types';\nimport units from '../lib/units';\nimport Shape from './Shape';\n\nexport default class Pattern extends Shape<{\n  id?: string;\n  x?: NumberProp;\n  y?: NumberProp;\n  width?: NumberProp;\n  height?: NumberProp;\n  viewBox?: string;\n  preserveAspectRatio?: string;\n  transform?: number[] | string | TransformProps;\n  patternTransform?: number[] | string | TransformProps;\n  patternUnits?: 'objectBoundingBox' | 'userSpaceOnUse';\n  patternContentUnits?: 'objectBoundingBox' | 'userSpaceOnUse';\n}> {\n  static displayName = 'Pattern';\n\n  static defaultProps = {\n    x: '0%',\n    y: '0%',\n    width: '100%',\n    height: '100%',\n  };\n\n  render() {\n    const { props } = this;\n    const {\n      patternTransform,\n      transform,\n      id,\n      x,\n      y,\n      width,\n      height,\n      patternUnits,\n      patternContentUnits,\n      children,\n      viewBox,\n      preserveAspectRatio,\n    } = props;\n    const matrix = extractTransform(patternTransform || transform || props);\n    return (\n      <RNSVGPattern\n        ref={this.refMethod}\n        name={id}\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        matrix={matrix}\n        patternTransform={matrix}\n        patternUnits={(patternUnits && units[patternUnits]) || 0}\n        patternContentUnits={\n          patternContentUnits ? units[patternContentUnits] : 1\n        }\n        {...extractViewBox({ viewBox, preserveAspectRatio })}\n      >\n        {children}\n      </RNSVGPattern>\n    );\n  }\n}\n\nexport const RNSVGPattern = requireNativeComponent('RNSVGPattern');\n"]}