{"version":3,"sources":["Product.tsx"],"names":["GET_PRODUCT","gql","screenHeight","Math","round","Dimensions","get","height","Product","props","size","abbreviated","id","sizeSelection","setSizeSelection","showSizeSelection","toggleShowSizeSelection","variables","productId","loading","error","data","sizes","stock","firstInStock","find","handleSaveButton","console","product","renderItem","section","item","images","renderSizes","map","sections","flex","width","Navigation","pop","componentId","toUpperCase","StyledDownChevronIcon","DownChevronIcon","StyledSans","Sans","Outer","styled","View","Selection","Overlay","FooterNav","SizeSelectionButton","Content","AnimatedContent","AnimatedOverlay"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,WAAW,OAAGC,mBAAH,oBAAjB;AAiBA,IAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,wBAAWC,GAAX,CAAe,QAAf,EAAyBC,MAApC,CAArB;;AAEO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AAAA,kBACY,qBAAS;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,WAAW,EAAE,GAAzB;AAA8BC,IAAAA,EAAE,EAAE;AAAlC,GAAT,CADZ;AAAA;AAAA,MACvBC,aADuB;AAAA,MACRC,gBADQ;;AAAA,mBAEuB,qBAAS,KAAT,CAFvB;AAAA;AAAA,MAEvBC,iBAFuB;AAAA,MAEJC,uBAFI;;AAAA,kBAGG,0BAAShB,WAAT,EAAsB;AACrDiB,IAAAA,SAAS,EAAE;AACTC,MAAAA,SAAS,EAAET,KAAK,CAACG;AADR;AAD0C,GAAtB,CAHH;AAAA,MAGtBO,OAHsB,aAGtBA,OAHsB;AAAA,MAGbC,KAHa,aAGbA,KAHa;AAAA,MAGNC,IAHM,aAGNA,IAHM;;AAS9B,MAAMC,KAAK,GAAG,CACZ;AAAEZ,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,WAAW,EAAE,GAA9B;AAAmCC,IAAAA,EAAE,EAAE,CAAvC;AAA0CW,IAAAA,KAAK,EAAE;AAAjD,GADY,EAEZ;AAAEb,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,WAAW,EAAE,GAA/B;AAAoCC,IAAAA,EAAE,EAAE,CAAxC;AAA2CW,IAAAA,KAAK,EAAE;AAAlD,GAFY,EAGZ;AAAEb,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,WAAW,EAAE,GAA9B;AAAmCC,IAAAA,EAAE,EAAE,CAAvC;AAA0CW,IAAAA,KAAK,EAAE;AAAjD,GAHY,EAIZ;AAAEb,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,WAAW,EAAE,IAAhC;AAAsCC,IAAAA,EAAE,EAAE,CAA1C;AAA6CW,IAAAA,KAAK,EAAE;AAApD,GAJY,EAKZ;AAAEb,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,WAAW,EAAE,KAAjC;AAAwCC,IAAAA,EAAE,EAAE,CAA5C;AAA+CW,IAAAA,KAAK,EAAE;AAAtD,GALY,CAAd;AAQA,wBAAU,YAAM;AAEd,QAAMC,YAAY,GAAGF,KAAK,CAACG,IAAN,CAAW,UAAAf,IAAI,EAAI;AACtC,aAAOA,IAAI,CAACa,KAAL,GAAa,CAApB;AACD,KAFoB,CAArB;AAGAT,IAAAA,gBAAgB,CAACU,YAAD,CAAhB;AACD,GAND,EAMG,EANH;;AAQA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM,CAE9B,CAFD;;AAIA,MAAIP,OAAO,IAAI,CAACE,IAAhB,EAAsB;AACpB,WAAO,IAAP;AACD;;AACD,MAAID,KAAJ,EAAW;AACTO,IAAAA,OAAO,CAACP,KAAR,CAAc,SAAd,EAAyBA,KAAzB;AACD;;AAED,MAAMQ,OAAO,GAAGP,IAAI,IAAIA,IAAI,CAACO,OAA7B;;AAEA,MAAMC,WAAU,GAAG,SAAbA,UAAa,OAAuB;AAAA,QAAdC,OAAc,QAApBC,IAAoB;AACxC,QAAMC,MAAM,GAAGJ,OAAO,IAAIA,OAAO,CAACI,MAAlC;;AACA,YAAQF,OAAR;AACE,WAAK,WAAL;AACE,eAAO,6BAAC,sBAAD;AAAW,UAAA,MAAM,EAAEE;AAAnB,UAAP;;AACF,WAAK,gBAAL;AACE,eAAO,6BAAC,2BAAD;AAAgB,UAAA,OAAO,EAAEJ;AAAzB,UAAP;;AACF,WAAK,cAAL;AACE,eAAO,6BAAC,yBAAD;AAAc,UAAA,QAAQ,EAAEI;AAAxB,UAAP;;AACF,WAAK,eAAL;AACE,eAAO,6BAAC,0BAAD;AAAe,UAAA,OAAO,EAAEJ;AAAxB,UAAP;;AACF;AACE,eAAO,IAAP;AAVJ;AAYD,GAdD;;AAgBA,MAAMK,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,WAAOX,KAAK,CAACY,GAAN,CAAU,UAAAxB,IAAI,EAAI;AACvB,aACE,6BAAC,eAAD;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACE;AAAf,SACE,6BAAC,kBAAD;AAAQ,QAAA,EAAE,EAAE;AAAZ,QADF,EAEE,6BAAC,gBAAD;AAAM,QAAA,aAAa,EAAC,KAApB;AAA0B,QAAA,UAAU,EAAC,QAArC;AAA8C,QAAA,cAAc,EAAC,eAA7D;AAA6E,QAAA,QAAQ,EAAC;AAAtF,SACE,6BAAC,gBAAD;AAAM,QAAA,aAAa,EAAC,KAApB;AAA0B,QAAA,UAAU,EAAC;AAArC,SACE,6BAAC,iBAAD;AACE,QAAA,QAAQ,EAAEC,aAAa,CAACD,EAAd,KAAqBF,IAAI,CAACE,EADtC;AAEE,QAAA,QAAQ,EAAEF,IAAI,CAACa,KAAL,KAAe,CAF3B;AAGE,QAAA,QAAQ,EAAE;AAAA,iBAAMT,gBAAgB,CAACJ,IAAD,CAAtB;AAAA;AAHZ,QADF,EAME,6BAAC,kBAAD;AAAQ,QAAA,EAAE,EAAE;AAAZ,QANF,EAOE,6BAAC,gBAAD;AAAM,QAAA,KAAK,EAAEA,IAAI,CAACa,KAAL,GAAa,OAAb,GAAuB,MAApC;AAA4C,QAAA,IAAI,EAAC;AAAjD,SACG,wBAAWb,IAAI,CAACA,IAAhB,CADH,CAPF,CADF,EAYE,6BAAC,gBAAD;AAAM,QAAA,KAAK,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC;AAAxB,SACGA,IAAI,CAACa,KAAL,GAAa,MAAMb,IAAI,CAACa,KAAX,GAAmB,QAAhC,GAA2C,gBAD9C,CAZF,CAFF,EAkBE,6BAAC,kBAAD;AAAQ,QAAA,EAAE,EAAE;AAAZ,QAlBF,EAmBE,6BAAC,qBAAD;AAAW,QAAA,KAAK,EAAE,kBAAM,MAAN;AAAlB,QAnBF,CADF;AAuBD,KAxBM,CAAP;AAyBD,GA1BD;;AA4BA,MAAMY,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,WAAO,CAAC,WAAD,EAAc,gBAAd,EAAgC,cAAhC,EAAgD,eAAhD,CAAP;AACD,GAFD;;AAIA,SACE,6BAAC,iBAAD,QACE,6BAAC,KAAD,QACE,6BAAC,yBAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,MAAM,EAAEpB,iBAFV;AAGE,IAAA,IAAI,EAAE;AAAER,MAAAA,MAAM,EAAEL,YAAY,GAAG;AAAzB,KAHR;AAIE,IAAA,EAAE,EAAE;AAAEK,MAAAA,MAAM,EAAEQ,iBAAiB,GAAGb,YAAY,GAAG,GAAlB,GAAwBA,YAAY,GAAG;AAAlE;AAJN,KAMG,UAAAO,KAAK;AAAA,WACJ,6BAAC,eAAD;AAAiB,MAAA,KAAK,EAAEA;AAAxB,OACGM,iBAAiB,IAAI,6BAAC,eAAD;AAAiB,MAAA,KAAK,EAAEN;AAAxB,MADxB,EAEE,6BAAC,yBAAD;AAAc,MAAA,KAAK,EAAE;AAAE2B,QAAAA,IAAI,EAAE;AAAR;AAArB,OACE,6BAAC,qBAAD;AAAU,MAAA,IAAI,EAAED,QAAQ,EAAxB;AAA4B,MAAA,YAAY,EAAE,sBAAAJ,IAAI;AAAA,eAAIA,IAAJ;AAAA,OAA9C;AAAwD,MAAA,UAAU,EAAE,oBAAAA,IAAI;AAAA,eAAIF,WAAU,CAACE,IAAD,CAAd;AAAA;AAAxE,MADF,CAFF,CADI;AAAA,GANR,CADF,EAgBE,6BAAC,SAAD,QACE,6BAAC,gBAAD;AAAM,IAAA,CAAC,EAAE,CAAT;AAAY,IAAA,cAAc,EAAC,eAA3B;AAA2C,IAAA,QAAQ,EAAC,QAApD;AAA6D,IAAA,aAAa,EAAC;AAA3E,KACE,6BAAC,gBAAD;AAAM,IAAA,UAAU,EAAC,QAAjB;AAA0B,IAAA,QAAQ,EAAC,QAAnC;AAA4C,IAAA,aAAa,EAAC,KAA1D;AAAgE,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE;AAAT;AAAvE,KACE,6BAAC,qCAAD;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMC,kCAAWC,GAAX,CAAe9B,KAAK,CAAC+B,WAArB,CAAN;AAAA;AAAnC,KACE,6BAAC,oBAAD,OADF,CADF,EAIE,6BAAC,kBAAD;AAAQ,IAAA,EAAE,EAAE;AAAZ,IAJF,EAKE,6BAAC,qCAAD;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMd,gBAAgB,EAAtB;AAAA;AAAnC,KACE,6BAAC,eAAD,OADF,CALF,CADF,EAUE,6BAAC,qCAAD;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMV,uBAAuB,CAAC,CAACD,iBAAF,CAA7B;AAAA;AAAnC,KACE,6BAAC,mBAAD;AAAqB,IAAA,CAAC,EAAE;AAAxB,KACE,6BAAC,UAAD;AAAY,IAAA,IAAI,EAAC,GAAjB;AAAqB,IAAA,KAAK,EAAC;AAA3B,KACGF,aAAa,CAACF,WAAd,CAA0B8B,WAA1B,EADH,CADF,EAIE,6BAAC,kBAAD;AAAQ,IAAA,EAAE,EAAE;AAAZ,IAJF,EAKE,6BAAC,qBAAD;AAAuB,IAAA,MAAM,EAAE1B;AAA/B,IALF,CADF,CAVF,EAmBE,6BAAC,0BAAD;AAAe,IAAA,OAAO,EAAEa;AAAxB,IAnBF,CADF,CAhBF,EAuCE,6BAAC,SAAD;AAAW,IAAA,CAAC,EAAE;AAAd,KACE,6BAAC,uBAAD,QACE,6BAAC,qBAAD;AAAW,IAAA,KAAK,EAAE,kBAAM,MAAN;AAAlB,IADF,EAEGK,WAAW,EAFd,CADF,EAKE,6BAAC,kBAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMjB,uBAAuB,CAAC,CAACD,iBAAF,CAA7B;AAAA;AAAjB,cALF,CAvCF,CADF,CADF;AAmDD,CAzIM;;;AA2IP,IAAM2B,qBAAqB,GAAG,qBAAOC,sBAAP,CAAH,oBAA3B;AAMA,IAAMC,UAAU,GAAG,qBAAOC,gBAAP,CAAH,oBAAhB;;AAMA,IAAMC,KAAK,GAAGC,gBAAOC,IAAV,oBAAX;;AAKA,IAAMC,SAAS,GAAGF,gBAAOC,IAAV,qBACG,kBAAM,CAAN,CADH,EAEI,kBAAM,CAAN,CAFJ,EAIK,kBAAM,CAAN,CAJL,CAAf;;AAOA,IAAME,OAAO,GAAGH,gBAAOC,IAAV,oBAAb;;AAUA,IAAMG,SAAS,GAAGJ,gBAAOC,IAAV,oBAAf;;AAIA,IAAMI,mBAAmB,GAAGL,gBAAOC,IAAV,qBAGH,kBAAM,MAAN,CAHG,CAAzB;;AASA,IAAMK,OAAO,GAAGN,gBAAOC,IAAV,oBAAb;;AAQA,IAAMM,eAAe,GAAG,iCAASD,OAAT,CAAxB;AACA,IAAME,eAAe,GAAG,iCAASL,OAAT,CAAxB","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport gql from \"graphql-tag\"\nimport { capitalize } from \"lodash\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { Theme, Button, Flex, Sans, Box, Radio, Separator, Spacer } from \"App/Components\"\nimport { FlatList, SafeAreaView, Dimensions, TouchableWithoutFeedback, ScrollView } from \"react-native\"\nimport { ImageRail, ProductDetails, MoreLikeThis, AboutTheBrand, ReserveButton } from \"./Components\"\nimport { color, space } from \"App/Utils\"\nimport styled from \"styled-components/native\"\nimport { animated, Spring } from \"react-spring/renderprops-native.cjs\"\nimport { BackArrowIcon, DownChevronIcon, SaveIcon } from \"Assets/icons\"\nimport { Navigation } from \"react-native-navigation\"\n\nconst GET_PRODUCT = gql`\n  query GetProduct($productId: ID!) {\n    product(where: { id: $productId }) {\n      name\n      id\n      description\n      retailPrice\n      modelSize\n      modelHeight\n      brand {\n        name\n      }\n      images\n    }\n  }\n`\n\nconst screenHeight = Math.round(Dimensions.get(\"window\").height)\n\nexport const Product = props => {\n  const [sizeSelection, setSizeSelection] = useState({ size: \"\", abbreviated: \"X\", id: null })\n  const [showSizeSelection, toggleShowSizeSelection] = useState(false)\n  const { loading, error, data } = useQuery(GET_PRODUCT, {\n    variables: {\n      productId: props.id,\n    },\n  })\n\n  const sizes = [\n    { size: \"small\", abbreviated: \"s\", id: 1, stock: 0 },\n    { size: \"medium\", abbreviated: \"m\", id: 2, stock: 2 },\n    { size: \"large\", abbreviated: \"l\", id: 3, stock: 1 },\n    { size: \"x-large\", abbreviated: \"xl\", id: 4, stock: 3 },\n    { size: \"xx-large\", abbreviated: \"xxl\", id: 5, stock: 3 },\n  ]\n\n  useEffect(() => {\n    // Find the first product with stock\n    const firstInStock = sizes.find(size => {\n      return size.stock > 0\n    })\n    setSizeSelection(firstInStock)\n  }, [])\n\n  const handleSaveButton = () => {\n    // FIXME: Handle handleSaveButton\n  }\n\n  if (loading || !data) {\n    return null\n  }\n  if (error) {\n    console.error(\"error: \", error)\n  }\n\n  const product = data && data.product\n\n  const renderItem = ({ item: section }) => {\n    const images = product && product.images\n    switch (section) {\n      case \"imageRail\":\n        return <ImageRail images={images} />\n      case \"productDetails\":\n        return <ProductDetails product={product} />\n      case \"moreLikeThis\":\n        return <MoreLikeThis products={images} />\n      case \"aboutTheBrand\":\n        return <AboutTheBrand product={product} />\n      default:\n        return null\n    }\n  }\n\n  const renderSizes = () => {\n    return sizes.map(size => {\n      return (\n        <Box key={size.id}>\n          <Spacer mb={2} />\n          <Flex flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\" flexWrap=\"nowrap\">\n            <Flex flexDirection=\"row\" alignItems=\"center\">\n              <Radio\n                selected={sizeSelection.id === size.id}\n                disabled={size.stock === 0}\n                onSelect={() => setSizeSelection(size)}\n              />\n              <Spacer mr={1} />\n              <Sans color={size.stock ? \"white\" : \"gray\"} size=\"2\">\n                {capitalize(size.size)}\n              </Sans>\n            </Flex>\n            <Sans color=\"gray\" size=\"2\">\n              {size.stock ? \"(\" + size.stock + \" left)\" : \"(Out of stock)\"}\n            </Sans>\n          </Flex>\n          <Spacer mb={2} />\n          <Separator color={color(\"gray\")} />\n        </Box>\n      )\n    })\n  }\n\n  const sections = () => {\n    return [\"imageRail\", \"productDetails\", \"moreLikeThis\", \"aboutTheBrand\"]\n  }\n\n  return (\n    <Theme>\n      <Outer>\n        <Spring\n          native\n          toggle={showSizeSelection}\n          from={{ height: screenHeight - 106 }}\n          to={{ height: showSizeSelection ? screenHeight - 436 : screenHeight - 106 }}\n        >\n          {props => (\n            <AnimatedContent style={props}>\n              {showSizeSelection && <AnimatedOverlay style={props} />}\n              <SafeAreaView style={{ flex: 1 }}>\n                <FlatList data={sections()} keyExtractor={item => item} renderItem={item => renderItem(item)} />\n              </SafeAreaView>\n            </AnimatedContent>\n          )}\n        </Spring>\n        <FooterNav>\n          <Flex p={2} justifyContent=\"space-between\" flexWrap=\"nowrap\" flexDirection=\"row\">\n            <Flex alignItems=\"center\" flexWrap=\"nowrap\" flexDirection=\"row\" style={{ width: 114 }}>\n              <TouchableWithoutFeedback onPress={() => Navigation.pop(props.componentId)}>\n                <BackArrowIcon />\n              </TouchableWithoutFeedback>\n              <Spacer mr={4} />\n              <TouchableWithoutFeedback onPress={() => handleSaveButton()}>\n                <SaveIcon />\n              </TouchableWithoutFeedback>\n            </Flex>\n            <TouchableWithoutFeedback onPress={() => toggleShowSizeSelection(!showSizeSelection)}>\n              <SizeSelectionButton p={2}>\n                <StyledSans size=\"2\" color=\"white\">\n                  {sizeSelection.abbreviated.toUpperCase()}\n                </StyledSans>\n                <Spacer mr={3} />\n                <StyledDownChevronIcon rotate={showSizeSelection} />\n              </SizeSelectionButton>\n            </TouchableWithoutFeedback>\n            <ReserveButton product={product}></ReserveButton>\n          </Flex>\n        </FooterNav>\n        <Selection m={2}>\n          <ScrollView>\n            <Separator color={color(\"gray\")} />\n            {renderSizes()}\n          </ScrollView>\n          <Button onPress={() => toggleShowSizeSelection(!showSizeSelection)}>Cancel</Button>\n        </Selection>\n      </Outer>\n    </Theme>\n  )\n}\n\nconst StyledDownChevronIcon = styled(DownChevronIcon)`\n  position: absolute;\n  right: 15;\n  top: 15;\n`\n\nconst StyledSans = styled(Sans)`\n  position: absolute;\n  left: 15;\n  top: 8;\n`\n\nconst Outer = styled.View`\n  flex: 1;\n  background-color: black;\n`\n\nconst Selection = styled.View`\n  padding-left: ${space(2)}px;\n  padding-right: ${space(2)}px;\n  flex: 1;\n  padding-bottom: ${space(2)}px;\n`\n\nconst Overlay = styled.View`\n  background-color: rgba(0, 0, 0, 0.5);\n  position: absolute;\n  flex: 1;\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 100;\n`\n\nconst FooterNav = styled.View`\n  background-color: black;\n`\n\nconst SizeSelectionButton = styled.View`\n  border-radius: 30;\n  width: 88;\n  border: 1px solid ${color(\"gray\")};\n  border-width: 1;\n  border-radius: 28;\n  position: relative;\n`\n\nconst Content = styled.View`\n  background-color: white;\n  border-bottom-left-radius: 30;\n  border-bottom-right-radius: 30;\n  overflow: hidden;\n  margin-bottom: 10;\n`\n\nconst AnimatedContent = animated(Content)\nconst AnimatedOverlay = animated(Overlay)\n"]}