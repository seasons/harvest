{"version":3,"sources":["extractLengthList.ts"],"names":["spaceReg","commaReg","Array","lengthList"],"mappings":";;;;AAEA,IAAMA,QAAQ,GAAd,KAAA;AACA,IAAMC,QAAQ,GAAd,IAAA;;AAEe,SAAA,iBAAA,CAAA,UAAA,EAEG;AAChB,MAAIC,KAAK,CAALA,OAAAA,CAAJ,UAAIA,CAAJ,EAA+B;AAC7B,WAAA,UAAA;AADF,GAAA,MAEO,IAAI,OAAA,UAAA,KAAJ,QAAA,EAAoC;AACzC,WAAO,CAAP,UAAO,CAAP;AADK,GAAA,MAEA,IAAI,OAAA,UAAA,KAAJ,QAAA,EAAoC;AACzC,WAAOC,UAAU,CAAVA,IAAAA,GAAAA,OAAAA,CAAAA,QAAAA,EAAAA,GAAAA,EAAAA,KAAAA,CAAP,QAAOA,CAAP;AADK,GAAA,MAKA;AACL,WAAA,EAAA;AAEH;AAAA","sourcesContent":["import { NumberProp } from './types';\n\nconst spaceReg = /\\s+/;\nconst commaReg = /,/g;\n\nexport default function extractLengthList(\n  lengthList?: (NumberProp)[] | NumberProp,\n): (NumberProp)[] {\n  if (Array.isArray(lengthList)) {\n    return lengthList;\n  } else if (typeof lengthList === 'number') {\n    return [lengthList];\n  } else if (typeof lengthList === 'string') {\n    return lengthList\n      .trim()\n      .replace(commaReg, ' ')\n      .split(spaceReg);\n  } else {\n    return [];\n  }\n}\n"]}