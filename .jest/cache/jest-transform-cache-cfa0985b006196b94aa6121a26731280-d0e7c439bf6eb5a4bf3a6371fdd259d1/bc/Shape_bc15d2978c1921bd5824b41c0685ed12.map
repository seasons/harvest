{"version":3,"sources":["Shape.tsx"],"names":["touchableGetInitialState","SvgTouchableMixin","touchKeys","Object","touchVals","numTouchKeys","Shape","Component","root","i","key","val"],"mappings":";;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,kBAAA,GAAA,sBAAA,CAAA,OAAA,4BAAA,CAAA;;AAIQA,IAAAA,wB,GAA6BC,kBAAAA,CAAAA,OAAAA,CAA7BD,wBAAAA;AACR,IAAME,SAAS,GAAGC,MAAM,CAANA,IAAAA,CAAYF,kBAAAA,CAA9B,OAAkBE,CAAlB;AACA,IAAMC,SAAS,GAAGF,SAAS,CAATA,GAAAA,CAAc,UAAA,GAAA,EAAG;AAAA,SAAID,kBAAAA,CAAAA,OAAAA,CAAJ,GAAIA,CAAJ;AAAnC,CAAkBC,CAAlB;AACA,IAAMG,YAAY,GAAGH,SAAS,CAA9B,MAAA;;AAEqBI,IAAAA,K;;;AAGnB,WAAA,KAAA,CAAA,MAAA,EAAA,OAAA,EAAmC;AAAA,QAAA,KAAA;;AAAA,KAAA,GAAA,gBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,KAAA;AACjC,IAAA,KAAA,GAAA,CAAA,GAAA,2BAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,GAAA,gBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,IAAA,CAAA,IAAA,EAAA,MAAA,EAAA,OAAA,CAAA,CAAA;AADiC,IAAA,KAAA,CADnCE,IACmC,GADkB,IAClB;;AAAA,IAAA,KAAA,CAAA,SAAA,GAevB,UAAA,QAAA,EAA4D;AACtE,MAAA,KAAA,CAAA,IAAA,GAAA,QAAA;AAhBiC,KAAA;;AAAA,IAAA,KAAA,CAAA,cAAA,GAkBlB,UAAA,KAAA,EAIZ;AACH,MAAA,KAAA,CAAA,IAAA,IAAa,KAAA,CAAA,IAAA,CAAA,cAAA,CAAb,KAAa,CAAb;AAvBiC,KAAA;;AAEjC,SAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAjB,YAAA,EAAkCA,CAAlC,EAAA,EAAuC;AACrC,UAAMC,GAAG,GAAGR,SAAS,CAArB,CAAqB,CAArB;AACA,UAAMS,GAAG,GAAGP,SAAS,CAArB,CAAqB,CAArB;;AACA,UAAI,OAAA,GAAA,KAAJ,UAAA,EAA+B;AAC7B,QAAA,KAAA,CAAA,GAAA,CAAA,GAAYO,GAAG,CAAHA,IAAAA,CAAAA,CAAAA,GAAAA,uBAAAA,CAAAA,OAAAA,EAAZ,KAAYA,CAAAA,CAAZ;AADF,OAAA,MAEO;AACL,QAAA,KAAA,CAAA,GAAA,CAAA,GAAA,GAAA;AAEH;AACD;;AAAA,IAAA,KAAA,CAAA,KAAA,GAAaX,wBAAb,EAAA;AAXiC,WAAA,KAAA;;;;EAHCO,MAAAA,CAAAA,S,CAAjBD","sourcesContent":["import { Component } from 'react';\nimport SvgTouchableMixin from '../lib/SvgTouchableMixin';\nimport { NativeMethodsMixinStatic } from 'react-native';\nimport { TransformProps } from '../lib/extract/types';\n\nconst { touchableGetInitialState } = SvgTouchableMixin;\nconst touchKeys = Object.keys(SvgTouchableMixin);\nconst touchVals = touchKeys.map(key => SvgTouchableMixin[key]);\nconst numTouchKeys = touchKeys.length;\n\nexport default class Shape<P> extends Component<P> {\n  [x: string]: unknown;\n  root: (Shape<P> & NativeMethodsMixinStatic) | null = null;\n  constructor(props: P, context: {}) {\n    super(props, context);\n    for (let i = 0; i < numTouchKeys; i++) {\n      const key = touchKeys[i];\n      const val = touchVals[i];\n      if (typeof val === 'function') {\n        this[key] = val.bind(this);\n      } else {\n        this[key] = val;\n      }\n    }\n    this.state = touchableGetInitialState();\n  }\n  refMethod: (\n    instance: (Shape<P> & NativeMethodsMixinStatic) | null,\n  ) => void = (instance: (Shape<P> & NativeMethodsMixinStatic) | null) => {\n    this.root = instance;\n  };\n  setNativeProps = (\n    props: Object & {\n      matrix?: [number, number, number, number, number, number];\n    } & TransformProps,\n  ) => {\n    this.root && this.root.setNativeProps(props);\n  };\n}\n"]}