9b6dc0b6e71d0b76e6745079578bb196
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _Path = _interopRequireDefault(require("./Path"));

var _Shape2 = _interopRequireDefault(require("./Shape"));

var _extractPolyPoints = _interopRequireDefault(require("../lib/extract/extractPolyPoints"));

var _jsxFileName = "/Users/jannegylling/IdeaProjects/react-native-svg/src/elements/Polyline.tsx";

var Polyline = function (_Shape) {
  (0, _inherits2.default)(Polyline, _Shape);

  function Polyline() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Polyline);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Polyline)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _this.setNativeProps = function (props) {
      var points = props.points;

      if (points) {
        props.d = "M" + (0, _extractPolyPoints.default)(points);
      }

      _this.root && _this.root.setNativeProps(props);
    };

    return _this;
  }

  (0, _createClass2.default)(Polyline, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var points = props.points;
      return _react.default.createElement(_Path.default, (0, _extends2.default)({
        ref: this.refMethod,
        d: points && "M" + (0, _extractPolyPoints.default)(points)
      }, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 31
        }
      }));
    }
  }]);
  return Polyline;
}(_Shape2.default);

exports.default = Polyline;
Polyline.displayName = 'Polyline';
Polyline.defaultProps = {
  points: ''
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBvbHlsaW5lLnRzeCJdLCJuYW1lcyI6WyJQb2x5bGluZSIsIlNoYXBlIiwiZGlzcGxheU5hbWUiLCJkZWZhdWx0UHJvcHMiLCJwb2ludHMiLCJzZXROYXRpdmVQcm9wcyIsInByb3BzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQSxNQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxLQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLFVBQUEsQ0FBQTs7QUFDQSxJQUFBLE9BQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsV0FBQSxDQUFBOztBQUVBLElBQUEsa0JBQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsb0NBQUEsQ0FBQTs7OztBQUVxQkEsSUFBQUEsUTs7Ozs7Ozs7Ozs7Ozs7OztVQU9uQkssYyxHQUFpQixVQUFBLEtBQUEsRUFLWjtBQUFBLFVBQ0tELE1BREwsR0FDZ0JFLEtBRGhCLENBQUEsTUFBQTs7QUFFSCxVQUFBLE1BQUEsRUFBWTtBQUNWQSxRQUFBQSxLQUFLLENBQUxBLENBQUFBLEdBQUFBLE1BQWMsQ0FBQSxHQUFBLGtCQUFBLENBQUEsT0FBQSxFQUFkQSxNQUFjLENBQWRBO0FBRUY7O0FBQUEsTUFBQSxLQUFBLENBQUEsSUFBQSxJQUFhLEtBQUEsQ0FBQSxJQUFBLENBQUEsY0FBQSxDQUFiLEtBQWEsQ0FBYjs7Ozs7Ozs7NkJBR087QUFBQSxVQUNDQSxLQURELEdBQUEsS0FBQSxLQUFBO0FBQUEsVUFFQ0YsTUFGRCxHQUVZRSxLQUZaLENBQUEsTUFBQTtBQUdQLGFBQ0UsTUFBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUMsS0FBQSxDQUFELE9BQUEsRUFBQSxDQUFBLEdBQUEsU0FBQSxDQUFBLE9BQUEsRUFBQTtBQUNFLFFBQUEsR0FBRyxFQUFFLEtBRFAsU0FBQTtBQUVFLFFBQUEsQ0FBQyxFQUFFRixNQUFNLElBQUEsTUFBUSxDQUFBLEdBQUEsa0JBQUEsQ0FBQSxPQUFBLEVBRm5CLE1BRW1CO0FBRm5CLE9BQUEsRUFBQSxLQUFBLEVBQUE7QUFBQSxRQUFBLFFBQUEsRUFBQTtBQUFBLFVBQUEsUUFBQSxFQUFBLFlBQUE7QUFBQSxVQUFBLFVBQUEsRUFERjtBQUNFO0FBQUEsT0FBQSxDQUFBLENBREY7Ozs7RUF2QmtDSCxPQUFBQSxDQUFBQSxPLENBQWpCRDs7O0FBQUFBLFEsQ0FDWkUsV0FEWUYsR0FDRSxVQURGQTtBQUFBQSxRLENBR1pHLFlBSFlILEdBR0c7QUFDcEJJLEVBQUFBLE1BQU0sRUFEYztBQUFBLENBSEhKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQYXRoIGZyb20gJy4vUGF0aCc7XG5pbXBvcnQgU2hhcGUgZnJvbSAnLi9TaGFwZSc7XG5pbXBvcnQgeyBOdW1iZXJQcm9wIH0gZnJvbSAnLi4vbGliL2V4dHJhY3QvdHlwZXMnO1xuaW1wb3J0IGV4dHJhY3RQb2x5UG9pbnRzIGZyb20gJy4uL2xpYi9leHRyYWN0L2V4dHJhY3RQb2x5UG9pbnRzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9seWxpbmUgZXh0ZW5kcyBTaGFwZTx7IHBvaW50cz86IG51bWJlcltdIH0+IHtcbiAgc3RhdGljIGRpc3BsYXlOYW1lID0gJ1BvbHlsaW5lJztcblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIHBvaW50czogJycsXG4gIH07XG5cbiAgc2V0TmF0aXZlUHJvcHMgPSAoXG4gICAgcHJvcHM6IE9iamVjdCAmIHtcbiAgICAgIHBvaW50cz86IHN0cmluZyB8IChOdW1iZXJQcm9wKVtdO1xuICAgICAgZD86IHN0cmluZztcbiAgICB9LFxuICApID0+IHtcbiAgICBjb25zdCB7IHBvaW50cyB9ID0gcHJvcHM7XG4gICAgaWYgKHBvaW50cykge1xuICAgICAgcHJvcHMuZCA9IGBNJHtleHRyYWN0UG9seVBvaW50cyhwb2ludHMpfWA7XG4gICAgfVxuICAgIHRoaXMucm9vdCAmJiB0aGlzLnJvb3Quc2V0TmF0aXZlUHJvcHMocHJvcHMpO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IHByb3BzIH0gPSB0aGlzO1xuICAgIGNvbnN0IHsgcG9pbnRzIH0gPSBwcm9wcztcbiAgICByZXR1cm4gKFxuICAgICAgPFBhdGhcbiAgICAgICAgcmVmPXt0aGlzLnJlZk1ldGhvZCBhcyAoKGluc3RhbmNlOiBQYXRoIHwgbnVsbCkgPT4gdm9pZCl9XG4gICAgICAgIGQ9e3BvaW50cyAmJiBgTSR7ZXh0cmFjdFBvbHlQb2ludHMocG9pbnRzKX1gfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAvPlxuICAgICk7XG4gIH1cbn1cbiJdfQ==