{"version":3,"sources":["Theme.tsx"],"names":["breakpoints","xl","lg","md","sm","xs","themeProps","borders","colors","white","black","green","lightGreen","lightGray","gray","darkGray","blue","fontFamily","space","typeSizes","fontSize","lineHeight","Theme","props","children"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAKO,IAAMA,WAAW,GAAG;AAEzBC,EAAAA,EAAE,EAAE,IAFqB;AAIzBC,EAAAA,EAAE,EAAE,IAJqB;AAMzBC,EAAAA,EAAE,EAAE,GANqB;AAQzBC,EAAAA,EAAE,EAAE,GARqB;AAUzBC,EAAAA,EAAE,EAAE;AAVqB,CAApB;;AAeA,IAAMC,UAAU,GAAG;AAExBC,EAAAA,OAAO,EAAE,CAAC,WAAD,EAAc,WAAd,CAFe;AAIxBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,MADD;AAENC,IAAAA,KAAK,EAAE,MAFD;AAGNC,IAAAA,KAAK,EAAE,SAHD;AAINC,IAAAA,UAAU,EAAE,SAJN;AAKNC,IAAAA,SAAS,EAAE,SALL;AAMNC,IAAAA,IAAI,EAAE,SANA;AAONC,IAAAA,QAAQ,EAAE,SAPJ;AAQNC,IAAAA,IAAI,EAAE;AARA,GAJgB;AAexBC,EAAAA,UAAU,EAAVA,sBAfwB;AAiBxBC,EAAAA,KAAK,EAAE;AAGL,SAAK,CAHA;AAKL,SAAK,CALA;AAOL,OAAG,EAPE;AASL,OAAG,EATE;AAWL,OAAG,EAXE;AAaL,OAAG,EAbE;AAeL,OAAG,EAfE;AAiBL,OAAG,EAjBE;AAmBL,QAAI,GAnBC;AAqBL,QAAI;AArBC,GAjBiB;AAyCxBC,EAAAA,SAAS,EAAE;AAET,SAAK;AACHC,MAAAA,QAAQ,EAAE,EADP;AAEHC,MAAAA,UAAU,EAAE;AAFT,KAFI;AAOT,SAAK;AACHD,MAAAA,QAAQ,EAAE,EADP;AAEHC,MAAAA,UAAU,EAAE;AAFT,KAPI;AAYT,SAAK;AACHD,MAAAA,QAAQ,EAAE,EADP;AAEHC,MAAAA,UAAU,EAAE;AAFT,KAZI;AAiBT,SAAK;AACHD,MAAAA,QAAQ,EAAE,EADP;AAEHC,MAAAA,UAAU,EAAE;AAFT,KAjBI;AAsBT,SAAK;AACHD,MAAAA,QAAQ,EAAE,EADP;AAEHC,MAAAA,UAAU,EAAE;AAFT;AAtBI;AAzCa,CAAnB;;;AAsEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAC5B,SAAO,6BAAC,qBAAD;AAAe,IAAA,KAAK,EAAEjB;AAAtB,KAAmCiB,KAAK,CAACC,QAAzC,CAAP;AACD,CAFM","sourcesContent":["import React from \"react\"\nimport { fontFamily } from \"./Typography\"\nimport { ThemeProvider } from \"styled-components/native\"\n\n/**\n * A list of breakpoints accessible by key/value.\n */\nexport const breakpoints = {\n  /** Above 1192 */\n  xl: 1192,\n  /** Between 1024 and  1191 */\n  lg: 1024,\n  /** Between 900 and 1023 */\n  md: 900,\n  /** Between 768 and  899 */\n  sm: 768,\n  /** Below 767 */\n  xs: 767,\n}\n\n/**\n */\nexport const themeProps = {\n  /** Border variations */\n  borders: [\"1px solid\", \"2px solid\"],\n\n  colors: {\n    white: \"#fff\",\n    black: \"#000\",\n    green: \"#44524A\",\n    lightGreen: \"#989F9B\",\n    lightGray: \"#DFDFDF\",\n    gray: \"#7F7F7F\",\n    darkGray: \"#303030\",\n    blue: \"#2B50DF\",\n  },\n\n  fontFamily,\n\n  space: {\n    // unit: px value\n    /** Equivalent to 3px  */\n    0.3: 3,\n    /** Equivalent to 5px  */\n    0.5: 5,\n    /** Equivalent to 10px  */\n    1: 10,\n    /** Equivalent to 20px  */\n    2: 20,\n    /** Equivalent to 30px  */\n    3: 30,\n    /** Equivalent to 40px  */\n    4: 40,\n    /** Equivalent to 60px  */\n    6: 60,\n    /** Equivalent to 90px  */\n    9: 90,\n    /** Equivalent to 120px  */\n    12: 120,\n    /** Equivalent to 180px  */\n    18: 180,\n  },\n\n  typeSizes: {\n    /** Equivalent to 14px size / 20px line-height  */\n    \"0\": {\n      fontSize: 14,\n      lineHeight: 20,\n    },\n    /** Equivalent to 16px size / 24px line-height  */\n    \"1\": {\n      fontSize: 16,\n      lineHeight: 24,\n    },\n    /** Equivalent to 18px size / 20px line-height  */\n    \"2\": {\n      fontSize: 18,\n      lineHeight: 20,\n    },\n    /** Equivalent to 24px size / 32px line-height  */\n    \"3\": {\n      fontSize: 24,\n      lineHeight: 32,\n    },\n    /** Equivalent to 40px size / 40px line-height  */\n    \"4\": {\n      fontSize: 40,\n      lineHeight: 40,\n    },\n  },\n}\n\nexport const Theme = props => {\n  return <ThemeProvider theme={themeProps}>{props.children}</ThemeProvider>\n}\n\n/** All available px spacing maps */\nexport type SpacingUnit = keyof typeof themeProps[\"space\"]\n/** All available color keys */\nexport type Color = keyof typeof themeProps[\"colors\"]\n/** All available width breakpoint */\n// export type Breakpoint = keyof typeof breakpoints\n\n/** All available type sizes */\nexport type TypeSizes = typeof themeProps.typeSizes\n/** All available sizes for our sans font */\nexport type SansSize = keyof TypeSizes | Array<keyof TypeSizes>\n"]}