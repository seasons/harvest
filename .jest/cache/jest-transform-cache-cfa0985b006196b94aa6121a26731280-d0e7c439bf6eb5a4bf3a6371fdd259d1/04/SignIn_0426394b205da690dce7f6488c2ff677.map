{"version":3,"sources":["SignIn.tsx"],"names":["credentials","domain","clientId","auth0","Auth0","SignIn","state","email","password","emailComplete","showError","onChangeText","key","val","setState","emailValidationRegex","test","handleSignIn","length","login","handleResetPassword","handleApply","auth","userInfo","token","accessToken","then","profile","props","onAuth","catch","error","alert","json","error_description","username","passwordRealm","realm","success","AsyncStorage","setItem","JSON","stringify","description","createUser","connection","console","log","webAuth","authorize","scope","audience","onSuccess","title","message","disabled","flex","backgroundColor","textDecorationLine","textAlign","React","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { ErrorPopUp, Theme, Sans, TextInput, Box, Spacer, Button, Flex } from \"App/Components\"\nimport { Text } from \"Components/Typography\"\nimport { SafeAreaView, TouchableWithoutFeedback } from \"react-native\"\nimport AsyncStorage from \"@react-native-community/async-storage\"\nimport { color } from \"App/Utils\"\nimport Auth0 from \"react-native-auth0\"\nimport { goHome } from \"../../Navigation\"\n\nconst credentials = {\n  domain: \"seasons.auth0.com\",\n  clientId: \"ovWzqnt8Qv5lQ4dhzpxdFb2u4zjOg3Cm\",\n}\n\nconst auth0 = new Auth0(credentials)\n\ninterface SignInProps {\n  onAuth: (credentials, profile) => void\n}\n\nexport class SignIn extends React.Component<SignInProps> {\n  state = {\n    email: \"\",\n    password: \"\",\n    emailComplete: false,\n    showError: false,\n  }\n\n  onChangeText = (key, val) => {\n    this.setState({ [key]: val })\n    if (key === \"email\") {\n      const emailValidationRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n      this.setState({ emailComplete: emailValidationRegex.test(val) })\n    }\n  }\n\n  handleSignIn = () => {\n    const { email, password, emailComplete } = this.state\n    if (emailComplete && password.length) {\n      this.login(email, password)\n    }\n  }\n\n  handleResetPassword = () => {\n    //FIXME: Handle reset password\n  }\n\n  handleApply = () => {\n    //FIXME: Handle apply\n  }\n\n  onSuccess(credentials) {\n    auth0.auth\n      .userInfo({ token: credentials.accessToken })\n      .then(profile => {\n        this.props.onAuth(credentials, profile)\n      })\n      .catch(error => this.alert(\"Error\", error.json.error_description))\n  }\n\n  login(username, password) {\n    auth0.auth\n      .passwordRealm({\n        username: username,\n        password: password,\n        realm: \"Username-Password-Authentication\",\n      })\n      .then(success => {\n        AsyncStorage.setItem(\"userSession\", JSON.stringify(success))\n        goHome()\n      })\n      .catch(error => {\n        this.alert(\"Error\", error.json.description)\n      })\n  }\n\n  createUser(username, password) {\n    auth0.auth\n      .createUser({\n        email: username,\n        password: password,\n        connection: \"Username-Password-Authentication\",\n      })\n      .then(success => {\n        console.log(success)\n        this.alert(\"Success\", \"New user created\")\n      })\n      .catch(error => {\n        this.alert(\"Error\", error.json.description)\n      })\n  }\n\n  webAuth(connection) {\n    auth0.webAuth\n      .authorize({\n        scope: \"openid profile email\",\n        connection: connection,\n        audience: \"https://\" + credentials.domain + \"/userinfo\",\n      })\n      .then(credentials => {\n        this.onSuccess(credentials)\n      })\n      .catch(error => this.alert(\"Error\", error.error_description))\n  }\n\n  alert(title, message) {\n    this.setState({ showError: true })\n  }\n\n  render() {\n    const { emailComplete, password } = this.state\n\n    const disabled = !(emailComplete && password.length)\n\n    return (\n      <SafeAreaView style={{ flex: 1, backgroundColor: color(\"black\") }}>\n        <Theme>\n          <>\n            <Flex flexDirection=\"column\" justifyContent=\"space-between\" style={{ flex: 1 }}>\n              <Box p={2} mt={6}>\n                <Sans color=\"white\" size=\"3\">\n                  Welcome\n                </Sans>\n                <Spacer mb={2} />\n                <TextInput\n                  placeholder=\"Email\"\n                  variant=\"dark\"\n                  textContentType=\"Email\"\n                  inputKey=\"email\"\n                  onChangeText={this.onChangeText}\n                />\n                <Spacer mb={2} />\n                <TextInput\n                  secureTextEntry\n                  placeholder=\"Password\"\n                  variant=\"dark\"\n                  inputKey=\"password\"\n                  textContentType=\"Password\"\n                  onChangeText={this.onChangeText}\n                />\n                <Spacer mb={2} />\n                <Text>\n                  <Sans size=\"2\" color=\"gray\">\n                    Forget password?\n                  </Sans>{\" \"}\n                  <TouchableWithoutFeedback onPress={this.handleResetPassword}>\n                    <Sans style={{ textDecorationLine: \"underline\" }} size=\"2\" color=\"white\">\n                      Reset\n                    </Sans>\n                  </TouchableWithoutFeedback>\n                </Text>\n                <Spacer mb={4} />\n                <Button\n                  onPress={() => this.handleSignIn()}\n                  variant={emailComplete && password.length ? \"primaryLight\" : \"secondaryLight\"}\n                >\n                  Sign in\n                </Button>\n              </Box>\n              <Box p={2}>\n                <Text style={{ textAlign: \"center\" }}>\n                  <Sans size=\"2\" color=\"gray\">\n                    Not a member?\n                  </Sans>{\" \"}\n                  <TouchableWithoutFeedback onPress={this.handleApply}>\n                    <Sans style={{ textDecorationLine: \"underline\" }} size=\"2\" color=\"white\">\n                      Apply\n                    </Sans>\n                  </TouchableWithoutFeedback>\n                </Text>\n              </Box>\n            </Flex>\n            <ErrorPopUp\n              buttonText=\"Got it\"\n              note=\"Your email or password may be incorrect. Not a member? Apply for the waitlist.\"\n              title=\"Oops! Try again\"\n              show={this.state.showError}\n              onClose={() => this.setState({ showError: false })}\n            />\n          </>\n        </Theme>\n      </SafeAreaView>\n    )\n  }\n}\n"]}