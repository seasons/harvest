{"version":3,"sources":["extractBrush.ts"],"names":["urlIdPattern","currentColorBrush","color","brush","int32ARGBColor","console"],"mappings":";;;;;;;AAAA,IAAA,aAAA,GAAA,uBAAA,CAAA,OAAA,kBAAA,CAAA;;AAGA,IAAMA,YAAY,GAAlB,gBAAA;AAEA,IAAMC,iBAAiB,GAAG,CAA1B,CAA0B,CAA1B;;AAEe,SAAA,YAAA,CAAA,KAAA,EAAqC;AAClD,MAAI,OAAA,KAAA,KAAJ,QAAA,EAA+B;AAC7B,QAAIC,KAAK,KAALA,CAAAA,KAAAA,KAAAA,IAAyBA,KAAK,IAA9BA,CAAAA,IAAuCA,KAAK,IAAhD,UAAA,EAAgE;AAC9D,aAAO,CAAA,CAAA,EAAI,CAAA,GAAA,aAAA,CAAA,YAAA,EAAX,KAAW,CAAJ,CAAP;AAEH;AAED;;AAAA,MAAI,CAAA,KAAA,IAAUA,KAAK,KAAnB,MAAA,EAAgC;AAC9B,WAAA,IAAA;AAGF;;AAAA,MAAIA,KAAK,KAAT,cAAA,EAA8B;AAC5B,WAAA,iBAAA;AAGF;;AAAA,MAAMC,KAAK,GAAG,OAAA,KAAA,KAAA,QAAA,IAA6BD,KAAK,CAALA,KAAAA,CAA3C,YAA2CA,CAA3C;;AACA,MAAA,KAAA,EAAW;AACT,WAAO,CAAA,CAAA,EAAIC,KAAK,CAAhB,CAAgB,CAAT,CAAP;AAGF;;AAAA,MAAMC,cAAc,GAAG,CAAA,GAAA,aAAA,CAAA,OAAA,EAAvB,KAAuB,CAAvB;;AACA,MAAI,OAAA,cAAA,KAAJ,QAAA,EAAwC;AACtC,WAAO,CAAA,CAAA,EAAP,cAAO,CAAP;AAGFC;;AAAAA,EAAAA,OAAO,CAAPA,IAAAA,CAAAA,OAAAA,KAAAA,GAAAA,kCAAAA;AACA,SAAA,IAAA;AACD","sourcesContent":["import extractColor, { integerColor } from './extractColor';\nimport { Color } from './types';\n\nconst urlIdPattern = /^url\\(#(.+)\\)$/;\n\nconst currentColorBrush = [2];\n\nexport default function extractBrush(color?: Color) {\n  if (typeof color === 'number') {\n    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {\n      return [0, integerColor(color)];\n    }\n  }\n\n  if (!color || color === 'none') {\n    return null;\n  }\n\n  if (color === 'currentColor') {\n    return currentColorBrush;\n  }\n\n  const brush = typeof color === 'string' && color.match(urlIdPattern);\n  if (brush) {\n    return [1, brush[1]];\n  }\n\n  const int32ARGBColor = extractColor(color);\n  if (typeof int32ARGBColor === 'number') {\n    return [0, int32ARGBColor];\n  }\n\n  console.warn(`\"${color}\" is not a valid color or brush`);\n  return null;\n}\n"]}