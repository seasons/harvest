57c0c9b7ef24f2fd6a7b1d0e1d3fd9a6
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.determineFontSizes = determineFontSizes;
exports.LogoText = exports.Sans = exports.Text = exports.renderFontValue = exports.fontFamily = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _taggedTemplateLiteralLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteralLoose"));

var _react = _interopRequireDefault(require("react"));

var _native = _interopRequireDefault(require("styled-components/native"));

var _color = require("../Utils/color");

var _Theme = require("./Theme");

var _styledSystem = require("styled-system");

function _templateObject2() {
  var data = (0, _taggedTemplateLiteralLoose2.default)(["\n  font-family: \"Apercu-Mono\";\n  font-size: 20;\n  letter-spacing: 2;\n  line-height: 24;\n  color: #101010;\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _taggedTemplateLiteralLoose2.default)(["\n  ", ";\n  ", ";\n  ", ";\n  ", ";\n  ", ";\n  ", ";\n  ", ";\n  ", ";\n  ", ";\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var fontFamily = {
  sans: {
    thin: "ProximaNovaT-Thin",
    medium: "ProximaNova-Medium",
    bold: "ProximaNova-Bold"
  },
  display: {
    regular: "Apercu-Mono"
  }
};
exports.fontFamily = fontFamily;
var verticalAlign = (0, _styledSystem.style)({
  prop: "verticalAlign"
});

var renderFontValue = function renderFontValue(fontValue) {
  if (typeof fontValue === "string") {
    return "font-family: " + fontValue;
  } else {
    return ["font-family: " + fontValue.fontFamily].concat(fontValue.fontStyle ? "font-style: " + fontValue.fontStyle : []).concat(fontValue.fontWeight ? "font-weight: " + fontValue.fontWeight : []).join(";\n");
  }
};

exports.renderFontValue = renderFontValue;

var Text = _native.default.Text(_templateObject(), function (_ref) {
  var fontFamily = _ref.fontFamily;
  return fontFamily && renderFontValue(fontFamily);
}, _styledSystem.fontSize, _styledSystem.lineHeight, _styledSystem.color, _styledSystem.display, _styledSystem.maxWidth, _styledSystem.space, _styledSystem.textAlign, verticalAlign);

exports.Text = Text;

function determineFontSizes(size) {
  if (!Array.isArray(size)) {
    var match = _Theme.themeProps.typeSizes[size];
    return {
      fontSize: match.fontSize,
      lineHeight: match.lineHeight
    };
  }

  return size.map(function (s) {
    return _Theme.themeProps.typeSizes[s];
  }).reduce(function (accumulator, current) {
    return {
      fontSize: [].concat((0, _toConsumableArray2.default)(accumulator.fontSize), [current.fontSize]),
      lineHeight: [].concat((0, _toConsumableArray2.default)(accumulator.lineHeight), [current.lineHeight])
    };
  }, {
    fontSize: [],
    lineHeight: []
  });
}

var Sans = function Sans(props) {
  var size = props.size,
      weight = props.weight,
      numberOfLines = props.numberOfLines;
  var color = props.color ? (0, _color.color)(props.color) : (0, _color.color)("black");
  return _react.default.createElement(Text, (0, _extends2.default)({}, props, {
    fontFamily: fontFamily.sans[weight || "medium"]
  }, determineFontSizes(size), {
    color: color,
    numberOfLines: numberOfLines
  }));
};

exports.Sans = Sans;
Sans.displayName = "Sans";

var LogoText = _native.default.Text(_templateObject2());

exports.LogoText = LogoText;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,