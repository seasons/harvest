{"version":3,"sources":["EditView.tsx"],"names":["EditView","state","sameAsDeliveryRadioSelected","handleSameAsDevilveryAddress","setState","sections","renderItem","section","item","index","String","React","Component"],"mappings":"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","sourcesContent":["import { Box, Flex, Radio, Sans, Spacer, TextInput } from \"App/Components\"\n\nimport { FlatList } from \"react-native\"\nimport React from \"react\"\n\nexport class EditView extends React.Component {\n  state = {\n    sameAsDeliveryRadioSelected: false,\n  }\n\n  handleSameAsDevilveryAddress = () => {\n    this.setState({\n      sameAsDeliveryRadioSelected: !this.state.sameAsDeliveryRadioSelected,\n    })\n  }\n\n  sections = () => {\n    const sections = [\"Header\", \"Delivery address\", \"Billing address\", \"Payment information\"]\n\n    return sections\n  }\n\n  renderItem = ({ item: section }) => {\n    switch (section) {\n      case \"Header\":\n        return (\n          <Box px={2} mt={100}>\n            <Sans size=\"3\">Payment & shipping</Sans>\n          </Box>\n        )\n      case \"Delivery address\":\n        return (\n          <Box px={2}>\n            <Sans size=\"2\">Delivery address</Sans>\n            <Spacer mb={1} />\n            <TextInput placeholder=\"Address\" textContentType=\"fullStreetAddress\" key=\"deliveryAddress\" />\n            <Spacer mb={1} />\n            <Flex flexDirection=\"row\" flexWrap=\"nowrap\" justifyContent=\"space-between\">\n              <TextInput placeholder=\"Unit\" textContentType=\"streetAddressLine2\" />\n              <Spacer ml={1} />\n              <TextInput placeholder=\"Zipcode\" textContentType=\"postalCode\" />\n            </Flex>\n            <Spacer mb={1} />\n            <Flex flexDirection=\"row\" flexWrap=\"nowrap\" justifyContent=\"space-between\">\n              <TextInput placeholder=\"City\" textContentType=\"addressCity\" />\n              <Spacer ml={1} />\n              <TextInput placeholder=\"State\" textContentType=\"addressState\" />\n            </Flex>\n          </Box>\n        )\n      case \"Billing address\":\n        return (\n          <Box px={2}>\n            <Sans size=\"2\">Billing address</Sans>\n            <Spacer mb={2} />\n            <Radio\n              selected={this.state.sameAsDeliveryRadioSelected}\n              onSelect={() => this.handleSameAsDevilveryAddress()}\n              label=\"Same as Delivery Address\"\n            />\n            {!this.state.sameAsDeliveryRadioSelected && (\n              <>\n                <Spacer mb={2} />\n                <TextInput placeholder=\"Address\" textContentType=\"fullStreetAddress\" />\n                <Spacer mb={1} />\n                <Flex flexDirection=\"row\" flexWrap=\"nowrap\" justifyContent=\"space-between\">\n                  <TextInput placeholder=\"Unit\" textContentType=\"streetAddressLine2\" />\n                  <Spacer ml={1} />\n                  <TextInput placeholder=\"Zipcode\" textContentType=\"postalCode\" />\n                </Flex>\n                <Spacer mb={1} />\n                <Flex flexDirection=\"row\" flexWrap=\"nowrap\" justifyContent=\"space-between\">\n                  <TextInput placeholder=\"City\" textContentType=\"addressCity\" />\n                  <Spacer ml={1} />\n                  <TextInput placeholder=\"State\" textContentType=\"addressState\" />\n                </Flex>\n              </>\n            )}\n          </Box>\n        )\n      case \"Payment information\":\n        return (\n          <Box px={2}>\n            <Sans size=\"2\">Payment information</Sans>\n            <Spacer mb={1} />\n            <TextInput placeholder=\"Full name\" textContentType=\"name\" />\n            <Spacer mb={1} />\n            <TextInput placeholder=\"Card number\" textContentType=\"creditCardNumber\" />\n            <Spacer mb={1} />\n            <Flex flexDirection=\"row\" flexWrap=\"nowrap\" justifyContent=\"space-between\">\n              <TextInput placeholder=\"Expiration date\" />\n              <Spacer ml={1} />\n              <TextInput placeholder=\"Zipcode\" textContentType=\"postalCode\" />\n            </Flex>\n          </Box>\n        )\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <FlatList\n        data={this.sections()}\n        ItemSeparatorComponent={() => <Spacer mb={3} />}\n        keyExtractor={(item, index) => item + String(index)}\n        renderItem={item => this.renderItem(item)}\n        ListFooterComponent={() => <Spacer mb={100} />}\n      />\n    )\n  }\n}\n"]}