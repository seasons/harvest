{"version":3,"sources":["extractClipPath.ts"],"names":["clipRules","evenodd","nonzero","clipPath","clipRule","props","extracted","matched","idPattern","console"],"mappings":";;;;;AAAA,IAAA,KAAA,GAAA,OAAA,WAAA;;AAGA,IAAMA,SAA+C,GAAG;AACtDC,EAAAA,OAAO,EAD+C,CAAA;AAEtDC,EAAAA,OAAO,EAFT;AAAwD,CAAxD;;AAKe,SAAA,eAAA,CAAA,KAAA,EAA2C;AAAA,MAChDC,QADgD,GACzBE,KADyB,CAAA,QAAA;AAAA,MACtCD,QADsC,GACzBC,KADyB,CAAA,QAAA;AAExD,MAAMC,SAGL,GAHD,EAAA;;AAKA,MAAA,QAAA,EAAc;AACZA,IAAAA,SAAS,CAATA,QAAAA,GAAqBN,SAAS,CAATA,QAAS,CAATA,KAAAA,CAAAA,GAAAA,CAAAA,GAArBM,CAAAA;AAGF;;AAAA,MAAA,QAAA,EAAc;AACZ,QAAMC,OAAO,GAAGJ,QAAQ,CAARA,KAAAA,CAAeK,KAAAA,CAA/B,SAAgBL,CAAhB;;AAEA,QAAA,OAAA,EAAa;AACXG,MAAAA,SAAS,CAATA,QAAAA,GAAqBC,OAAO,CAA5BD,CAA4B,CAA5BA;AADF,KAAA,MAEO;AACLG,MAAAA,OAAO,CAAPA,IAAAA,CACE,wEAAA,QAAA,GADFA,GAAAA;AAMH;AAED;;AAAA,SAAA,SAAA;AACD","sourcesContent":["import { idPattern } from '../util';\nimport { ClipProps } from './types';\n\nconst clipRules: { evenodd: number; nonzero: number } = {\n  evenodd: 0,\n  nonzero: 1,\n};\n\nexport default function extractClipPath(props: ClipProps) {\n  const { clipPath, clipRule } = props;\n  const extracted: {\n    clipPath?: string;\n    clipRule?: number;\n  } = {};\n\n  if (clipRule) {\n    extracted.clipRule = clipRules[clipRule] === 0 ? 0 : 1;\n  }\n\n  if (clipPath) {\n    const matched = clipPath.match(idPattern);\n\n    if (matched) {\n      extracted.clipPath = matched[1];\n    } else {\n      console.warn(\n        'Invalid `clipPath` prop, expected a clipPath like \"#id\", but got: \"' +\n          clipPath +\n          '\"',\n      );\n    }\n  }\n\n  return extracted;\n}\n"]}