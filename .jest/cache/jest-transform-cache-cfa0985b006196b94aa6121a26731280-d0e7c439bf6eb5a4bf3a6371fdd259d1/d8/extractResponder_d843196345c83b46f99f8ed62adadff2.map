{"version":3,"sources":["extractResponder.ts"],"names":["responderKeys","Object","PanResponder","numResponderKeys","onPress","disabled","onPressIn","onPressOut","onLongPress","delayPressIn","delayPressOut","delayLongPress","pointerEvents","props","o","responsible","i","key","value","hasTouchableProperty","ref"],"mappings":";;;;;AAAA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAGA,IAAMA,aAAa,GAAGC,MAAM,CAANA,IAAAA,CAAYC,YAAAA,CAAAA,YAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAlC,WAAsBD,CAAtB;AACA,IAAME,gBAAgB,GAAGH,aAAa,CAAtC,MAAA;;AAEe,SAAA,gBAAA,CAAA,KAAA,EAAA,GAAA,EAIb;AAAA,MAEEI,OAFF,GAWIS,KAXJ,CAAA,OAAA;AAAA,MAGER,QAHF,GAWIQ,KAXJ,CAAA,QAAA;AAAA,MAIEP,SAJF,GAWIO,KAXJ,CAAA,SAAA;AAAA,MAKEN,UALF,GAWIM,KAXJ,CAAA,UAAA;AAAA,MAMEL,WANF,GAWIK,KAXJ,CAAA,WAAA;AAAA,MAOEJ,YAPF,GAWII,KAXJ,CAAA,YAAA;AAAA,MAQEH,aARF,GAWIG,KAXJ,CAAA,aAAA;AAAA,MASEF,cATF,GAWIE,KAXJ,CAAA,cAAA;AAAA,MAUED,aAVF,GAWIC,KAXJ,CAAA,aAAA;AAYA,MAAMC,CAEL,GAFD,EAAA;AAIA,MAAIC,WAAW,GAAf,KAAA;;AACA,OAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAjB,gBAAA,EAAsCA,CAAtC,EAAA,EAA2C;AACzC,QAAMC,GAAG,GAAGjB,aAAa,CAAzB,CAAyB,CAAzB;AACA,QAAMkB,KAAK,GAAGL,KAAK,CAAnB,GAAmB,CAAnB;;AACA,QAAA,KAAA,EAAW;AACTE,MAAAA,WAAW,GAAXA,IAAAA;AACAD,MAAAA,CAAC,CAADA,GAAC,CAADA,GAAAA,KAAAA;AAEH;AAED;;AAAA,MAAA,aAAA,EAAmB;AACjBA,IAAAA,CAAC,CAADA,aAAAA,GAAAA,aAAAA;AAGF;;AAAA,MAAMK,oBAAoB,GACxBd,QAAQ,IAARA,IAAAA,IAAAA,OAAAA,IAAAA,SAAAA,IAAAA,UAAAA,IAAAA,WAAAA,IAAAA,YAAAA,IAAAA,aAAAA,IADF,cAAA;;AAUA,MAAA,oBAAA,EAA0B;AACxBU,IAAAA,WAAW,GAAXA,IAAAA;AACAD,IAAAA,CAAC,CAADA,eAAAA,GAAoBM,GAAG,CAAvBN,4BAAAA;AACAA,IAAAA,CAAC,CAADA,gBAAAA,GAAqBM,GAAG,CAAxBN,6BAAAA;AACAA,IAAAA,CAAC,CAADA,kBAAAA,GAAuBM,GAAG,CAA1BN,+BAAAA;AACAA,IAAAA,CAAC,CAADA,oBAAAA,GAAyBM,GAAG,CAA5BN,iCAAAA;AACAA,IAAAA,CAAC,CAADA,yBAAAA,GAA8BM,GAAG,CAAjCN,sCAAAA;AACAA,IAAAA,CAAC,CAADA,6BAAAA,GACEM,GAAG,CADLN,0CAAAA;AAIF;;AAAA,MAAA,WAAA,EAAiB;AACfA,IAAAA,CAAC,CAADA,WAAAA,GAAAA,IAAAA;AAGF;;AAAA,SAAA,CAAA;AACD","sourcesContent":["import { PanResponder } from 'react-native';\nimport { ResponderInstanceProps, ResponderProps } from './types';\n\nconst responderKeys = Object.keys(PanResponder.create({}).panHandlers);\nconst numResponderKeys = responderKeys.length;\n\nexport default function extractResponder(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props: { [x: string]: any } & ResponderProps,\n  ref: ResponderInstanceProps,\n) {\n  const {\n    onPress,\n    disabled,\n    onPressIn,\n    onPressOut,\n    onLongPress,\n    delayPressIn,\n    delayPressOut,\n    delayLongPress,\n    pointerEvents,\n  } = props;\n  const o: {\n    [touchableProperty: string]: unknown;\n  } = {};\n\n  let responsible = false;\n  for (let i = 0; i < numResponderKeys; i++) {\n    const key = responderKeys[i];\n    const value = props[key];\n    if (value) {\n      responsible = true;\n      o[key] = value;\n    }\n  }\n\n  if (pointerEvents) {\n    o.pointerEvents = pointerEvents;\n  }\n\n  const hasTouchableProperty =\n    disabled != null ||\n    onPress ||\n    onPressIn ||\n    onPressOut ||\n    onLongPress ||\n    delayPressIn ||\n    delayPressOut ||\n    delayLongPress;\n\n  if (hasTouchableProperty) {\n    responsible = true;\n    o.onResponderMove = ref.touchableHandleResponderMove;\n    o.onResponderGrant = ref.touchableHandleResponderGrant;\n    o.onResponderRelease = ref.touchableHandleResponderRelease;\n    o.onResponderTerminate = ref.touchableHandleResponderTerminate;\n    o.onStartShouldSetResponder = ref.touchableHandleStartShouldSetResponder;\n    o.onResponderTerminationRequest =\n      ref.touchableHandleResponderTerminationRequest;\n  }\n\n  if (responsible) {\n    o.responsible = true;\n  }\n\n  return o;\n}\n"]}