086f8250660cb2ce40e2a8255a238ac4
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var Image = require('Image');

var React = require('React');

var StyleSheet = require('StyleSheet');

var View = require('View');

var ensureComponentIsNative = require('ensureComponentIsNative');

var ImageBackground = function (_React$Component) {
  (0, _inherits2.default)(ImageBackground, _React$Component);

  function ImageBackground() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, ImageBackground);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ImageBackground)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this._viewRef = null;

    _this._captureRef = function (ref) {
      _this._viewRef = ref;
    };

    return _this;
  }

  (0, _createClass2.default)(ImageBackground, [{
    key: "setNativeProps",
    value: function setNativeProps(props) {
      var viewRef = this._viewRef;

      if (viewRef) {
        ensureComponentIsNative(viewRef);
        viewRef.setNativeProps(props);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          style = _this$props.style,
          imageStyle = _this$props.imageStyle,
          imageRef = _this$props.imageRef,
          props = (0, _objectWithoutProperties2.default)(_this$props, ["children", "style", "imageStyle", "imageRef"]);
      return React.createElement(View, {
        accessibilityIgnoresInvertColors: true,
        style: style,
        ref: this._captureRef
      }, React.createElement(Image, (0, _extends2.default)({}, props, {
        style: [StyleSheet.absoluteFill, {
          width: style.width,
          height: style.height
        }, imageStyle],
        ref: imageRef
      })), children);
    }
  }]);
  return ImageBackground;
}(React.Component);

module.exports = ImageBackground;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkltYWdlQmFja2dyb3VuZC5qcyJdLCJuYW1lcyI6WyJJbWFnZSIsInJlcXVpcmUiLCJSZWFjdCIsIlN0eWxlU2hlZXQiLCJWaWV3IiwiZW5zdXJlQ29tcG9uZW50SXNOYXRpdmUiLCJJbWFnZUJhY2tncm91bmQiLCJfdmlld1JlZiIsIl9jYXB0dXJlUmVmIiwicmVmIiwicHJvcHMiLCJ2aWV3UmVmIiwic2V0TmF0aXZlUHJvcHMiLCJjaGlsZHJlbiIsInN0eWxlIiwiaW1hZ2VTdHlsZSIsImltYWdlUmVmIiwiYWJzb2x1dGVGaWxsIiwid2lkdGgiLCJoZWlnaHQiLCJDb21wb25lbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFTQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxJQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLElBQU1FLFVBQVUsR0FBR0YsT0FBTyxDQUFDLFlBQUQsQ0FBMUI7O0FBQ0EsSUFBTUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFFQSxJQUFNSSx1QkFBdUIsR0FBR0osT0FBTyxDQUFDLHlCQUFELENBQXZDOztJQTBCTUssZTs7Ozs7Ozs7Ozs7Ozs7O1VBVUpDLFEsR0FBMkMsSTs7VUFFM0NDLFcsR0FBYyxVQUFBQyxHQUFHLEVBQUk7QUFDbkIsWUFBS0YsUUFBTCxHQUFnQkUsR0FBaEI7QUFDRCxLOzs7Ozs7O21DQWJjQyxLLEVBQWU7QUFFNUIsVUFBTUMsT0FBTyxHQUFHLEtBQUtKLFFBQXJCOztBQUNBLFVBQUlJLE9BQUosRUFBYTtBQUNYTixRQUFBQSx1QkFBdUIsQ0FBQ00sT0FBRCxDQUF2QjtBQUNBQSxRQUFBQSxPQUFPLENBQUNDLGNBQVIsQ0FBdUJGLEtBQXZCO0FBQ0Q7QUFDRjs7OzZCQVFRO0FBQUEsd0JBQ21ELEtBQUtBLEtBRHhEO0FBQUEsVUFDQUcsUUFEQSxlQUNBQSxRQURBO0FBQUEsVUFDVUMsS0FEVixlQUNVQSxLQURWO0FBQUEsVUFDaUJDLFVBRGpCLGVBQ2lCQSxVQURqQjtBQUFBLFVBQzZCQyxRQUQ3QixlQUM2QkEsUUFEN0I7QUFBQSxVQUMwQ04sS0FEMUM7QUFHUCxhQUNFLG9CQUFDLElBQUQ7QUFDRSxRQUFBLGdDQUFnQyxFQUFFLElBRHBDO0FBRUUsUUFBQSxLQUFLLEVBQUVJLEtBRlQ7QUFHRSxRQUFBLEdBQUcsRUFBRSxLQUFLTjtBQUhaLFNBSUUsb0JBQUMsS0FBRCw2QkFDTUUsS0FETjtBQUVFLFFBQUEsS0FBSyxFQUFFLENBQ0xQLFVBQVUsQ0FBQ2MsWUFETixFQUVMO0FBUUVDLFVBQUFBLEtBQUssRUFBRUosS0FBSyxDQUFDSSxLQVJmO0FBU0VDLFVBQUFBLE1BQU0sRUFBRUwsS0FBSyxDQUFDSztBQVRoQixTQUZLLEVBYUxKLFVBYkssQ0FGVDtBQWlCRSxRQUFBLEdBQUcsRUFBRUM7QUFqQlAsU0FKRixFQXVCR0gsUUF2QkgsQ0FERjtBQTJCRDs7O0VBOUMyQlgsS0FBSyxDQUFDa0IsUzs7QUFpRHBDQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJoQixlQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3dcbiAqIEBmb3JtYXRcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBJbWFnZSA9IHJlcXVpcmUoJ0ltYWdlJyk7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ1JlYWN0Jyk7XG5jb25zdCBTdHlsZVNoZWV0ID0gcmVxdWlyZSgnU3R5bGVTaGVldCcpO1xuY29uc3QgVmlldyA9IHJlcXVpcmUoJ1ZpZXcnKTtcblxuY29uc3QgZW5zdXJlQ29tcG9uZW50SXNOYXRpdmUgPSByZXF1aXJlKCdlbnN1cmVDb21wb25lbnRJc05hdGl2ZScpO1xuXG4vKipcbiAqIFZlcnkgc2ltcGxlIGRyb3AtaW4gcmVwbGFjZW1lbnQgZm9yIDxJbWFnZT4gd2hpY2ggc3VwcG9ydHMgbmVzdGluZyB2aWV3cy5cbiAqXG4gKiBgYGBSZWFjdE5hdGl2ZVdlYlBsYXllclxuICogaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbiAqIGltcG9ydCB7IEFwcFJlZ2lzdHJ5LCBWaWV3LCBJbWFnZUJhY2tncm91bmQsIFRleHQgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuICpcbiAqIGNsYXNzIERpc3BsYXlBbkltYWdlQmFja2dyb3VuZCBleHRlbmRzIENvbXBvbmVudCB7XG4gKiAgIHJlbmRlcigpIHtcbiAqICAgICByZXR1cm4gKFxuICogICAgICAgPEltYWdlQmFja2dyb3VuZFxuICogICAgICAgICBzdHlsZT17e3dpZHRoOiA1MCwgaGVpZ2h0OiA1MH19XG4gKiAgICAgICAgIHNvdXJjZT17e3VyaTogJ2h0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0LW5hdGl2ZS9pbWcvb3BlbmdyYXBoLnBuZyd9fVxuICogICAgICAgPlxuICogICAgICAgICA8VGV4dD5SZWFjdDwvVGV4dD5cbiAqICAgICAgIDwvSW1hZ2VCYWNrZ3JvdW5kPlxuICogICAgICk7XG4gKiAgIH1cbiAqIH1cbiAqXG4gKiAvLyBBcHAgcmVnaXN0cmF0aW9uIGFuZCByZW5kZXJpbmdcbiAqIEFwcFJlZ2lzdHJ5LnJlZ2lzdGVyQ29tcG9uZW50KCdEaXNwbGF5QW5JbWFnZUJhY2tncm91bmQnLCAoKSA9PiBEaXNwbGF5QW5JbWFnZUJhY2tncm91bmQpO1xuICogYGBgXG4gKi9cbmNsYXNzIEltYWdlQmFja2dyb3VuZCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDwkRmxvd0ZpeE1lUHJvcHM+IHtcbiAgc2V0TmF0aXZlUHJvcHMocHJvcHM6IE9iamVjdCkge1xuICAgIC8vIFdvcmstYXJvdW5kIGZsb3dcbiAgICBjb25zdCB2aWV3UmVmID0gdGhpcy5fdmlld1JlZjtcbiAgICBpZiAodmlld1JlZikge1xuICAgICAgZW5zdXJlQ29tcG9uZW50SXNOYXRpdmUodmlld1JlZik7XG4gICAgICB2aWV3UmVmLnNldE5hdGl2ZVByb3BzKHByb3BzKTtcbiAgICB9XG4gIH1cblxuICBfdmlld1JlZjogP1JlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFZpZXc+ID0gbnVsbDtcblxuICBfY2FwdHVyZVJlZiA9IHJlZiA9PiB7XG4gICAgdGhpcy5fdmlld1JlZiA9IHJlZjtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge2NoaWxkcmVuLCBzdHlsZSwgaW1hZ2VTdHlsZSwgaW1hZ2VSZWYsIC4uLnByb3BzfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFZpZXdcbiAgICAgICAgYWNjZXNzaWJpbGl0eUlnbm9yZXNJbnZlcnRDb2xvcnM9e3RydWV9XG4gICAgICAgIHN0eWxlPXtzdHlsZX1cbiAgICAgICAgcmVmPXt0aGlzLl9jYXB0dXJlUmVmfT5cbiAgICAgICAgPEltYWdlXG4gICAgICAgICAgey4uLnByb3BzfVxuICAgICAgICAgIHN0eWxlPXtbXG4gICAgICAgICAgICBTdHlsZVNoZWV0LmFic29sdXRlRmlsbCxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgLy8gVGVtcG9yYXJ5IFdvcmthcm91bmQ6XG4gICAgICAgICAgICAgIC8vIEN1cnJlbnQgKGltcGVyZmVjdCB5ZXQpIGltcGxlbWVudGF0aW9uIG9mIDxJbWFnZT4gb3ZlcndyaXRlcyB3aWR0aCBhbmQgaGVpZ2h0IHN0eWxlc1xuICAgICAgICAgICAgICAvLyAod2hpY2ggaXMgbm90IHF1aXRlIGNvcnJlY3QpLCBhbmQgdGhlc2Ugc3R5bGVzIGNvbmZsaWN0IHdpdGggZXhwbGljaXRseSBzZXQgc3R5bGVzXG4gICAgICAgICAgICAgIC8vIG9mIDxJbWFnZUJhY2tncm91bmQ+IGFuZCB3aXRoIG91ciBpbnRlcm5hbCBsYXlvdXQgbW9kZWwgaGVyZS5cbiAgICAgICAgICAgICAgLy8gU28sIHdlIGhhdmUgdG8gcHJveHkvcmVhcHBseSB0aGVzZSBzdHlsZXMgZXhwbGljaXRseSBmb3IgYWN0dWFsIDxJbWFnZT4gY29tcG9uZW50LlxuICAgICAgICAgICAgICAvLyBUaGlzIHdvcmthcm91bmQgc2hvdWxkIGJlIHJlbW92ZWQgYWZ0ZXIgaW1wbGVtZW50aW5nIHByb3BlciBzdXBwb3J0IG9mXG4gICAgICAgICAgICAgIC8vIGludHJpbnNpYyBjb250ZW50IHNpemUgb2YgdGhlIDxJbWFnZT4uXG4gICAgICAgICAgICAgIHdpZHRoOiBzdHlsZS53aWR0aCxcbiAgICAgICAgICAgICAgaGVpZ2h0OiBzdHlsZS5oZWlnaHQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW1hZ2VTdHlsZSxcbiAgICAgICAgICBdfVxuICAgICAgICAgIHJlZj17aW1hZ2VSZWZ9XG4gICAgICAgIC8+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvVmlldz5cbiAgICApO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gSW1hZ2VCYWNrZ3JvdW5kO1xuIl19