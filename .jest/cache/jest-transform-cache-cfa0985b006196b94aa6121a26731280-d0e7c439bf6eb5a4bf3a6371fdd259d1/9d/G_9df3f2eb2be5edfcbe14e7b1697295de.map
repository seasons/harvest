{"version":3,"sources":["G.tsx"],"names":["G","Shape","displayName","setNativeProps","matrix","props","prop","RNSVGGroup"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,aAAA,GAAA,uBAAA,CAAA,OAAA,+BAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,8BAAA;;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,mCAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,WAAA,CAAA;;;;AAEqBA,IAAAA,C;;;;;;;;;;;;;;;;UAGnBG,c,GAAiB,UAAA,KAAA,EAIZ;AACH,UAAMC,MAAM,GAAG,CAACC,KAAK,CAAN,MAAA,IAAiB,CAAA,GAAA,iBAAA,CAAA,OAAA,EAAhC,KAAgC,CAAhC;;AACA,UAAA,MAAA,EAAY;AACVA,QAAAA,KAAK,CAALA,MAAAA,GAAAA,MAAAA;AAEF;;AAAA,MAAA,KAAA,CAAA,IAAA,IAAa,KAAA,CAAA,IAAA,CAAA,cAAA,CAAb,KAAa,CAAb;;;;;;;;6BAGO;AAAA,UACCA,KADD,GAAA,KAAA,KAAA;AAEP,UAAMC,IAAI,GAAG,CAAA,GAAA,aAAA,CAAA,cAAA,EAAb,KAAa,CAAb;AACA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,UAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AACE,QAAA,GAAG,EAAE,KADP;AAAA,OAAA,EAEM,CAAA,GAAA,aAAA,CAAA,OAAA,EAAA,IAAA,EAFN,IAEM,CAFN,EAAA;AAGE,QAAA,IAAI,EAAE,CAAA,GAAA,YAAA,CAAA,WAAA,EAHR,IAGQ,CAHR;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,CAAA,EAKGD,KAAK,CANV,QACE,CADF;;;;EAlB2BJ,OAAAA,CAAAA,O,CAAVD;;;AAAAA,C,CACZE,WADYF,GACE,GADFA;AA8Bd,IAAMO,UAAU,GAAG,CAAA,GAAA,YAAA,CAAA,sBAAA,EAAnB,YAAmB,CAAnB","sourcesContent":["import React from 'react';\nimport { requireNativeComponent } from 'react-native';\nimport extractProps, { propsAndStyles } from '../lib/extract/extractProps';\nimport { extractFont } from '../lib/extract/extractText';\nimport extractTransform from '../lib/extract/extractTransform';\nimport { TransformProps } from '../lib/extract/types';\nimport Shape from './Shape';\n\nexport default class G extends Shape<{}> {\n  static displayName = 'G';\n\n  setNativeProps = (\n    props: Object & {\n      matrix?: number[];\n    } & TransformProps,\n  ) => {\n    const matrix = !props.matrix && extractTransform(props);\n    if (matrix) {\n      props.matrix = matrix;\n    }\n    this.root && this.root.setNativeProps(props);\n  };\n\n  render() {\n    const { props } = this;\n    const prop = propsAndStyles(props);\n    return (\n      <RNSVGGroup\n        ref={this.refMethod}\n        {...extractProps(prop, this)}\n        font={extractFont(prop)}\n      >\n        {props.children}\n      </RNSVGGroup>\n    );\n  }\n}\n\nexport const RNSVGGroup = requireNativeComponent('RNSVGGroup');\n"]}