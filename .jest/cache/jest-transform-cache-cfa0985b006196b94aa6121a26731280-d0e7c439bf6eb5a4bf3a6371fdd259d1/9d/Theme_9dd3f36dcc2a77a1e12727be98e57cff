e39e952c5b2afbc39afa383382267ac4
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Theme = exports.themeProps = exports.breakpoints = void 0;

var _react = _interopRequireDefault(require("react"));

var _Typography = require("./Typography");

var _native = require("styled-components/native");

var breakpoints = {
  xl: 1192,
  lg: 1024,
  md: 900,
  sm: 768,
  xs: 767
};
exports.breakpoints = breakpoints;
var themeProps = {
  borders: ["1px solid", "2px solid"],
  colors: {
    white: "#fff",
    black: "#000",
    green: "#44524A",
    lightGreen: "#989F9B",
    lightGray: "#DFDFDF",
    gray: "#7F7F7F",
    darkGray: "#303030",
    blue: "#2B50DF"
  },
  fontFamily: _Typography.fontFamily,
  space: {
    0.3: 3,
    0.5: 5,
    1: 10,
    2: 20,
    3: 30,
    4: 40,
    6: 60,
    9: 90,
    12: 120,
    18: 180
  },
  typeSizes: {
    "0": {
      fontSize: 14,
      lineHeight: 20
    },
    "1": {
      fontSize: 16,
      lineHeight: 24
    },
    "2": {
      fontSize: 18,
      lineHeight: 20
    },
    "3": {
      fontSize: 24,
      lineHeight: 32
    },
    "4": {
      fontSize: 40,
      lineHeight: 40
    }
  }
};
exports.themeProps = themeProps;

var Theme = function Theme(props) {
  return _react.default.createElement(_native.ThemeProvider, {
    theme: themeProps
  }, props.children);
};

exports.Theme = Theme;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRoZW1lLnRzeCJdLCJuYW1lcyI6WyJicmVha3BvaW50cyIsInhsIiwibGciLCJtZCIsInNtIiwieHMiLCJ0aGVtZVByb3BzIiwiYm9yZGVycyIsImNvbG9ycyIsIndoaXRlIiwiYmxhY2siLCJncmVlbiIsImxpZ2h0R3JlZW4iLCJsaWdodEdyYXkiLCJncmF5IiwiZGFya0dyYXkiLCJibHVlIiwiZm9udEZhbWlseSIsInNwYWNlIiwidHlwZVNpemVzIiwiZm9udFNpemUiLCJsaW5lSGVpZ2h0IiwiVGhlbWUiLCJwcm9wcyIsImNoaWxkcmVuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBS08sSUFBTUEsV0FBVyxHQUFHO0FBRXpCQyxFQUFBQSxFQUFFLEVBQUUsSUFGcUI7QUFJekJDLEVBQUFBLEVBQUUsRUFBRSxJQUpxQjtBQU16QkMsRUFBQUEsRUFBRSxFQUFFLEdBTnFCO0FBUXpCQyxFQUFBQSxFQUFFLEVBQUUsR0FScUI7QUFVekJDLEVBQUFBLEVBQUUsRUFBRTtBQVZxQixDQUFwQjs7QUFlQSxJQUFNQyxVQUFVLEdBQUc7QUFFeEJDLEVBQUFBLE9BQU8sRUFBRSxDQUFDLFdBQUQsRUFBYyxXQUFkLENBRmU7QUFJeEJDLEVBQUFBLE1BQU0sRUFBRTtBQUNOQyxJQUFBQSxLQUFLLEVBQUUsTUFERDtBQUVOQyxJQUFBQSxLQUFLLEVBQUUsTUFGRDtBQUdOQyxJQUFBQSxLQUFLLEVBQUUsU0FIRDtBQUlOQyxJQUFBQSxVQUFVLEVBQUUsU0FKTjtBQUtOQyxJQUFBQSxTQUFTLEVBQUUsU0FMTDtBQU1OQyxJQUFBQSxJQUFJLEVBQUUsU0FOQTtBQU9OQyxJQUFBQSxRQUFRLEVBQUUsU0FQSjtBQVFOQyxJQUFBQSxJQUFJLEVBQUU7QUFSQSxHQUpnQjtBQWV4QkMsRUFBQUEsVUFBVSxFQUFWQSxzQkFmd0I7QUFpQnhCQyxFQUFBQSxLQUFLLEVBQUU7QUFHTCxTQUFLLENBSEE7QUFLTCxTQUFLLENBTEE7QUFPTCxPQUFHLEVBUEU7QUFTTCxPQUFHLEVBVEU7QUFXTCxPQUFHLEVBWEU7QUFhTCxPQUFHLEVBYkU7QUFlTCxPQUFHLEVBZkU7QUFpQkwsT0FBRyxFQWpCRTtBQW1CTCxRQUFJLEdBbkJDO0FBcUJMLFFBQUk7QUFyQkMsR0FqQmlCO0FBeUN4QkMsRUFBQUEsU0FBUyxFQUFFO0FBRVQsU0FBSztBQUNIQyxNQUFBQSxRQUFRLEVBQUUsRUFEUDtBQUVIQyxNQUFBQSxVQUFVLEVBQUU7QUFGVCxLQUZJO0FBT1QsU0FBSztBQUNIRCxNQUFBQSxRQUFRLEVBQUUsRUFEUDtBQUVIQyxNQUFBQSxVQUFVLEVBQUU7QUFGVCxLQVBJO0FBWVQsU0FBSztBQUNIRCxNQUFBQSxRQUFRLEVBQUUsRUFEUDtBQUVIQyxNQUFBQSxVQUFVLEVBQUU7QUFGVCxLQVpJO0FBaUJULFNBQUs7QUFDSEQsTUFBQUEsUUFBUSxFQUFFLEVBRFA7QUFFSEMsTUFBQUEsVUFBVSxFQUFFO0FBRlQsS0FqQkk7QUFzQlQsU0FBSztBQUNIRCxNQUFBQSxRQUFRLEVBQUUsRUFEUDtBQUVIQyxNQUFBQSxVQUFVLEVBQUU7QUFGVDtBQXRCSTtBQXpDYSxDQUFuQjs7O0FBc0VBLElBQU1DLEtBQUssR0FBRyxTQUFSQSxLQUFRLENBQUFDLEtBQUssRUFBSTtBQUM1QixTQUFPLDZCQUFDLHFCQUFEO0FBQWUsSUFBQSxLQUFLLEVBQUVqQjtBQUF0QixLQUFtQ2lCLEtBQUssQ0FBQ0MsUUFBekMsQ0FBUDtBQUNELENBRk0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IGZvbnRGYW1pbHkgfSBmcm9tIFwiLi9UeXBvZ3JhcGh5XCJcbmltcG9ydCB7IFRoZW1lUHJvdmlkZXIgfSBmcm9tIFwic3R5bGVkLWNvbXBvbmVudHMvbmF0aXZlXCJcblxuLyoqXG4gKiBBIGxpc3Qgb2YgYnJlYWtwb2ludHMgYWNjZXNzaWJsZSBieSBrZXkvdmFsdWUuXG4gKi9cbmV4cG9ydCBjb25zdCBicmVha3BvaW50cyA9IHtcbiAgLyoqIEFib3ZlIDExOTIgKi9cbiAgeGw6IDExOTIsXG4gIC8qKiBCZXR3ZWVuIDEwMjQgYW5kICAxMTkxICovXG4gIGxnOiAxMDI0LFxuICAvKiogQmV0d2VlbiA5MDAgYW5kIDEwMjMgKi9cbiAgbWQ6IDkwMCxcbiAgLyoqIEJldHdlZW4gNzY4IGFuZCAgODk5ICovXG4gIHNtOiA3NjgsXG4gIC8qKiBCZWxvdyA3NjcgKi9cbiAgeHM6IDc2Nyxcbn1cblxuLyoqXG4gKi9cbmV4cG9ydCBjb25zdCB0aGVtZVByb3BzID0ge1xuICAvKiogQm9yZGVyIHZhcmlhdGlvbnMgKi9cbiAgYm9yZGVyczogW1wiMXB4IHNvbGlkXCIsIFwiMnB4IHNvbGlkXCJdLFxuXG4gIGNvbG9yczoge1xuICAgIHdoaXRlOiBcIiNmZmZcIixcbiAgICBibGFjazogXCIjMDAwXCIsXG4gICAgZ3JlZW46IFwiIzQ0NTI0QVwiLFxuICAgIGxpZ2h0R3JlZW46IFwiIzk4OUY5QlwiLFxuICAgIGxpZ2h0R3JheTogXCIjREZERkRGXCIsXG4gICAgZ3JheTogXCIjN0Y3RjdGXCIsXG4gICAgZGFya0dyYXk6IFwiIzMwMzAzMFwiLFxuICAgIGJsdWU6IFwiIzJCNTBERlwiLFxuICB9LFxuXG4gIGZvbnRGYW1pbHksXG5cbiAgc3BhY2U6IHtcbiAgICAvLyB1bml0OiBweCB2YWx1ZVxuICAgIC8qKiBFcXVpdmFsZW50IHRvIDNweCAgKi9cbiAgICAwLjM6IDMsXG4gICAgLyoqIEVxdWl2YWxlbnQgdG8gNXB4ICAqL1xuICAgIDAuNTogNSxcbiAgICAvKiogRXF1aXZhbGVudCB0byAxMHB4ICAqL1xuICAgIDE6IDEwLFxuICAgIC8qKiBFcXVpdmFsZW50IHRvIDIwcHggICovXG4gICAgMjogMjAsXG4gICAgLyoqIEVxdWl2YWxlbnQgdG8gMzBweCAgKi9cbiAgICAzOiAzMCxcbiAgICAvKiogRXF1aXZhbGVudCB0byA0MHB4ICAqL1xuICAgIDQ6IDQwLFxuICAgIC8qKiBFcXVpdmFsZW50IHRvIDYwcHggICovXG4gICAgNjogNjAsXG4gICAgLyoqIEVxdWl2YWxlbnQgdG8gOTBweCAgKi9cbiAgICA5OiA5MCxcbiAgICAvKiogRXF1aXZhbGVudCB0byAxMjBweCAgKi9cbiAgICAxMjogMTIwLFxuICAgIC8qKiBFcXVpdmFsZW50IHRvIDE4MHB4ICAqL1xuICAgIDE4OiAxODAsXG4gIH0sXG5cbiAgdHlwZVNpemVzOiB7XG4gICAgLyoqIEVxdWl2YWxlbnQgdG8gMTRweCBzaXplIC8gMjBweCBsaW5lLWhlaWdodCAgKi9cbiAgICBcIjBcIjoge1xuICAgICAgZm9udFNpemU6IDE0LFxuICAgICAgbGluZUhlaWdodDogMjAsXG4gICAgfSxcbiAgICAvKiogRXF1aXZhbGVudCB0byAxNnB4IHNpemUgLyAyNHB4IGxpbmUtaGVpZ2h0ICAqL1xuICAgIFwiMVwiOiB7XG4gICAgICBmb250U2l6ZTogMTYsXG4gICAgICBsaW5lSGVpZ2h0OiAyNCxcbiAgICB9LFxuICAgIC8qKiBFcXVpdmFsZW50IHRvIDE4cHggc2l6ZSAvIDIwcHggbGluZS1oZWlnaHQgICovXG4gICAgXCIyXCI6IHtcbiAgICAgIGZvbnRTaXplOiAxOCxcbiAgICAgIGxpbmVIZWlnaHQ6IDIwLFxuICAgIH0sXG4gICAgLyoqIEVxdWl2YWxlbnQgdG8gMjRweCBzaXplIC8gMzJweCBsaW5lLWhlaWdodCAgKi9cbiAgICBcIjNcIjoge1xuICAgICAgZm9udFNpemU6IDI0LFxuICAgICAgbGluZUhlaWdodDogMzIsXG4gICAgfSxcbiAgICAvKiogRXF1aXZhbGVudCB0byA0MHB4IHNpemUgLyA0MHB4IGxpbmUtaGVpZ2h0ICAqL1xuICAgIFwiNFwiOiB7XG4gICAgICBmb250U2l6ZTogNDAsXG4gICAgICBsaW5lSGVpZ2h0OiA0MCxcbiAgICB9LFxuICB9LFxufVxuXG5leHBvcnQgY29uc3QgVGhlbWUgPSBwcm9wcyA9PiB7XG4gIHJldHVybiA8VGhlbWVQcm92aWRlciB0aGVtZT17dGhlbWVQcm9wc30+e3Byb3BzLmNoaWxkcmVufTwvVGhlbWVQcm92aWRlcj5cbn1cblxuLyoqIEFsbCBhdmFpbGFibGUgcHggc3BhY2luZyBtYXBzICovXG5leHBvcnQgdHlwZSBTcGFjaW5nVW5pdCA9IGtleW9mIHR5cGVvZiB0aGVtZVByb3BzW1wic3BhY2VcIl1cbi8qKiBBbGwgYXZhaWxhYmxlIGNvbG9yIGtleXMgKi9cbmV4cG9ydCB0eXBlIENvbG9yID0ga2V5b2YgdHlwZW9mIHRoZW1lUHJvcHNbXCJjb2xvcnNcIl1cbi8qKiBBbGwgYXZhaWxhYmxlIHdpZHRoIGJyZWFrcG9pbnQgKi9cbi8vIGV4cG9ydCB0eXBlIEJyZWFrcG9pbnQgPSBrZXlvZiB0eXBlb2YgYnJlYWtwb2ludHNcblxuLyoqIEFsbCBhdmFpbGFibGUgdHlwZSBzaXplcyAqL1xuZXhwb3J0IHR5cGUgVHlwZVNpemVzID0gdHlwZW9mIHRoZW1lUHJvcHMudHlwZVNpemVzXG4vKiogQWxsIGF2YWlsYWJsZSBzaXplcyBmb3Igb3VyIHNhbnMgZm9udCAqL1xuZXhwb3J0IHR5cGUgU2Fuc1NpemUgPSBrZXlvZiBUeXBlU2l6ZXMgfCBBcnJheTxrZXlvZiBUeXBlU2l6ZXM+XG4iXX0=