{"version":3,"sources":["Radio.tsx"],"names":["Radio","props","children","disabled","name","_onSelect","onSelect","selected","value","label","others","BorderedRadio","Box","Container","Flex","InnerCircle","RadioButton","borders","styledSpace"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BO,IAAMA,KAA4B,GAAG,SAA/BA,KAA+B,CAAAC,KAAK,EAAI;AAAA,MAC3CC,QAD2C,GAC0CD,KAD1C,CAC3CC,QAD2C;AAAA,MACjCC,QADiC,GAC0CF,KAD1C,CACjCE,QADiC;AAAA,MACvBC,IADuB,GAC0CH,KAD1C,CACvBG,IADuB;AAAA,MACPC,SADO,GAC0CJ,KAD1C,CACjBK,QADiB;AAAA,MACIC,QADJ,GAC0CN,KAD1C,CACIM,QADJ;AAAA,MACcC,KADd,GAC0CP,KAD1C,CACcO,KADd;AAAA,MACqBC,KADrB,GAC0CR,KAD1C,CACqBQ,KADrB;AAAA,MAC+BC,MAD/B,0CAC0CT,KAD1C;;AAKnD,MAAMK,QAAQ,GAAGD,SAAS,IAAI,uBAASA,SAAT,EAAoB,CAApB,CAA9B;;AAEA,SACE,6BAAC,UAAD;AAAM,IAAA,aAAa,EAAC,KAApB;AAA0B,IAAA,UAAU,EAAC;AAArC,KACE,6BAAC,qCAAD;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAM,CAACF,QAAD,IAAaG,QAAb,IAAyBA,QAAQ,CAAC;AAAEC,QAAAA,QAAQ,EAAE,CAACA,QAAb;AAAuBC,QAAAA,KAAK,EAALA;AAAvB,OAAD,CAAvC;AAAA;AAAnC,KACE,6BAAC,SAAD;AAAW,IAAA,QAAQ,EAAEL,QAArB;AAA+B,IAAA,UAAU,EAAC,QAA1C;AAAmD,IAAA,QAAQ,EAAEI;AAA7D,KAA2EG,MAA3E,GACE,6BAAC,WAAD;AAAa,IAAA,IAAI,EAAC,cAAlB;AAAiC,IAAA,MAAM,EAAE,CAAzC;AAA4C,IAAA,EAAE,EAAE,CAAhD;AAAmD,IAAA,QAAQ,EAAEH,QAA7D;AAAuE,IAAA,QAAQ,EAAEJ;AAAjF,KACGI,QAAQ,IAAI,6BAAC,WAAD,OADf,CADF,CADF,CADF,EAQG,CAAC,CAACE,KAAF,IACC,6BAAC,UAAD;AAAM,IAAA,aAAa,EAAC,KAApB;AAA0B,IAAA,UAAU,EAAC,QAArC;AAA8C,IAAA,EAAE,EAAE;AAAlD,KACE,6BAAC,MAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAe,IAAA,KAAK,EAAC;AAArB,KACGA,KADH,CADF,CATJ,CADF;AAkBD,CAzBM;;;AA8BA,IAAME,aAAa,GAAG,qBAAOC,QAAP,CAAH,oBACb,kBAAM,CAAN,CADa,EAEJ,kBAAM,MAAN,CAFI,CAAnB;;AAoBP,IAAMC,SAAS,GAAG,qBAAOC,UAAP,CAAH,oBAAf;AAIA,IAAMC,WAAW,GAAG,qBAAOH,QAAP,CAAH,qBAOK,kBAAM,MAAN,CAPL,CAAjB;AAUA,IAAMI,WAAW,GAAG,qBAAOJ,QAAP,CAAH,qBACbK,qBADa,EAEbC,mBAFa,EAGC,kBAAM,MAAN,CAHD,CAAjB","sourcesContent":["import debounce from \"lodash/debounce\"\nimport React from \"react\"\nimport styled from \"styled-components/native\"\nimport { Flex, FlexProps } from \"./Flex\"\nimport { color, space } from \"App/Utils\"\n\nimport { BorderProps, borders, SizeProps, space as styledSpace, SpaceProps } from \"styled-system\"\nimport { Box } from \"./Box\"\nimport { Sans } from \".\"\nimport { TouchableWithoutFeedback } from \"react-native\"\n\n/**\n * Spec: zpl.io/bAvnwlB\n */\n\nexport interface RadioProps extends FlexProps {\n  /** Disable interactions */\n  disabled?: boolean\n  /** Select the button on render. If the Radio is inside a RadioGroup, use RadioGroup.defaultValue instead. */\n  selected?: boolean\n  /** Callback when selected */\n  onSelect?: (selected: { selected: boolean; value: string }) => void\n  /** Value of radio button */\n  value?: string\n  /** Name of the radio button */\n  name?: string\n  /** The label content, if not specified the children will be used  */\n  label?: React.ReactNode\n}\n\nexport interface RadioToggleProps extends RadioProps, BorderProps, SizeProps, SpaceProps {}\n\n/**\n * A Radio button\n *\n * Spec: zpl.io/bAvnwlB\n */\nexport const Radio: React.SFC<RadioProps> = props => {\n  const { children, disabled, name, onSelect: _onSelect, selected, value, label, ...others } = props\n\n  // Ensures that only one call to `onSelect` occurs, regardless of whether the\n  // user clicks the radio element or the label.\n  const onSelect = _onSelect && debounce(_onSelect, 0)\n\n  return (\n    <Flex flexDirection=\"row\" alignItems=\"center\">\n      <TouchableWithoutFeedback onPress={() => !disabled && onSelect && onSelect({ selected: !selected, value })}>\n        <Container disabled={disabled} alignItems=\"center\" selected={selected} {...others}>\n          <RadioButton role=\"presentation\" border={1} mr={1} selected={selected} disabled={disabled}>\n            {selected && <InnerCircle />}\n          </RadioButton>\n        </Container>\n      </TouchableWithoutFeedback>\n      {!!label && (\n        <Flex flexDirection=\"row\" alignItems=\"center\" ml={1}>\n          <Sans size=\"2\" color=\"black\">\n            {label}\n          </Sans>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\n/**\n * A radio button with a border\n */\nexport const BorderedRadio = styled(Box)<RadioProps>`\n  padding: ${space(2)}px;\n  border: 1px solid ${color(\"gray\")};\n  transition: background-color 0.14s ease-in-out;\n  :not(:first-child) {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n  :not(:last-child) {\n    border-bottom: 0;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n`\n\ninterface ContainerProps extends FlexProps {\n  disabled: boolean\n  selected: boolean\n}\n\nconst Container = styled(Flex)<ContainerProps>`\n  align-items: flex-start;\n`\n\nconst InnerCircle = styled(Box)`\n  width: 14;\n  height: 14;\n  border-radius: 100;\n  position: relative;\n  left: 4;\n  top: 4;\n  background-color: ${color(\"blue\")};\n`\n\nconst RadioButton = styled(Box)<RadioToggleProps>`\n  ${borders};\n  ${styledSpace};\n  border-color: ${color(\"gray\")};\n  border-width: 1;\n  width: 24;\n  height: 24;\n  border-radius: 100;\n  min-width: 24;\n  min-height: 24;\n`\n"]}