402a873938c568c3a04cc6613e93fde1
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var DeprecatedImageStylePropTypes = require('DeprecatedImageStylePropTypes');

var TextStylePropTypes = require('TextStylePropTypes');

var DeprecatedViewStylePropTypes = require('DeprecatedViewStylePropTypes');

var processColor = require('processColor');

var processTransform = require('processTransform');

var sizesDiffer = require('sizesDiffer');

var ReactNativeStyleAttributes = {};

for (var _i = 0, _Object$keys = Object.keys(_objectSpread({}, DeprecatedViewStylePropTypes, {}, TextStylePropTypes, {}, DeprecatedImageStylePropTypes)); _i < _Object$keys.length; _i++) {
  var attributeName = _Object$keys[_i];
  ReactNativeStyleAttributes[attributeName] = true;
}

ReactNativeStyleAttributes.transform = {
  process: processTransform
};
ReactNativeStyleAttributes.shadowOffset = {
  diff: sizesDiffer
};
var colorAttributes = {
  process: processColor
};
ReactNativeStyleAttributes.backgroundColor = colorAttributes;
ReactNativeStyleAttributes.borderBottomColor = colorAttributes;
ReactNativeStyleAttributes.borderColor = colorAttributes;
ReactNativeStyleAttributes.borderLeftColor = colorAttributes;
ReactNativeStyleAttributes.borderRightColor = colorAttributes;
ReactNativeStyleAttributes.borderTopColor = colorAttributes;
ReactNativeStyleAttributes.borderStartColor = colorAttributes;
ReactNativeStyleAttributes.borderEndColor = colorAttributes;
ReactNativeStyleAttributes.color = colorAttributes;
ReactNativeStyleAttributes.shadowColor = colorAttributes;
ReactNativeStyleAttributes.textDecorationColor = colorAttributes;
ReactNativeStyleAttributes.tintColor = colorAttributes;
ReactNativeStyleAttributes.textShadowColor = colorAttributes;
ReactNativeStyleAttributes.overlayColor = colorAttributes;
module.exports = ReactNativeStyleAttributes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzLmpzIl0sIm5hbWVzIjpbIkRlcHJlY2F0ZWRJbWFnZVN0eWxlUHJvcFR5cGVzIiwicmVxdWlyZSIsIlRleHRTdHlsZVByb3BUeXBlcyIsIkRlcHJlY2F0ZWRWaWV3U3R5bGVQcm9wVHlwZXMiLCJwcm9jZXNzQ29sb3IiLCJwcm9jZXNzVHJhbnNmb3JtIiwic2l6ZXNEaWZmZXIiLCJSZWFjdE5hdGl2ZVN0eWxlQXR0cmlidXRlcyIsIk9iamVjdCIsImtleXMiLCJhdHRyaWJ1dGVOYW1lIiwidHJhbnNmb3JtIiwicHJvY2VzcyIsInNoYWRvd09mZnNldCIsImRpZmYiLCJjb2xvckF0dHJpYnV0ZXMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXJCb3R0b21Db2xvciIsImJvcmRlckNvbG9yIiwiYm9yZGVyTGVmdENvbG9yIiwiYm9yZGVyUmlnaHRDb2xvciIsImJvcmRlclRvcENvbG9yIiwiYm9yZGVyU3RhcnRDb2xvciIsImJvcmRlckVuZENvbG9yIiwiY29sb3IiLCJzaGFkb3dDb2xvciIsInRleHREZWNvcmF0aW9uQ29sb3IiLCJ0aW50Q29sb3IiLCJ0ZXh0U2hhZG93Q29sb3IiLCJvdmVybGF5Q29sb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7Ozs7OztBQUVBLElBQU1BLDZCQUE2QixHQUFHQyxPQUFPLENBQUMsK0JBQUQsQ0FBN0M7O0FBQ0EsSUFBTUMsa0JBQWtCLEdBQUdELE9BQU8sQ0FBQyxvQkFBRCxDQUFsQzs7QUFDQSxJQUFNRSw0QkFBNEIsR0FBR0YsT0FBTyxDQUFDLDhCQUFELENBQTVDOztBQUVBLElBQU1HLFlBQVksR0FBR0gsT0FBTyxDQUFDLGNBQUQsQ0FBNUI7O0FBQ0EsSUFBTUksZ0JBQWdCLEdBQUdKLE9BQU8sQ0FBQyxrQkFBRCxDQUFoQzs7QUFDQSxJQUFNSyxXQUFXLEdBQUdMLE9BQU8sQ0FBQyxhQUFELENBQTNCOztBQUVBLElBQU1NLDBCQUEwQixHQUFHLEVBQW5DOztBQUVBLGdDQUE0QkMsTUFBTSxDQUFDQyxJQUFQLG1CQUN2Qk4sNEJBRHVCLE1BRXZCRCxrQkFGdUIsTUFHdkJGLDZCQUh1QixFQUE1QixrQ0FJSTtBQUpDLE1BQU1VLGFBQWEsbUJBQW5CO0FBS0hILEVBQUFBLDBCQUEwQixDQUFDRyxhQUFELENBQTFCLEdBQTRDLElBQTVDO0FBQ0Q7O0FBRURILDBCQUEwQixDQUFDSSxTQUEzQixHQUF1QztBQUFDQyxFQUFBQSxPQUFPLEVBQUVQO0FBQVYsQ0FBdkM7QUFDQUUsMEJBQTBCLENBQUNNLFlBQTNCLEdBQTBDO0FBQUNDLEVBQUFBLElBQUksRUFBRVI7QUFBUCxDQUExQztBQUVBLElBQU1TLGVBQWUsR0FBRztBQUFDSCxFQUFBQSxPQUFPLEVBQUVSO0FBQVYsQ0FBeEI7QUFDQUcsMEJBQTBCLENBQUNTLGVBQTNCLEdBQTZDRCxlQUE3QztBQUNBUiwwQkFBMEIsQ0FBQ1UsaUJBQTNCLEdBQStDRixlQUEvQztBQUNBUiwwQkFBMEIsQ0FBQ1csV0FBM0IsR0FBeUNILGVBQXpDO0FBQ0FSLDBCQUEwQixDQUFDWSxlQUEzQixHQUE2Q0osZUFBN0M7QUFDQVIsMEJBQTBCLENBQUNhLGdCQUEzQixHQUE4Q0wsZUFBOUM7QUFDQVIsMEJBQTBCLENBQUNjLGNBQTNCLEdBQTRDTixlQUE1QztBQUNBUiwwQkFBMEIsQ0FBQ2UsZ0JBQTNCLEdBQThDUCxlQUE5QztBQUNBUiwwQkFBMEIsQ0FBQ2dCLGNBQTNCLEdBQTRDUixlQUE1QztBQUNBUiwwQkFBMEIsQ0FBQ2lCLEtBQTNCLEdBQW1DVCxlQUFuQztBQUNBUiwwQkFBMEIsQ0FBQ2tCLFdBQTNCLEdBQXlDVixlQUF6QztBQUNBUiwwQkFBMEIsQ0FBQ21CLG1CQUEzQixHQUFpRFgsZUFBakQ7QUFDQVIsMEJBQTBCLENBQUNvQixTQUEzQixHQUF1Q1osZUFBdkM7QUFDQVIsMEJBQTBCLENBQUNxQixlQUEzQixHQUE2Q2IsZUFBN0M7QUFDQVIsMEJBQTBCLENBQUNzQixZQUEzQixHQUEwQ2QsZUFBMUM7QUFFQWUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCeEIsMEJBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0IHN0cmljdC1sb2NhbFxuICogQGZsb3dcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IERlcHJlY2F0ZWRJbWFnZVN0eWxlUHJvcFR5cGVzID0gcmVxdWlyZSgnRGVwcmVjYXRlZEltYWdlU3R5bGVQcm9wVHlwZXMnKTtcbmNvbnN0IFRleHRTdHlsZVByb3BUeXBlcyA9IHJlcXVpcmUoJ1RleHRTdHlsZVByb3BUeXBlcycpO1xuY29uc3QgRGVwcmVjYXRlZFZpZXdTdHlsZVByb3BUeXBlcyA9IHJlcXVpcmUoJ0RlcHJlY2F0ZWRWaWV3U3R5bGVQcm9wVHlwZXMnKTtcblxuY29uc3QgcHJvY2Vzc0NvbG9yID0gcmVxdWlyZSgncHJvY2Vzc0NvbG9yJyk7XG5jb25zdCBwcm9jZXNzVHJhbnNmb3JtID0gcmVxdWlyZSgncHJvY2Vzc1RyYW5zZm9ybScpO1xuY29uc3Qgc2l6ZXNEaWZmZXIgPSByZXF1aXJlKCdzaXplc0RpZmZlcicpO1xuXG5jb25zdCBSZWFjdE5hdGl2ZVN0eWxlQXR0cmlidXRlcyA9IHt9O1xuXG5mb3IgKGNvbnN0IGF0dHJpYnV0ZU5hbWUgb2YgT2JqZWN0LmtleXMoe1xuICAuLi5EZXByZWNhdGVkVmlld1N0eWxlUHJvcFR5cGVzLFxuICAuLi5UZXh0U3R5bGVQcm9wVHlwZXMsXG4gIC4uLkRlcHJlY2F0ZWRJbWFnZVN0eWxlUHJvcFR5cGVzLFxufSkpIHtcbiAgUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXNbYXR0cmlidXRlTmFtZV0gPSB0cnVlO1xufVxuXG5SZWFjdE5hdGl2ZVN0eWxlQXR0cmlidXRlcy50cmFuc2Zvcm0gPSB7cHJvY2VzczogcHJvY2Vzc1RyYW5zZm9ybX07XG5SZWFjdE5hdGl2ZVN0eWxlQXR0cmlidXRlcy5zaGFkb3dPZmZzZXQgPSB7ZGlmZjogc2l6ZXNEaWZmZXJ9O1xuXG5jb25zdCBjb2xvckF0dHJpYnV0ZXMgPSB7cHJvY2VzczogcHJvY2Vzc0NvbG9yfTtcblJlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzLmJhY2tncm91bmRDb2xvciA9IGNvbG9yQXR0cmlidXRlcztcblJlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzLmJvcmRlckJvdHRvbUNvbG9yID0gY29sb3JBdHRyaWJ1dGVzO1xuUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMuYm9yZGVyQ29sb3IgPSBjb2xvckF0dHJpYnV0ZXM7XG5SZWFjdE5hdGl2ZVN0eWxlQXR0cmlidXRlcy5ib3JkZXJMZWZ0Q29sb3IgPSBjb2xvckF0dHJpYnV0ZXM7XG5SZWFjdE5hdGl2ZVN0eWxlQXR0cmlidXRlcy5ib3JkZXJSaWdodENvbG9yID0gY29sb3JBdHRyaWJ1dGVzO1xuUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMuYm9yZGVyVG9wQ29sb3IgPSBjb2xvckF0dHJpYnV0ZXM7XG5SZWFjdE5hdGl2ZVN0eWxlQXR0cmlidXRlcy5ib3JkZXJTdGFydENvbG9yID0gY29sb3JBdHRyaWJ1dGVzO1xuUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMuYm9yZGVyRW5kQ29sb3IgPSBjb2xvckF0dHJpYnV0ZXM7XG5SZWFjdE5hdGl2ZVN0eWxlQXR0cmlidXRlcy5jb2xvciA9IGNvbG9yQXR0cmlidXRlcztcblJlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzLnNoYWRvd0NvbG9yID0gY29sb3JBdHRyaWJ1dGVzO1xuUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMudGV4dERlY29yYXRpb25Db2xvciA9IGNvbG9yQXR0cmlidXRlcztcblJlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzLnRpbnRDb2xvciA9IGNvbG9yQXR0cmlidXRlcztcblJlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzLnRleHRTaGFkb3dDb2xvciA9IGNvbG9yQXR0cmlidXRlcztcblJlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzLm92ZXJsYXlDb2xvciA9IGNvbG9yQXR0cmlidXRlcztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdE5hdGl2ZVN0eWxlQXR0cmlidXRlcztcbiJdfQ==