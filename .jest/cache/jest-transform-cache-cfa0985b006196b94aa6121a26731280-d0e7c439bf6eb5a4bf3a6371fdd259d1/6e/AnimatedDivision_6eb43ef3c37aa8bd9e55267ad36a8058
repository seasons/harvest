dbe509b29e68f1479d0a5863dbc77e1b
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var AnimatedInterpolation = require("./AnimatedInterpolation");

var AnimatedNode = require("./AnimatedNode");

var AnimatedValue = require("./AnimatedValue");

var AnimatedWithChildren = require("./AnimatedWithChildren");

var AnimatedDivision = function (_AnimatedWithChildren) {
  (0, _inherits2.default)(AnimatedDivision, _AnimatedWithChildren);

  function AnimatedDivision(a, b) {
    var _this;

    (0, _classCallCheck2.default)(this, AnimatedDivision);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimatedDivision).call(this));
    _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this;
  }

  (0, _createClass2.default)(AnimatedDivision, [{
    key: "__makeNative",
    value: function __makeNative() {
      this._a.__makeNative();

      this._b.__makeNative();

      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedDivision.prototype), "__makeNative", this).call(this);
    }
  }, {
    key: "__getValue",
    value: function __getValue() {
      var a = this._a.__getValue();

      var b = this._b.__getValue();

      if (b === 0) {
        console.error('Detected division by zero in AnimatedDivision');
      }

      return a / b;
    }
  }, {
    key: "interpolate",
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: "__attach",
    value: function __attach() {
      this._a.__addChild(this);

      this._b.__addChild(this);
    }
  }, {
    key: "__detach",
    value: function __detach() {
      this._a.__removeChild(this);

      this._b.__removeChild(this);

      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedDivision.prototype), "__detach", this).call(this);
    }
  }, {
    key: "__getNativeConfig",
    value: function __getNativeConfig() {
      return {
        type: 'division',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedDivision;
}(AnimatedWithChildren);

module.exports = AnimatedDivision;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFuaW1hdGVkRGl2aXNpb24uanMiXSwibmFtZXMiOlsiQW5pbWF0ZWRJbnRlcnBvbGF0aW9uIiwicmVxdWlyZSIsIkFuaW1hdGVkTm9kZSIsIkFuaW1hdGVkVmFsdWUiLCJBbmltYXRlZFdpdGhDaGlsZHJlbiIsIkFuaW1hdGVkRGl2aXNpb24iLCJhIiwiYiIsIl9hIiwiX2IiLCJfX21ha2VOYXRpdmUiLCJfX2dldFZhbHVlIiwiY29uc29sZSIsImVycm9yIiwiY29uZmlnIiwiX19hZGRDaGlsZCIsIl9fcmVtb3ZlQ2hpbGQiLCJ0eXBlIiwiaW5wdXQiLCJfX2dldE5hdGl2ZVRhZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQVNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEscUJBQXFCLEdBQUdDLE9BQU8sMkJBQXJDOztBQUNBLElBQU1DLFlBQVksR0FBR0QsT0FBTyxrQkFBNUI7O0FBQ0EsSUFBTUUsYUFBYSxHQUFHRixPQUFPLG1CQUE3Qjs7QUFDQSxJQUFNRyxvQkFBb0IsR0FBR0gsT0FBTywwQkFBcEM7O0lBSU1JLGdCOzs7QUFJSiw0QkFBWUMsQ0FBWixFQUFzQ0MsQ0FBdEMsRUFBZ0U7QUFBQTs7QUFBQTtBQUM5RDtBQUNBLFVBQUtDLEVBQUwsR0FBVSxPQUFPRixDQUFQLEtBQWEsUUFBYixHQUF3QixJQUFJSCxhQUFKLENBQWtCRyxDQUFsQixDQUF4QixHQUErQ0EsQ0FBekQ7QUFDQSxVQUFLRyxFQUFMLEdBQVUsT0FBT0YsQ0FBUCxLQUFhLFFBQWIsR0FBd0IsSUFBSUosYUFBSixDQUFrQkksQ0FBbEIsQ0FBeEIsR0FBK0NBLENBQXpEO0FBSDhEO0FBSS9EOzs7O21DQUVjO0FBQ2IsV0FBS0MsRUFBTCxDQUFRRSxZQUFSOztBQUNBLFdBQUtELEVBQUwsQ0FBUUMsWUFBUjs7QUFDQTtBQUNEOzs7aUNBRW9CO0FBQ25CLFVBQU1KLENBQUMsR0FBRyxLQUFLRSxFQUFMLENBQVFHLFVBQVIsRUFBVjs7QUFDQSxVQUFNSixDQUFDLEdBQUcsS0FBS0UsRUFBTCxDQUFRRSxVQUFSLEVBQVY7O0FBQ0EsVUFBSUosQ0FBQyxLQUFLLENBQVYsRUFBYTtBQUNYSyxRQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FBYywrQ0FBZDtBQUNEOztBQUNELGFBQU9QLENBQUMsR0FBR0MsQ0FBWDtBQUNEOzs7Z0NBRVdPLE0sRUFBd0Q7QUFDbEUsYUFBTyxJQUFJZCxxQkFBSixDQUEwQixJQUExQixFQUFnQ2MsTUFBaEMsQ0FBUDtBQUNEOzs7K0JBRWdCO0FBQ2YsV0FBS04sRUFBTCxDQUFRTyxVQUFSLENBQW1CLElBQW5COztBQUNBLFdBQUtOLEVBQUwsQ0FBUU0sVUFBUixDQUFtQixJQUFuQjtBQUNEOzs7K0JBRWdCO0FBQ2YsV0FBS1AsRUFBTCxDQUFRUSxhQUFSLENBQXNCLElBQXRCOztBQUNBLFdBQUtQLEVBQUwsQ0FBUU8sYUFBUixDQUFzQixJQUF0Qjs7QUFDQTtBQUNEOzs7d0NBRXdCO0FBQ3ZCLGFBQU87QUFDTEMsUUFBQUEsSUFBSSxFQUFFLFVBREQ7QUFFTEMsUUFBQUEsS0FBSyxFQUFFLENBQUMsS0FBS1YsRUFBTCxDQUFRVyxjQUFSLEVBQUQsRUFBMkIsS0FBS1YsRUFBTCxDQUFRVSxjQUFSLEVBQTNCO0FBRkYsT0FBUDtBQUlEOzs7RUE3QzRCZixvQjs7QUFnRC9CZ0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCaEIsZ0JBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IEFuaW1hdGVkSW50ZXJwb2xhdGlvbiA9IHJlcXVpcmUoJy4vQW5pbWF0ZWRJbnRlcnBvbGF0aW9uJyk7XG5jb25zdCBBbmltYXRlZE5vZGUgPSByZXF1aXJlKCcuL0FuaW1hdGVkTm9kZScpO1xuY29uc3QgQW5pbWF0ZWRWYWx1ZSA9IHJlcXVpcmUoJy4vQW5pbWF0ZWRWYWx1ZScpO1xuY29uc3QgQW5pbWF0ZWRXaXRoQ2hpbGRyZW4gPSByZXF1aXJlKCcuL0FuaW1hdGVkV2l0aENoaWxkcmVuJyk7XG5cbmltcG9ydCB0eXBlIHtJbnRlcnBvbGF0aW9uQ29uZmlnVHlwZX0gZnJvbSAnLi9BbmltYXRlZEludGVycG9sYXRpb24nO1xuXG5jbGFzcyBBbmltYXRlZERpdmlzaW9uIGV4dGVuZHMgQW5pbWF0ZWRXaXRoQ2hpbGRyZW4ge1xuICBfYTogQW5pbWF0ZWROb2RlO1xuICBfYjogQW5pbWF0ZWROb2RlO1xuXG4gIGNvbnN0cnVjdG9yKGE6IEFuaW1hdGVkTm9kZSB8IG51bWJlciwgYjogQW5pbWF0ZWROb2RlIHwgbnVtYmVyKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9hID0gdHlwZW9mIGEgPT09ICdudW1iZXInID8gbmV3IEFuaW1hdGVkVmFsdWUoYSkgOiBhO1xuICAgIHRoaXMuX2IgPSB0eXBlb2YgYiA9PT0gJ251bWJlcicgPyBuZXcgQW5pbWF0ZWRWYWx1ZShiKSA6IGI7XG4gIH1cblxuICBfX21ha2VOYXRpdmUoKSB7XG4gICAgdGhpcy5fYS5fX21ha2VOYXRpdmUoKTtcbiAgICB0aGlzLl9iLl9fbWFrZU5hdGl2ZSgpO1xuICAgIHN1cGVyLl9fbWFrZU5hdGl2ZSgpO1xuICB9XG5cbiAgX19nZXRWYWx1ZSgpOiBudW1iZXIge1xuICAgIGNvbnN0IGEgPSB0aGlzLl9hLl9fZ2V0VmFsdWUoKTtcbiAgICBjb25zdCBiID0gdGhpcy5fYi5fX2dldFZhbHVlKCk7XG4gICAgaWYgKGIgPT09IDApIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0RldGVjdGVkIGRpdmlzaW9uIGJ5IHplcm8gaW4gQW5pbWF0ZWREaXZpc2lvbicpO1xuICAgIH1cbiAgICByZXR1cm4gYSAvIGI7XG4gIH1cblxuICBpbnRlcnBvbGF0ZShjb25maWc6IEludGVycG9sYXRpb25Db25maWdUeXBlKTogQW5pbWF0ZWRJbnRlcnBvbGF0aW9uIHtcbiAgICByZXR1cm4gbmV3IEFuaW1hdGVkSW50ZXJwb2xhdGlvbih0aGlzLCBjb25maWcpO1xuICB9XG5cbiAgX19hdHRhY2goKTogdm9pZCB7XG4gICAgdGhpcy5fYS5fX2FkZENoaWxkKHRoaXMpO1xuICAgIHRoaXMuX2IuX19hZGRDaGlsZCh0aGlzKTtcbiAgfVxuXG4gIF9fZGV0YWNoKCk6IHZvaWQge1xuICAgIHRoaXMuX2EuX19yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICB0aGlzLl9iLl9fcmVtb3ZlQ2hpbGQodGhpcyk7XG4gICAgc3VwZXIuX19kZXRhY2goKTtcbiAgfVxuXG4gIF9fZ2V0TmF0aXZlQ29uZmlnKCk6IGFueSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6ICdkaXZpc2lvbicsXG4gICAgICBpbnB1dDogW3RoaXMuX2EuX19nZXROYXRpdmVUYWcoKSwgdGhpcy5fYi5fX2dldE5hdGl2ZVRhZygpXSxcbiAgICB9O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQW5pbWF0ZWREaXZpc2lvbjtcbiJdfQ==