34726ea75e2d80981fbc4c0bdc648973
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = extractResponder;

var _reactNative = require("react-native");

var responderKeys = Object.keys(_reactNative.PanResponder.create({}).panHandlers);
var numResponderKeys = responderKeys.length;

function extractResponder(props, ref) {
  var onPress = props.onPress,
      disabled = props.disabled,
      onPressIn = props.onPressIn,
      onPressOut = props.onPressOut,
      onLongPress = props.onLongPress,
      delayPressIn = props.delayPressIn,
      delayPressOut = props.delayPressOut,
      delayLongPress = props.delayLongPress,
      pointerEvents = props.pointerEvents;
  var o = {};
  var responsible = false;

  for (var i = 0; i < numResponderKeys; i++) {
    var key = responderKeys[i];
    var value = props[key];

    if (value) {
      responsible = true;
      o[key] = value;
    }
  }

  if (pointerEvents) {
    o.pointerEvents = pointerEvents;
  }

  var hasTouchableProperty = disabled != null || onPress || onPressIn || onPressOut || onLongPress || delayPressIn || delayPressOut || delayLongPress;

  if (hasTouchableProperty) {
    responsible = true;
    o.onResponderMove = ref.touchableHandleResponderMove;
    o.onResponderGrant = ref.touchableHandleResponderGrant;
    o.onResponderRelease = ref.touchableHandleResponderRelease;
    o.onResponderTerminate = ref.touchableHandleResponderTerminate;
    o.onStartShouldSetResponder = ref.touchableHandleStartShouldSetResponder;
    o.onResponderTerminationRequest = ref.touchableHandleResponderTerminationRequest;
  }

  if (responsible) {
    o.responsible = true;
  }

  return o;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4dHJhY3RSZXNwb25kZXIudHMiXSwibmFtZXMiOlsicmVzcG9uZGVyS2V5cyIsIk9iamVjdCIsIlBhblJlc3BvbmRlciIsIm51bVJlc3BvbmRlcktleXMiLCJvblByZXNzIiwiZGlzYWJsZWQiLCJvblByZXNzSW4iLCJvblByZXNzT3V0Iiwib25Mb25nUHJlc3MiLCJkZWxheVByZXNzSW4iLCJkZWxheVByZXNzT3V0IiwiZGVsYXlMb25nUHJlc3MiLCJwb2ludGVyRXZlbnRzIiwicHJvcHMiLCJvIiwicmVzcG9uc2libGUiLCJpIiwia2V5IiwidmFsdWUiLCJoYXNUb3VjaGFibGVQcm9wZXJ0eSIsInJlZiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsY0FBQSxDQUFBOztBQUdBLElBQU1BLGFBQWEsR0FBR0MsTUFBTSxDQUFOQSxJQUFBQSxDQUFZQyxZQUFBQSxDQUFBQSxZQUFBQSxDQUFBQSxNQUFBQSxDQUFBQSxFQUFBQSxFQUFsQyxXQUFzQkQsQ0FBdEI7QUFDQSxJQUFNRSxnQkFBZ0IsR0FBR0gsYUFBYSxDQUF0QyxNQUFBOztBQUVlLFNBQUEsZ0JBQUEsQ0FBQSxLQUFBLEVBQUEsR0FBQSxFQUliO0FBQUEsTUFFRUksT0FGRixHQVdJUyxLQVhKLENBQUEsT0FBQTtBQUFBLE1BR0VSLFFBSEYsR0FXSVEsS0FYSixDQUFBLFFBQUE7QUFBQSxNQUlFUCxTQUpGLEdBV0lPLEtBWEosQ0FBQSxTQUFBO0FBQUEsTUFLRU4sVUFMRixHQVdJTSxLQVhKLENBQUEsVUFBQTtBQUFBLE1BTUVMLFdBTkYsR0FXSUssS0FYSixDQUFBLFdBQUE7QUFBQSxNQU9FSixZQVBGLEdBV0lJLEtBWEosQ0FBQSxZQUFBO0FBQUEsTUFRRUgsYUFSRixHQVdJRyxLQVhKLENBQUEsYUFBQTtBQUFBLE1BU0VGLGNBVEYsR0FXSUUsS0FYSixDQUFBLGNBQUE7QUFBQSxNQVVFRCxhQVZGLEdBV0lDLEtBWEosQ0FBQSxhQUFBO0FBWUEsTUFBTUMsQ0FFTCxHQUZELEVBQUE7QUFJQSxNQUFJQyxXQUFXLEdBQWYsS0FBQTs7QUFDQSxPQUFLLElBQUlDLENBQUMsR0FBVixDQUFBLEVBQWdCQSxDQUFDLEdBQWpCLGdCQUFBLEVBQXNDQSxDQUF0QyxFQUFBLEVBQTJDO0FBQ3pDLFFBQU1DLEdBQUcsR0FBR2pCLGFBQWEsQ0FBekIsQ0FBeUIsQ0FBekI7QUFDQSxRQUFNa0IsS0FBSyxHQUFHTCxLQUFLLENBQW5CLEdBQW1CLENBQW5COztBQUNBLFFBQUEsS0FBQSxFQUFXO0FBQ1RFLE1BQUFBLFdBQVcsR0FBWEEsSUFBQUE7QUFDQUQsTUFBQUEsQ0FBQyxDQUFEQSxHQUFDLENBQURBLEdBQUFBLEtBQUFBO0FBRUg7QUFFRDs7QUFBQSxNQUFBLGFBQUEsRUFBbUI7QUFDakJBLElBQUFBLENBQUMsQ0FBREEsYUFBQUEsR0FBQUEsYUFBQUE7QUFHRjs7QUFBQSxNQUFNSyxvQkFBb0IsR0FDeEJkLFFBQVEsSUFBUkEsSUFBQUEsSUFBQUEsT0FBQUEsSUFBQUEsU0FBQUEsSUFBQUEsVUFBQUEsSUFBQUEsV0FBQUEsSUFBQUEsWUFBQUEsSUFBQUEsYUFBQUEsSUFERixjQUFBOztBQVVBLE1BQUEsb0JBQUEsRUFBMEI7QUFDeEJVLElBQUFBLFdBQVcsR0FBWEEsSUFBQUE7QUFDQUQsSUFBQUEsQ0FBQyxDQUFEQSxlQUFBQSxHQUFvQk0sR0FBRyxDQUF2Qk4sNEJBQUFBO0FBQ0FBLElBQUFBLENBQUMsQ0FBREEsZ0JBQUFBLEdBQXFCTSxHQUFHLENBQXhCTiw2QkFBQUE7QUFDQUEsSUFBQUEsQ0FBQyxDQUFEQSxrQkFBQUEsR0FBdUJNLEdBQUcsQ0FBMUJOLCtCQUFBQTtBQUNBQSxJQUFBQSxDQUFDLENBQURBLG9CQUFBQSxHQUF5Qk0sR0FBRyxDQUE1Qk4saUNBQUFBO0FBQ0FBLElBQUFBLENBQUMsQ0FBREEseUJBQUFBLEdBQThCTSxHQUFHLENBQWpDTixzQ0FBQUE7QUFDQUEsSUFBQUEsQ0FBQyxDQUFEQSw2QkFBQUEsR0FDRU0sR0FBRyxDQURMTiwwQ0FBQUE7QUFJRjs7QUFBQSxNQUFBLFdBQUEsRUFBaUI7QUFDZkEsSUFBQUEsQ0FBQyxDQUFEQSxXQUFBQSxHQUFBQSxJQUFBQTtBQUdGOztBQUFBLFNBQUEsQ0FBQTtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFuUmVzcG9uZGVyIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7IFJlc3BvbmRlckluc3RhbmNlUHJvcHMsIFJlc3BvbmRlclByb3BzIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNvbnN0IHJlc3BvbmRlcktleXMgPSBPYmplY3Qua2V5cyhQYW5SZXNwb25kZXIuY3JlYXRlKHt9KS5wYW5IYW5kbGVycyk7XG5jb25zdCBudW1SZXNwb25kZXJLZXlzID0gcmVzcG9uZGVyS2V5cy5sZW5ndGg7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGV4dHJhY3RSZXNwb25kZXIoXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gIHByb3BzOiB7IFt4OiBzdHJpbmddOiBhbnkgfSAmIFJlc3BvbmRlclByb3BzLFxuICByZWY6IFJlc3BvbmRlckluc3RhbmNlUHJvcHMsXG4pIHtcbiAgY29uc3Qge1xuICAgIG9uUHJlc3MsXG4gICAgZGlzYWJsZWQsXG4gICAgb25QcmVzc0luLFxuICAgIG9uUHJlc3NPdXQsXG4gICAgb25Mb25nUHJlc3MsXG4gICAgZGVsYXlQcmVzc0luLFxuICAgIGRlbGF5UHJlc3NPdXQsXG4gICAgZGVsYXlMb25nUHJlc3MsXG4gICAgcG9pbnRlckV2ZW50cyxcbiAgfSA9IHByb3BzO1xuICBjb25zdCBvOiB7XG4gICAgW3RvdWNoYWJsZVByb3BlcnR5OiBzdHJpbmddOiB1bmtub3duO1xuICB9ID0ge307XG5cbiAgbGV0IHJlc3BvbnNpYmxlID0gZmFsc2U7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtUmVzcG9uZGVyS2V5czsgaSsrKSB7XG4gICAgY29uc3Qga2V5ID0gcmVzcG9uZGVyS2V5c1tpXTtcbiAgICBjb25zdCB2YWx1ZSA9IHByb3BzW2tleV07XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICByZXNwb25zaWJsZSA9IHRydWU7XG4gICAgICBvW2tleV0gPSB2YWx1ZTtcbiAgICB9XG4gIH1cblxuICBpZiAocG9pbnRlckV2ZW50cykge1xuICAgIG8ucG9pbnRlckV2ZW50cyA9IHBvaW50ZXJFdmVudHM7XG4gIH1cblxuICBjb25zdCBoYXNUb3VjaGFibGVQcm9wZXJ0eSA9XG4gICAgZGlzYWJsZWQgIT0gbnVsbCB8fFxuICAgIG9uUHJlc3MgfHxcbiAgICBvblByZXNzSW4gfHxcbiAgICBvblByZXNzT3V0IHx8XG4gICAgb25Mb25nUHJlc3MgfHxcbiAgICBkZWxheVByZXNzSW4gfHxcbiAgICBkZWxheVByZXNzT3V0IHx8XG4gICAgZGVsYXlMb25nUHJlc3M7XG5cbiAgaWYgKGhhc1RvdWNoYWJsZVByb3BlcnR5KSB7XG4gICAgcmVzcG9uc2libGUgPSB0cnVlO1xuICAgIG8ub25SZXNwb25kZXJNb3ZlID0gcmVmLnRvdWNoYWJsZUhhbmRsZVJlc3BvbmRlck1vdmU7XG4gICAgby5vblJlc3BvbmRlckdyYW50ID0gcmVmLnRvdWNoYWJsZUhhbmRsZVJlc3BvbmRlckdyYW50O1xuICAgIG8ub25SZXNwb25kZXJSZWxlYXNlID0gcmVmLnRvdWNoYWJsZUhhbmRsZVJlc3BvbmRlclJlbGVhc2U7XG4gICAgby5vblJlc3BvbmRlclRlcm1pbmF0ZSA9IHJlZi50b3VjaGFibGVIYW5kbGVSZXNwb25kZXJUZXJtaW5hdGU7XG4gICAgby5vblN0YXJ0U2hvdWxkU2V0UmVzcG9uZGVyID0gcmVmLnRvdWNoYWJsZUhhbmRsZVN0YXJ0U2hvdWxkU2V0UmVzcG9uZGVyO1xuICAgIG8ub25SZXNwb25kZXJUZXJtaW5hdGlvblJlcXVlc3QgPVxuICAgICAgcmVmLnRvdWNoYWJsZUhhbmRsZVJlc3BvbmRlclRlcm1pbmF0aW9uUmVxdWVzdDtcbiAgfVxuXG4gIGlmIChyZXNwb25zaWJsZSkge1xuICAgIG8ucmVzcG9uc2libGUgPSB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIG87XG59XG4iXX0=